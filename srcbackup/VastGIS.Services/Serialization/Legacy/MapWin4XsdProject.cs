using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Diagnostics;
using System.Xml.Schema;
using System.Xml.Serialization;
namespace VastGIS.Services.Serialization.Legacy
{
    // <auto-generated>
    //     This code was generated by a tool.
    //     Runtime Version:4.0.30319.34011
    //
    //     Changes to this file may cause incorrect behavior and will be lost if
    //     the code is regenerated.
    // </auto-generated>
    //------------------------------------------------------------------------------

    // 
    // This source code was auto-generated by xsd, Version=4.0.30319.33440.
    // 


    /// <remarks/>
    [GeneratedCode("xsd", "4.0.30319.33440")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(AnonymousType = true)]
    [XmlRoot(Namespace = "", IsNullable = false)]
    public class Layers
    {
        private LayersLayer[] layerField;

        /// <remarks/>
        [XmlElement("Layer", Form = XmlSchemaForm.Unqualified)]
        public LayersLayer[] Layer
        {
            get { return layerField; }
            set { layerField = value; }
        }
    }

    /// <remarks/>
    [GeneratedCode("xsd", "4.0.30319.33440")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(AnonymousType = true)]
    public class LayersLayer
    {
        private string dynamicVisibilityField;
        private string expandedField;
        private string filenameField;
        private string groupIndexField;
        private string groupNameField;
        private string handleField;
        private LayersLayerImageClass[] imageClassField;
        private string layerKeyField;
        private string layerNameField;
        private string layerTypeField;
        private string layerVisibleField;
        private string maxVisibleScaleField;
        private string minVisibleScaleField;
        private string nameField;
        private string positionInGroupField;
        private LayersLayerShapefileClass[] shapefileClassField;
        private string tagField;

        /// <remarks/>
        [XmlElement("ShapefileClass", Form = XmlSchemaForm.Unqualified)]
        public LayersLayerShapefileClass[] ShapefileClass
        {
            get { return shapefileClassField; }
            set { shapefileClassField = value; }
        }

        /// <remarks/>
        [XmlElement("ImageClass", Form = XmlSchemaForm.Unqualified)]
        public LayersLayerImageClass[] ImageClass
        {
            get { return imageClassField; }
            set { imageClassField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string LayerType
        {
            get { return layerTypeField; }
            set { layerTypeField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string LayerName
        {
            get { return layerNameField; }
            set { layerNameField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string LayerVisible
        {
            get { return layerVisibleField; }
            set { layerVisibleField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string LayerKey
        {
            get { return layerKeyField; }
            set { layerKeyField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string Filename
        {
            get { return filenameField; }
            set { filenameField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string DynamicVisibility
        {
            get { return dynamicVisibilityField; }
            set { dynamicVisibilityField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string MinVisibleScale
        {
            get { return minVisibleScaleField; }
            set { minVisibleScaleField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string MaxVisibleScale
        {
            get { return maxVisibleScaleField; }
            set { maxVisibleScaleField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string Name
        {
            get { return nameField; }
            set { nameField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string Tag
        {
            get { return tagField; }
            set { tagField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string Expanded
        {
            get { return expandedField; }
            set { expandedField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string Handle
        {
            get { return handleField; }
            set { handleField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string PositionInGroup
        {
            get { return positionInGroupField; }
            set { positionInGroupField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string GroupIndex
        {
            get { return groupIndexField; }
            set { groupIndexField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string GroupName
        {
            get { return groupNameField; }
            set { groupNameField = value; }
        }
    }

    /// <remarks/>
    [GeneratedCode("xsd", "4.0.30319.33440")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(AnonymousType = true)]
    public class LayersLayerShapefileClass
    {
        private LayersLayerShapefileClassChartsClass[] chartsClassField;
        private LayersLayerShapefileClassDefaultDrawingOptions[] defaultDrawingOptionsField;
        private LabelsClass[] labelsClassField;
        private string shapefileCategoriesClassField;

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified)]
        public string ShapefileCategoriesClass
        {
            get { return shapefileCategoriesClassField; }
            set { shapefileCategoriesClassField = value; }
        }

        /// <remarks/>
        [XmlElement("DefaultDrawingOptions", Form = XmlSchemaForm.Unqualified)]
        public LayersLayerShapefileClassDefaultDrawingOptions[] DefaultDrawingOptions
        {
            get { return defaultDrawingOptionsField; }
            set { defaultDrawingOptionsField = value; }
        }

        /// <remarks/>
        [XmlElement("LabelsClass")]
        public LabelsClass[] LabelsClass
        {
            get { return labelsClassField; }
            set { labelsClassField = value; }
        }

        /// <remarks/>
        [XmlElement("ChartsClass", Form = XmlSchemaForm.Unqualified)]
        public LayersLayerShapefileClassChartsClass[] ChartsClass
        {
            get { return chartsClassField; }
            set { chartsClassField = value; }
        }
    }

    /// <remarks/>
    [GeneratedCode("xsd", "4.0.30319.33440")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(AnonymousType = true)]
    public class LayersLayerShapefileClassDefaultDrawingOptions
    {
        private string fillBgColorField;
        private string fillBgTransparentField;
        private string fillColor2Field;
        private string fillColorField;
        private string fillGradientBoundsField;
        private string fillGradientTypeField;
        private string fillHatchStyleField;
        private string fillTransparencyField;
        private string fillTypeField;
        private string fillVisibleField;
        private string fontNameField;
        private string lineColorField;
        private LayersLayerShapefileClassDefaultDrawingOptionsLinePatternClass[] linePatternClassField;
        private string pointCharcterField;
        private string pointNumSidesField;
        private string pointShapeRatioField;
        private string pointShapeTypeField;
        private string pointSizeField;
        private string pointSymbolTypeField;
        private string scaleXField;
        private string scaleYField;

        /// <remarks/>
        [XmlElement("LinePatternClass", Form = XmlSchemaForm.Unqualified)]
        public LayersLayerShapefileClassDefaultDrawingOptionsLinePatternClass[] LinePatternClass
        {
            get { return linePatternClassField; }
            set { linePatternClassField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string FillBgColor
        {
            get { return fillBgColorField; }
            set { fillBgColorField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string FillColor
        {
            get { return fillColorField; }
            set { fillColorField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string LineColor
        {
            get { return lineColorField; }
            set { lineColorField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string PointShapeRatio
        {
            get { return pointShapeRatioField; }
            set { pointShapeRatioField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string PointSize
        {
            get { return pointSizeField; }
            set { pointSizeField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string FillBgTransparent
        {
            get { return fillBgTransparentField; }
            set { fillBgTransparentField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string FillHatchStyle
        {
            get { return fillHatchStyleField; }
            set { fillHatchStyleField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string FillTransparency
        {
            get { return fillTransparencyField; }
            set { fillTransparencyField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string FillType
        {
            get { return fillTypeField; }
            set { fillTypeField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string FillColor2
        {
            get { return fillColor2Field; }
            set { fillColor2Field = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string ScaleX
        {
            get { return scaleXField; }
            set { scaleXField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string ScaleY
        {
            get { return scaleYField; }
            set { scaleYField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string FillVisible
        {
            get { return fillVisibleField; }
            set { fillVisibleField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string FillGradientBounds
        {
            get { return fillGradientBoundsField; }
            set { fillGradientBoundsField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string FillGradientType
        {
            get { return fillGradientTypeField; }
            set { fillGradientTypeField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string PointNumSides
        {
            get { return pointNumSidesField; }
            set { pointNumSidesField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string PointShapeType
        {
            get { return pointShapeTypeField; }
            set { pointShapeTypeField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string FontName
        {
            get { return fontNameField; }
            set { fontNameField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string PointCharcter
        {
            get { return pointCharcterField; }
            set { pointCharcterField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string PointSymbolType
        {
            get { return pointSymbolTypeField; }
            set { pointSymbolTypeField = value; }
        }
    }

    /// <remarks/>
    [GeneratedCode("xsd", "4.0.30319.33440")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(AnonymousType = true)]
    public class LayersLayerShapefileClassDefaultDrawingOptionsLinePatternClass
    {
        private string keyField;

        private LayersLayerShapefileClassDefaultDrawingOptionsLinePatternClassLineSegmentsLineSegmentClass[][]
            lineSegmentsField;

        private string transparencyField;

        /// <remarks/>
        [XmlArray(Form = XmlSchemaForm.Unqualified)]
        [XmlArrayItem("LineSegmentClass",
            typeof(LayersLayerShapefileClassDefaultDrawingOptionsLinePatternClassLineSegmentsLineSegmentClass),
            Form = XmlSchemaForm.Unqualified, IsNullable = false)]
        public LayersLayerShapefileClassDefaultDrawingOptionsLinePatternClassLineSegmentsLineSegmentClass[][]
            LineSegments
        {
            get { return lineSegmentsField; }
            set { lineSegmentsField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string Key
        {
            get { return keyField; }
            set { keyField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string Transparency
        {
            get { return transparencyField; }
            set { transparencyField = value; }
        }
    }

    /// <remarks/>
    [GeneratedCode("xsd", "4.0.30319.33440")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(AnonymousType = true)]
    public class LayersLayerShapefileClassDefaultDrawingOptionsLinePatternClassLineSegmentsLineSegmentClass
    {
        private string colorField;
        private string lineStyleField;
        private string lineTypeField;
        private string lineWidthField;
        private string markerField;
        private string markerFlipFirstField;
        private string markerIntervalField;
        private string markerOffsetField;
        private string markerOrientationField;
        private string markerOutlineColorField;
        private string markerSizeField;

        /// <remarks/>
        [XmlAttribute]
        public string LineType
        {
            get { return lineTypeField; }
            set { lineTypeField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string Color
        {
            get { return colorField; }
            set { colorField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string MarkerOutlineColor
        {
            get { return markerOutlineColorField; }
            set { markerOutlineColorField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string LineWidth
        {
            get { return lineWidthField; }
            set { lineWidthField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string MarkerSize
        {
            get { return markerSizeField; }
            set { markerSizeField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string MarkerInterval
        {
            get { return markerIntervalField; }
            set { markerIntervalField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string MarkerOffset
        {
            get { return markerOffsetField; }
            set { markerOffsetField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string LineStyle
        {
            get { return lineStyleField; }
            set { lineStyleField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string Marker
        {
            get { return markerField; }
            set { markerField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string MarkerOrientation
        {
            get { return markerOrientationField; }
            set { markerOrientationField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string MarkerFlipFirst
        {
            get { return markerFlipFirstField; }
            set { markerFlipFirstField = value; }
        }
    }

    /// <remarks/>
    [GeneratedCode("xsd", "4.0.30319.33440")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(AnonymousType = true)]
    [XmlRoot(Namespace = "", IsNullable = false)]
    public class LabelsClass
    {
        private string alignmentField;
        private string autoOffsetField;
        private string avoidCollisionsField;
        private string dynamicVisibilityField;
        private string expressionField;
        private string fontColorField;
        private string fontNameField;
        private string frameBackColor2Field;
        private string frameBackColorField;
        private string frameGradientModeField;
        private string frameVisibleField;
        private string generatedField;
        private string haloColorField;
        private string haloVisibleField;
        private string maxVisibleScaleField;
        private string offsetYField;
        private string positioningField;
        private string shadowVisibleField;

        /// <remarks/>
        [XmlAttribute]
        public string Alignment
        {
            get { return alignmentField; }
            set { alignmentField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string FontColor
        {
            get { return fontColorField; }
            set { fontColorField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string FrameBackColor2
        {
            get { return frameBackColor2Field; }
            set { frameBackColor2Field = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string FrameGradientMode
        {
            get { return frameGradientModeField; }
            set { frameGradientModeField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string FrameVisible
        {
            get { return frameVisibleField; }
            set { frameVisibleField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string Generated
        {
            get { return generatedField; }
            set { generatedField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string MaxVisibleScale
        {
            get { return maxVisibleScaleField; }
            set { maxVisibleScaleField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string AutoOffset
        {
            get { return autoOffsetField; }
            set { autoOffsetField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string DynamicVisibility
        {
            get { return dynamicVisibilityField; }
            set { dynamicVisibilityField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string AvoidCollisions
        {
            get { return avoidCollisionsField; }
            set { avoidCollisionsField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string Positioning
        {
            get { return positioningField; }
            set { positioningField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string Expression
        {
            get { return expressionField; }
            set { expressionField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string FrameBackColor
        {
            get { return frameBackColorField; }
            set { frameBackColorField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string FontName
        {
            get { return fontNameField; }
            set { fontNameField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string HaloColor
        {
            get { return haloColorField; }
            set { haloColorField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string HaloVisible
        {
            get { return haloVisibleField; }
            set { haloVisibleField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string OffsetY
        {
            get { return offsetYField; }
            set { offsetYField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string ShadowVisible
        {
            get { return shadowVisibleField; }
            set { shadowVisibleField = value; }
        }
    }

    /// <remarks/>
    [GeneratedCode("xsd", "4.0.30319.33440")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(AnonymousType = true)]
    public class LayersLayerShapefileClassChartsClass
    {
        private string valuesFontNameField;
        private string visibleField;

        /// <remarks/>
        [XmlAttribute]
        public string ValuesFontName
        {
            get { return valuesFontNameField; }
            set { valuesFontNameField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string Visible
        {
            get { return visibleField; }
            set { visibleField = value; }
        }
    }

    /// <remarks/>
    [GeneratedCode("xsd", "4.0.30319.33440")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(AnonymousType = true)]
    public class LayersLayerImageClass
    {
        private string downsamplingModeField;
        private string keyField;
        private LabelsClass[] labelsClassField;
        private string setToGreyField;
        private string transparencyColor2Field;
        private string transparencyColorField;
        private string transparencyPercentField;
        private string upsamplingModeField;
        private string useTransparencyColorField;

        /// <remarks/>
        [XmlElement("LabelsClass")]
        public LabelsClass[] LabelsClass
        {
            get { return labelsClassField; }
            set { labelsClassField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string Key
        {
            get { return keyField; }
            set { keyField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string SetToGrey
        {
            get { return setToGreyField; }
            set { setToGreyField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string TransparencyColor
        {
            get { return transparencyColorField; }
            set { transparencyColorField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string TransparencyColor2
        {
            get { return transparencyColor2Field; }
            set { transparencyColor2Field = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string UseTransparencyColor
        {
            get { return useTransparencyColorField; }
            set { useTransparencyColorField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string TransparencyPercent
        {
            get { return transparencyPercentField; }
            set { transparencyPercentField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string DownsamplingMode
        {
            get { return downsamplingModeField; }
            set { downsamplingModeField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string UpsamplingMode
        {
            get { return upsamplingModeField; }
            set { upsamplingModeField = value; }
        }
    }

    /// <remarks/>
    [GeneratedCode("xsd", "4.0.30319.33440")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(AnonymousType = true)]
    [XmlRoot(Namespace = "", IsNullable = false)]
    public class Plugin
    {
        private string keyField;
        private string settingsStringField;

        /// <remarks/>
        [XmlAttribute]
        public string SettingsString
        {
            get { return settingsStringField; }
            set { settingsStringField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string Key
        {
            get { return keyField; }
            set { keyField = value; }
        }
    }

    /// <remarks/>
    [GeneratedCode("xsd", "4.0.30319.33440")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(AnonymousType = true)]
    [XmlRoot(Namespace = "", IsNullable = true)]
    public class Image
    {
        private string typeField;
        private string valueField;

        /// <remarks/>
        [XmlAttribute]
        public string Type
        {
            get { return typeField; }
            set { typeField = value; }
        }

        /// <remarks/>
        [XmlText]
        public string Value
        {
            get { return valueField; }
            set { valueField = value; }
        }
    }

    /// <remarks/>
    [GeneratedCode("xsd", "4.0.30319.33440")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(AnonymousType = true)]
    [XmlRoot(Namespace = "", IsNullable = false)]
    public class Mapwin
    {
        private MapwinMapWindow4[] mapWindow4Field;
        private MapwinMapWinGIS[] mapWinGISField;
        private string nameField;
        private string typeField;
        private string versionField;

        /// <remarks/>
        [XmlElement("MapWinGIS", Form = XmlSchemaForm.Unqualified)]
        public MapwinMapWinGIS[] MapWinGIS
        {
            get { return mapWinGISField; }
            set { mapWinGISField = value; }
        }

        /// <remarks/>
        [XmlElement("MapWindow4", Form = XmlSchemaForm.Unqualified)]
        public MapwinMapWindow4[] MapWindow4
        {
            get { return mapWindow4Field; }
            set { mapWindow4Field = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string name
        {
            get { return nameField; }
            set { nameField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string type
        {
            get { return typeField; }
            set { typeField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string version
        {
            get { return versionField; }
            set { versionField = value; }
        }
    }

    /// <remarks/>
    [GeneratedCode("xsd", "4.0.30319.33440")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(AnonymousType = true)]
    public class MapwinMapWinGIS
    {
        private string fileTypeField;
        private string fileVersionField;
        private LayersLayer[][] layersField;
        private MapwinMapWinGISMapState[] mapStateField;
        private string ocxVersionField;

        /// <remarks/>
        [XmlElement("MapState", Form = XmlSchemaForm.Unqualified)]
        public MapwinMapWinGISMapState[] MapState
        {
            get { return mapStateField; }
            set { mapStateField = value; }
        }

        /// <remarks/>
        [XmlArrayItem("Layer", typeof(LayersLayer), Form = XmlSchemaForm.Unqualified, IsNullable = false)]
        public LayersLayer[][] Layers
        {
            get { return layersField; }
            set { layersField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string OcxVersion
        {
            get { return ocxVersionField; }
            set { ocxVersionField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string FileType
        {
            get { return fileTypeField; }
            set { fileTypeField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string FileVersion
        {
            get { return fileVersionField; }
            set { fileVersionField = value; }
        }
    }

    /// <remarks/>
    [GeneratedCode("xsd", "4.0.30319.33440")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(AnonymousType = true)]
    public class MapwinMapWinGISMapState
    {
        private string extentsBottomField;
        private string extentsLeftField;
        private string extentsPadField;
        private string extentsRightField;
        private string extentsTopField;
        private string sendMouseDownField;
        private string sendMouseMoveField;
        private string sendMouseUpField;
        private string sendSelectBoxFinalField;
        private string trapRightMouseDownField;

        /// <remarks/>
        [XmlAttribute]
        public string SendMouseMove
        {
            get { return sendMouseMoveField; }
            set { sendMouseMoveField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string SendMouseDown
        {
            get { return sendMouseDownField; }
            set { sendMouseDownField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string SendMouseUp
        {
            get { return sendMouseUpField; }
            set { sendMouseUpField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string SendSelectBoxFinal
        {
            get { return sendSelectBoxFinalField; }
            set { sendSelectBoxFinalField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string TrapRightMouseDown
        {
            get { return trapRightMouseDownField; }
            set { trapRightMouseDownField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string ExtentsLeft
        {
            get { return extentsLeftField; }
            set { extentsLeftField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string ExtentsRight
        {
            get { return extentsRightField; }
            set { extentsRightField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string ExtentsBottom
        {
            get { return extentsBottomField; }
            set { extentsBottomField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string ExtentsTop
        {
            get { return extentsTopField; }
            set { extentsTopField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string ExtentsPad
        {
            get { return extentsPadField; }
            set { extentsPadField = value; }
        }
    }

    /// <remarks/>
    [GeneratedCode("xsd", "4.0.30319.33440")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(AnonymousType = true)]
    public class MapwinMapWindow4
    {
        private MapwinMapWindow4ApplicationPlugins[] applicationPluginsField;
        private string bookmarksField;
        private string configurationPathField;
        private string floatingScaleBarBackcolorField;
        private string floatingScaleBarForecolorField;
        private string floatingScaleBarPositionField;
        private string floatingScaleBarUnitField;
        private MapwinMapWindow4GroupsGroup[][] groupsField;
        private LayersLayer[][] layersField;
        private string mapResizeBehaviorField;
        private string mapUnitsField;
        private Plugin[][] pluginsField;
        private MapwinMapWindow4PreviewMap[] previewMapField;
        private string projectProjectionField;
        private string projectProjectionWKTField;
        private string saveShapeSettingsField;
        private string showFloatingScaleBarField;
        private string showStatusBarCoords_AlternateField;
        private string showStatusBarCoords_ProjectedField;
        private string statusBarAlternateCoordsNumDecimalsField;
        private string statusBarAlternateCoordsUseCommasField;
        private string statusBarCoordsNumDecimalsField;
        private string statusBarCoordsUseCommasField;
        private string viewBackColor_UseDefaultField;
        private string viewBackColorField;

        /// <remarks/>
        [XmlElement(Form = XmlSchemaForm.Unqualified)]
        public string Bookmarks
        {
            get { return bookmarksField; }
            set { bookmarksField = value; }
        }

        /// <remarks/>
        [XmlArray(Form = XmlSchemaForm.Unqualified)]
        [XmlArrayItem("Plugin", typeof(Plugin), IsNullable = false)]
        public Plugin[][] Plugins
        {
            get { return pluginsField; }
            set { pluginsField = value; }
        }

        /// <remarks/>
        [XmlElement("ApplicationPlugins", Form = XmlSchemaForm.Unqualified)]
        public MapwinMapWindow4ApplicationPlugins[] ApplicationPlugins
        {
            get { return applicationPluginsField; }
            set { applicationPluginsField = value; }
        }

        /// <remarks/>
        [XmlElement("PreviewMap", Form = XmlSchemaForm.Unqualified)]
        public MapwinMapWindow4PreviewMap[] PreviewMap
        {
            get { return previewMapField; }
            set { previewMapField = value; }
        }

        /// <remarks/>
        [XmlArray(Form = XmlSchemaForm.Unqualified)]
        [XmlArrayItem("Group", typeof(MapwinMapWindow4GroupsGroup), Form = XmlSchemaForm.Unqualified,
            IsNullable = false)]
        public MapwinMapWindow4GroupsGroup[][] Groups
        {
            get { return groupsField; }
            set { groupsField = value; }
        }

        /// <remarks/>
        [XmlArrayItem("Layer", typeof(LayersLayer), Form = XmlSchemaForm.Unqualified, IsNullable = false)]
        public LayersLayer[][] Layers
        {
            get { return layersField; }
            set { layersField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string ConfigurationPath
        {
            get { return configurationPathField; }
            set { configurationPathField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string ProjectProjection
        {
            get { return projectProjectionField; }
            set { projectProjectionField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string MapUnits
        {
            get { return mapUnitsField; }
            set { mapUnitsField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string StatusBarAlternateCoordsNumDecimals
        {
            get { return statusBarAlternateCoordsNumDecimalsField; }
            set { statusBarAlternateCoordsNumDecimalsField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string StatusBarCoordsNumDecimals
        {
            get { return statusBarCoordsNumDecimalsField; }
            set { statusBarCoordsNumDecimalsField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string StatusBarAlternateCoordsUseCommas
        {
            get { return statusBarAlternateCoordsUseCommasField; }
            set { statusBarAlternateCoordsUseCommasField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string StatusBarCoordsUseCommas
        {
            get { return statusBarCoordsUseCommasField; }
            set { statusBarCoordsUseCommasField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string ShowFloatingScaleBar
        {
            get { return showFloatingScaleBarField; }
            set { showFloatingScaleBarField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string FloatingScaleBarPosition
        {
            get { return floatingScaleBarPositionField; }
            set { floatingScaleBarPositionField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string FloatingScaleBarUnit
        {
            get { return floatingScaleBarUnitField; }
            set { floatingScaleBarUnitField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string FloatingScaleBarForecolor
        {
            get { return floatingScaleBarForecolorField; }
            set { floatingScaleBarForecolorField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string FloatingScaleBarBackcolor
        {
            get { return floatingScaleBarBackcolorField; }
            set { floatingScaleBarBackcolorField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string MapResizeBehavior
        {
            get { return mapResizeBehaviorField; }
            set { mapResizeBehaviorField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string ShowStatusBarCoords_Projected
        {
            get { return showStatusBarCoords_ProjectedField; }
            set { showStatusBarCoords_ProjectedField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string ShowStatusBarCoords_Alternate
        {
            get { return showStatusBarCoords_AlternateField; }
            set { showStatusBarCoords_AlternateField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string SaveShapeSettings
        {
            get { return saveShapeSettingsField; }
            set { saveShapeSettingsField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string ViewBackColor_UseDefault
        {
            get { return viewBackColor_UseDefaultField; }
            set { viewBackColor_UseDefaultField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string ViewBackColor
        {
            get { return viewBackColorField; }
            set { viewBackColorField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string ProjectProjectionWKT
        {
            get { return projectProjectionWKTField; }
            set { projectProjectionWKTField = value; }
        }
    }

    /// <remarks/>
    [GeneratedCode("xsd", "4.0.30319.33440")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(AnonymousType = true)]
    public class MapwinMapWindow4ApplicationPlugins
    {
        private string pluginDirField;
        private Plugin[] pluginField;

        /// <remarks/>
        [XmlElement("Plugin")]
        public Plugin[] Plugin
        {
            get { return pluginField; }
            set { pluginField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string PluginDir
        {
            get { return pluginDirField; }
            set { pluginDirField = value; }
        }
    }

    /// <remarks/>
    [GeneratedCode("xsd", "4.0.30319.33440")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(AnonymousType = true)]
    public class MapwinMapWindow4PreviewMap
    {
        private string dxField;
        private string dyField;
        private Image[] imageField;
        private string xllcenterField;
        private string yllcenterField;

        /// <remarks/>
        [XmlElement("Image", IsNullable = true)]
        public Image[] Image
        {
            get { return imageField; }
            set { imageField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string dx
        {
            get { return dxField; }
            set { dxField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string dy
        {
            get { return dyField; }
            set { dyField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string xllcenter
        {
            get { return xllcenterField; }
            set { xllcenterField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string yllcenter
        {
            get { return yllcenterField; }
            set { yllcenterField = value; }
        }
    }

    /// <remarks/>
    [GeneratedCode("xsd", "4.0.30319.33440")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(AnonymousType = true)]
    public class MapwinMapWindow4GroupsGroup
    {
        private string expandedField;
        private Image[] imageField;
        private string nameField;
        private string positionField;

        /// <remarks/>
        [XmlElement("Image", IsNullable = true)]
        public Image[] Image
        {
            get { return imageField; }
            set { imageField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string Name
        {
            get { return nameField; }
            set { nameField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string Expanded
        {
            get { return expandedField; }
            set { expandedField = value; }
        }

        /// <remarks/>
        [XmlAttribute]
        public string Position
        {
            get { return positionField; }
            set { positionField = value; }
        }
    }

    /// <remarks/>
    [GeneratedCode("xsd", "4.0.30319.33440")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(AnonymousType = true)]
    [XmlRoot(Namespace = "", IsNullable = false)]
    public class NewDataSet
    {
        private object[] itemsField;

        /// <remarks/>
        [XmlElement("Image", typeof(Image), IsNullable = true)]
        [XmlElement("LabelsClass", typeof(LabelsClass))]
        [XmlElement("Layers", typeof(Layers))]
        [XmlElement("Mapwin", typeof(Mapwin))]
        [XmlElement("Plugin", typeof(Plugin))]
        public object[] Items
        {
            get { return itemsField; }
            set { itemsField = value; }
        }
    }
}