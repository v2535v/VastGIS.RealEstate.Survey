//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Xml.Serialization;

// 
// This source code was auto-generated by xsd, Version=4.0.30319.33440.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://josm.openstreetmap.de/maps-1.0")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="http://josm.openstreetmap.de/maps-1.0", IsNullable=false)]
public partial class imagery {
    
    private imageryEntry[] entryField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("entry")]
    public imageryEntry[] entry {
        get {
            return this.entryField;
        }
        set {
            this.entryField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://josm.openstreetmap.de/maps-1.0")]
public partial class imageryEntry {
    
    private name nameField;
    
    private description descriptionField;
    
    private string idField;
    
    private type typeField;
    
    private bool defaultField;
    
    private bool defaultFieldSpecified;
    
    private string urlField;
    
    private string[] projectionsField;
    
    private string minzoomField;
    
    private string maxzoomField;
    
    private bounds boundsField;
    
    private string permissionrefField;
    
    private eula eulaField;
    
    private attributiontext attributiontextField;
    
    private string attributionurlField;
    
    private string logoimageField;
    
    private string logourlField;
    
    private string termsofusetextField;
    
    private string termsofuseurlField;
    
    private iso3166 countrycodeField;
    
    private bool countrycodeFieldSpecified;
    
    private string iconField;
    
    private imageryEntryMirror mirrorField;
    
    private imageryEntryNotileheader[] notileheaderField;
    
    private string tilesizeField;
    
    private imageryEntryMetadataheader[] metadataheaderField;
    
    /// <remarks/>
    public name name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    public description description {
        get {
            return this.descriptionField;
        }
        set {
            this.descriptionField = value;
        }
    }
    
    /// <remarks/>
    public string id {
        get {
            return this.idField;
        }
        set {
            this.idField = value;
        }
    }
    
    /// <remarks/>
    public type type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    public bool @default {
        get {
            return this.defaultField;
        }
        set {
            this.defaultField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool defaultSpecified {
        get {
            return this.defaultFieldSpecified;
        }
        set {
            this.defaultFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    public string url {
        get {
            return this.urlField;
        }
        set {
            this.urlField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("code", IsNullable=false)]
    public string[] projections {
        get {
            return this.projectionsField;
        }
        set {
            this.projectionsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("min-zoom", DataType="integer")]
    public string minzoom {
        get {
            return this.minzoomField;
        }
        set {
            this.minzoomField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("max-zoom", DataType="integer")]
    public string maxzoom {
        get {
            return this.maxzoomField;
        }
        set {
            this.maxzoomField = value;
        }
    }
    
    /// <remarks/>
    public bounds bounds {
        get {
            return this.boundsField;
        }
        set {
            this.boundsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("permission-ref", DataType="anyURI")]
    public string permissionref {
        get {
            return this.permissionrefField;
        }
        set {
            this.permissionrefField = value;
        }
    }
    
    /// <remarks/>
    public eula eula {
        get {
            return this.eulaField;
        }
        set {
            this.eulaField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("attribution-text")]
    public attributiontext attributiontext {
        get {
            return this.attributiontextField;
        }
        set {
            this.attributiontextField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("attribution-url", DataType="anyURI")]
    public string attributionurl {
        get {
            return this.attributionurlField;
        }
        set {
            this.attributionurlField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("logo-image")]
    public string logoimage {
        get {
            return this.logoimageField;
        }
        set {
            this.logoimageField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("logo-url", DataType="anyURI")]
    public string logourl {
        get {
            return this.logourlField;
        }
        set {
            this.logourlField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("terms-of-use-text")]
    public string termsofusetext {
        get {
            return this.termsofusetextField;
        }
        set {
            this.termsofusetextField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("terms-of-use-url")]
    public string termsofuseurl {
        get {
            return this.termsofuseurlField;
        }
        set {
            this.termsofuseurlField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("country-code")]
    public iso3166 countrycode {
        get {
            return this.countrycodeField;
        }
        set {
            this.countrycodeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool countrycodeSpecified {
        get {
            return this.countrycodeFieldSpecified;
        }
        set {
            this.countrycodeFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    public string icon {
        get {
            return this.iconField;
        }
        set {
            this.iconField = value;
        }
    }
    
    /// <remarks/>
    public imageryEntryMirror mirror {
        get {
            return this.mirrorField;
        }
        set {
            this.mirrorField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("no-tile-header")]
    public imageryEntryNotileheader[] notileheader {
        get {
            return this.notileheaderField;
        }
        set {
            this.notileheaderField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("tile-size", DataType="positiveInteger")]
    public string tilesize {
        get {
            return this.tilesizeField;
        }
        set {
            this.tilesizeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("metadata-header")]
    public imageryEntryMetadataheader[] metadataheader {
        get {
            return this.metadataheaderField;
        }
        set {
            this.metadataheaderField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://josm.openstreetmap.de/maps-1.0")]
public partial class name {
    
    private string langField;
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string lang {
        get {
            return this.langField;
        }
        set {
            this.langField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="attribution-text", Namespace="http://josm.openstreetmap.de/maps-1.0")]
public partial class attributiontext {
    
    private bool mandatoryField;
    
    private bool mandatoryFieldSpecified;
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public bool mandatory {
        get {
            return this.mandatoryField;
        }
        set {
            this.mandatoryField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool mandatorySpecified {
        get {
            return this.mandatoryFieldSpecified;
        }
        set {
            this.mandatoryFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://josm.openstreetmap.de/maps-1.0")]
public partial class eula {
    
    private bool mandatoryField;
    
    private bool mandatoryFieldSpecified;
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public bool mandatory {
        get {
            return this.mandatoryField;
        }
        set {
            this.mandatoryField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool mandatorySpecified {
        get {
            return this.mandatoryFieldSpecified;
        }
        set {
            this.mandatoryFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute(DataType="anyURI")]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://josm.openstreetmap.de/maps-1.0")]
public partial class point {
    
    private decimal latField;
    
    private decimal lonField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public decimal lat {
        get {
            return this.latField;
        }
        set {
            this.latField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public decimal lon {
        get {
            return this.lonField;
        }
        set {
            this.lonField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://josm.openstreetmap.de/maps-1.0")]
public partial class bounds {
    
    private point[] shapeField;
    
    private decimal minlatField;
    
    private decimal minlonField;
    
    private decimal maxlatField;
    
    private decimal maxlonField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute(typeof(point), IsNullable=false)]
    public point[] shape {
        get {
            return this.shapeField;
        }
        set {
            this.shapeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("min-lat")]
    public decimal minlat {
        get {
            return this.minlatField;
        }
        set {
            this.minlatField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("min-lon")]
    public decimal minlon {
        get {
            return this.minlonField;
        }
        set {
            this.minlonField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("max-lat")]
    public decimal maxlat {
        get {
            return this.maxlatField;
        }
        set {
            this.maxlatField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("max-lon")]
    public decimal maxlon {
        get {
            return this.maxlonField;
        }
        set {
            this.maxlonField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://josm.openstreetmap.de/maps-1.0")]
public partial class description {
    
    private string langField;
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string lang {
        get {
            return this.langField;
        }
        set {
            this.langField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://josm.openstreetmap.de/maps-1.0")]
public enum type {
    
    /// <remarks/>
    wms,
    
    /// <remarks/>
    wms_endpoint,
    
    /// <remarks/>
    wmts,
    
    /// <remarks/>
    tms,
    
    /// <remarks/>
    html,
    
    /// <remarks/>
    bing,
    
    /// <remarks/>
    scanex,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://josm.openstreetmap.de/maps-1.0")]
public enum iso3166 {
    
    /// <remarks/>
    EU,
    
    /// <remarks/>
    AF,
    
    /// <remarks/>
    AX,
    
    /// <remarks/>
    AL,
    
    /// <remarks/>
    DZ,
    
    /// <remarks/>
    AS,
    
    /// <remarks/>
    AD,
    
    /// <remarks/>
    AO,
    
    /// <remarks/>
    AI,
    
    /// <remarks/>
    AQ,
    
    /// <remarks/>
    AG,
    
    /// <remarks/>
    AR,
    
    /// <remarks/>
    AM,
    
    /// <remarks/>
    AW,
    
    /// <remarks/>
    AU,
    
    /// <remarks/>
    AT,
    
    /// <remarks/>
    AZ,
    
    /// <remarks/>
    BS,
    
    /// <remarks/>
    BH,
    
    /// <remarks/>
    BD,
    
    /// <remarks/>
    BB,
    
    /// <remarks/>
    BY,
    
    /// <remarks/>
    BE,
    
    /// <remarks/>
    BZ,
    
    /// <remarks/>
    BJ,
    
    /// <remarks/>
    BM,
    
    /// <remarks/>
    BT,
    
    /// <remarks/>
    BO,
    
    /// <remarks/>
    BQ,
    
    /// <remarks/>
    BA,
    
    /// <remarks/>
    BW,
    
    /// <remarks/>
    BV,
    
    /// <remarks/>
    BR,
    
    /// <remarks/>
    IO,
    
    /// <remarks/>
    BN,
    
    /// <remarks/>
    BG,
    
    /// <remarks/>
    BF,
    
    /// <remarks/>
    BI,
    
    /// <remarks/>
    KH,
    
    /// <remarks/>
    CM,
    
    /// <remarks/>
    CA,
    
    /// <remarks/>
    CV,
    
    /// <remarks/>
    KY,
    
    /// <remarks/>
    CF,
    
    /// <remarks/>
    TD,
    
    /// <remarks/>
    CL,
    
    /// <remarks/>
    CN,
    
    /// <remarks/>
    CX,
    
    /// <remarks/>
    CC,
    
    /// <remarks/>
    CO,
    
    /// <remarks/>
    KM,
    
    /// <remarks/>
    CG,
    
    /// <remarks/>
    CD,
    
    /// <remarks/>
    CK,
    
    /// <remarks/>
    CR,
    
    /// <remarks/>
    CI,
    
    /// <remarks/>
    HR,
    
    /// <remarks/>
    CU,
    
    /// <remarks/>
    CW,
    
    /// <remarks/>
    CY,
    
    /// <remarks/>
    CZ,
    
    /// <remarks/>
    DK,
    
    /// <remarks/>
    DJ,
    
    /// <remarks/>
    DM,
    
    /// <remarks/>
    DO,
    
    /// <remarks/>
    EC,
    
    /// <remarks/>
    EG,
    
    /// <remarks/>
    SV,
    
    /// <remarks/>
    GQ,
    
    /// <remarks/>
    ER,
    
    /// <remarks/>
    EE,
    
    /// <remarks/>
    ET,
    
    /// <remarks/>
    FK,
    
    /// <remarks/>
    FO,
    
    /// <remarks/>
    FJ,
    
    /// <remarks/>
    FI,
    
    /// <remarks/>
    FR,
    
    /// <remarks/>
    GF,
    
    /// <remarks/>
    PF,
    
    /// <remarks/>
    TF,
    
    /// <remarks/>
    GA,
    
    /// <remarks/>
    GM,
    
    /// <remarks/>
    GE,
    
    /// <remarks/>
    DE,
    
    /// <remarks/>
    GH,
    
    /// <remarks/>
    GI,
    
    /// <remarks/>
    GR,
    
    /// <remarks/>
    GL,
    
    /// <remarks/>
    GD,
    
    /// <remarks/>
    GP,
    
    /// <remarks/>
    GU,
    
    /// <remarks/>
    GT,
    
    /// <remarks/>
    GG,
    
    /// <remarks/>
    GN,
    
    /// <remarks/>
    GW,
    
    /// <remarks/>
    GY,
    
    /// <remarks/>
    HT,
    
    /// <remarks/>
    HM,
    
    /// <remarks/>
    VA,
    
    /// <remarks/>
    HN,
    
    /// <remarks/>
    HK,
    
    /// <remarks/>
    HU,
    
    /// <remarks/>
    IS,
    
    /// <remarks/>
    IN,
    
    /// <remarks/>
    ID,
    
    /// <remarks/>
    IR,
    
    /// <remarks/>
    IQ,
    
    /// <remarks/>
    IE,
    
    /// <remarks/>
    IM,
    
    /// <remarks/>
    IL,
    
    /// <remarks/>
    IT,
    
    /// <remarks/>
    JM,
    
    /// <remarks/>
    JP,
    
    /// <remarks/>
    JE,
    
    /// <remarks/>
    JO,
    
    /// <remarks/>
    KZ,
    
    /// <remarks/>
    KE,
    
    /// <remarks/>
    KI,
    
    /// <remarks/>
    KP,
    
    /// <remarks/>
    KR,
    
    /// <remarks/>
    KW,
    
    /// <remarks/>
    KG,
    
    /// <remarks/>
    LA,
    
    /// <remarks/>
    LV,
    
    /// <remarks/>
    LB,
    
    /// <remarks/>
    LS,
    
    /// <remarks/>
    LR,
    
    /// <remarks/>
    LY,
    
    /// <remarks/>
    LI,
    
    /// <remarks/>
    LT,
    
    /// <remarks/>
    LU,
    
    /// <remarks/>
    MO,
    
    /// <remarks/>
    MK,
    
    /// <remarks/>
    MG,
    
    /// <remarks/>
    MW,
    
    /// <remarks/>
    MY,
    
    /// <remarks/>
    MV,
    
    /// <remarks/>
    ML,
    
    /// <remarks/>
    MT,
    
    /// <remarks/>
    MH,
    
    /// <remarks/>
    MQ,
    
    /// <remarks/>
    MR,
    
    /// <remarks/>
    MU,
    
    /// <remarks/>
    YT,
    
    /// <remarks/>
    MX,
    
    /// <remarks/>
    FM,
    
    /// <remarks/>
    MD,
    
    /// <remarks/>
    MC,
    
    /// <remarks/>
    MN,
    
    /// <remarks/>
    ME,
    
    /// <remarks/>
    MS,
    
    /// <remarks/>
    MA,
    
    /// <remarks/>
    MZ,
    
    /// <remarks/>
    MM,
    
    /// <remarks/>
    NA,
    
    /// <remarks/>
    NR,
    
    /// <remarks/>
    NP,
    
    /// <remarks/>
    NL,
    
    /// <remarks/>
    NC,
    
    /// <remarks/>
    NZ,
    
    /// <remarks/>
    NI,
    
    /// <remarks/>
    NE,
    
    /// <remarks/>
    NG,
    
    /// <remarks/>
    NU,
    
    /// <remarks/>
    NF,
    
    /// <remarks/>
    MP,
    
    /// <remarks/>
    NO,
    
    /// <remarks/>
    OM,
    
    /// <remarks/>
    PK,
    
    /// <remarks/>
    PW,
    
    /// <remarks/>
    PS,
    
    /// <remarks/>
    PA,
    
    /// <remarks/>
    PG,
    
    /// <remarks/>
    PY,
    
    /// <remarks/>
    PE,
    
    /// <remarks/>
    PH,
    
    /// <remarks/>
    PN,
    
    /// <remarks/>
    PL,
    
    /// <remarks/>
    PT,
    
    /// <remarks/>
    PR,
    
    /// <remarks/>
    QA,
    
    /// <remarks/>
    RE,
    
    /// <remarks/>
    RO,
    
    /// <remarks/>
    RU,
    
    /// <remarks/>
    RW,
    
    /// <remarks/>
    BL,
    
    /// <remarks/>
    SH,
    
    /// <remarks/>
    KN,
    
    /// <remarks/>
    LC,
    
    /// <remarks/>
    MF,
    
    /// <remarks/>
    PM,
    
    /// <remarks/>
    VC,
    
    /// <remarks/>
    WS,
    
    /// <remarks/>
    SM,
    
    /// <remarks/>
    ST,
    
    /// <remarks/>
    SA,
    
    /// <remarks/>
    SN,
    
    /// <remarks/>
    RS,
    
    /// <remarks/>
    SC,
    
    /// <remarks/>
    SL,
    
    /// <remarks/>
    SG,
    
    /// <remarks/>
    SX,
    
    /// <remarks/>
    SK,
    
    /// <remarks/>
    SI,
    
    /// <remarks/>
    SB,
    
    /// <remarks/>
    SO,
    
    /// <remarks/>
    ZA,
    
    /// <remarks/>
    GS,
    
    /// <remarks/>
    SS,
    
    /// <remarks/>
    ES,
    
    /// <remarks/>
    LK,
    
    /// <remarks/>
    SD,
    
    /// <remarks/>
    SR,
    
    /// <remarks/>
    SJ,
    
    /// <remarks/>
    SZ,
    
    /// <remarks/>
    SE,
    
    /// <remarks/>
    CH,
    
    /// <remarks/>
    SY,
    
    /// <remarks/>
    TW,
    
    /// <remarks/>
    TJ,
    
    /// <remarks/>
    TZ,
    
    /// <remarks/>
    TH,
    
    /// <remarks/>
    TL,
    
    /// <remarks/>
    TG,
    
    /// <remarks/>
    TK,
    
    /// <remarks/>
    TO,
    
    /// <remarks/>
    TT,
    
    /// <remarks/>
    TN,
    
    /// <remarks/>
    TR,
    
    /// <remarks/>
    TM,
    
    /// <remarks/>
    TC,
    
    /// <remarks/>
    TV,
    
    /// <remarks/>
    UG,
    
    /// <remarks/>
    UA,
    
    /// <remarks/>
    AE,
    
    /// <remarks/>
    GB,
    
    /// <remarks/>
    US,
    
    /// <remarks/>
    UM,
    
    /// <remarks/>
    UY,
    
    /// <remarks/>
    UZ,
    
    /// <remarks/>
    VU,
    
    /// <remarks/>
    VE,
    
    /// <remarks/>
    VN,
    
    /// <remarks/>
    VG,
    
    /// <remarks/>
    VI,
    
    /// <remarks/>
    WF,
    
    /// <remarks/>
    EH,
    
    /// <remarks/>
    YE,
    
    /// <remarks/>
    ZM,
    
    /// <remarks/>
    ZW,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://josm.openstreetmap.de/maps-1.0")]
public partial class imageryEntryMirror {
    
    private type typeField;
    
    private string urlField;
    
    private string[] projectionsField;
    
    private string minzoomField;
    
    private string maxzoomField;
    
    private string tilesizeField;
    
    /// <remarks/>
    public type type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    public string url {
        get {
            return this.urlField;
        }
        set {
            this.urlField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("code", IsNullable=false)]
    public string[] projections {
        get {
            return this.projectionsField;
        }
        set {
            this.projectionsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("min-zoom", DataType="integer")]
    public string minzoom {
        get {
            return this.minzoomField;
        }
        set {
            this.minzoomField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("max-zoom", DataType="integer")]
    public string maxzoom {
        get {
            return this.maxzoomField;
        }
        set {
            this.maxzoomField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("tile-size", DataType="positiveInteger")]
    public string tilesize {
        get {
            return this.tilesizeField;
        }
        set {
            this.tilesizeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://josm.openstreetmap.de/maps-1.0")]
public partial class imageryEntryNotileheader {
    
    private string nameField;
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://josm.openstreetmap.de/maps-1.0")]
public partial class imageryEntryMetadataheader {
    
    private string headernameField;
    
    private string metadatakeyField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("header-name")]
    public string headername {
        get {
            return this.headernameField;
        }
        set {
            this.headernameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("metadata-key")]
    public string metadatakey {
        get {
            return this.metadatakeyField;
        }
        set {
            this.metadatakeyField = value;
        }
    }
}
