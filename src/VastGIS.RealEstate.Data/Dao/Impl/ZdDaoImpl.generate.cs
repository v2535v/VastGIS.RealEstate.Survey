using System;
using Dapper;
using System.Collections.Generic;
using System.Text;
using System.Data;
using System.Data.SQLite;
using System.Linq;
using VastGIS.RealEstate.Data.Entity;
using VastGIS.RealEstate.Data.Enums;
using VastGIS.RealEstate.Data.Events;
using VastGIS.RealEstate.Data.Interface;

namespace VastGIS.RealEstate.Data.Dao.Impl
{
    public partial class ZdDaoImpl : SQLiteDao,ZdDao
    {	
        public Dictionary<string,string> _entityNames;        
        
        
        #region C SQL语句
        private string CREATE_VIEW_C="CREATE VIEW CVIEW AS SELECT  Id,CFWLX,JSBL,CH,ZRZH,YSDM,SJC,MYC,CJZMJ,CTNJZMJ,CYTMJ,CGYJZMJ,CFTJZMJ,CBQMJ,CG,SPTYMJ,WX_DCY,WX_DCSJ,WX_CLY,WX_CLSJ,WX_ZTY,WX_ZTSJ,WX_ZJY,WX_ZJSJ,WX_WYDM,DatabaseId,FLAGS,XGR,XGSJ FROM C WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_C="CREATE TRIGGER [vw_ins_CVIEW] INSTEAD OF INSERT ON [CVIEW] BEGIN INSERT OR REPLACE INTO [C] ([Id],[CFWLX],[JSBL],[CH],[ZRZH],[YSDM],[SJC],[MYC],[CJZMJ],[CTNJZMJ],[CYTMJ],[CGYJZMJ],[CFTJZMJ],[CBQMJ],[CG],[SPTYMJ],[WX_DCY],[WX_DCSJ],[WX_CLY],[WX_CLSJ],[WX_ZTY],[WX_ZTSJ],[WX_ZJY],[WX_ZJSJ],[WX_WYDM],[DatabaseId],[FLAGS],[XGR],[XGSJ])  VALUES (NEW.[Id],NEW.[CFWLX],NEW.[JSBL],NEW.[CH],NEW.[ZRZH],NEW.[YSDM],NEW.[SJC],NEW.[MYC],NEW.[CJZMJ],NEW.[CTNJZMJ],NEW.[CYTMJ],NEW.[CGYJZMJ],NEW.[CFTJZMJ],NEW.[CBQMJ],NEW.[CG],NEW.[SPTYMJ],NEW.[WX_DCY],NEW.[WX_DCSJ],NEW.[WX_CLY],NEW.[WX_CLSJ],NEW.[WX_ZTY],NEW.[WX_ZTSJ],NEW.[WX_ZJY],NEW.[WX_ZJSJ],NEW.[WX_WYDM],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ]);END";
        private string UPDATE_TRIGGER_C="CREATE TRIGGER [vw_upd_CVIEW] INSTEAD OF UPDATE OF [Id],[CFWLX],[JSBL],[CH],[ZRZH],[YSDM],[SJC],[MYC],[CJZMJ],[CTNJZMJ],[CYTMJ],[CGYJZMJ],[CFTJZMJ],[CBQMJ],[CG],[SPTYMJ],[WX_DCY],[WX_DCSJ],[WX_CLY],[WX_CLSJ],[WX_ZTY],[WX_ZTSJ],[WX_ZJY],[WX_ZJSJ],[WX_WYDM],[DatabaseId],[FLAGS],[XGR],[XGSJ] ON [CVIEW] BEGIN UPDATE [C] SET [Id]=NEW.[Id],[CFWLX]=NEW.[CFWLX],[JSBL]=NEW.[JSBL],[CH]=NEW.[CH],[ZRZH]=NEW.[ZRZH],[YSDM]=NEW.[YSDM],[SJC]=NEW.[SJC],[MYC]=NEW.[MYC],[CJZMJ]=NEW.[CJZMJ],[CTNJZMJ]=NEW.[CTNJZMJ],[CYTMJ]=NEW.[CYTMJ],[CGYJZMJ]=NEW.[CGYJZMJ],[CFTJZMJ]=NEW.[CFTJZMJ],[CBQMJ]=NEW.[CBQMJ],[CG]=NEW.[CG],[SPTYMJ]=NEW.[SPTYMJ],[WX_DCY]=NEW.[WX_DCY],[WX_DCSJ]=NEW.[WX_DCSJ],[WX_CLY]=NEW.[WX_CLY],[WX_CLSJ]=NEW.[WX_CLSJ],[WX_ZTY]=NEW.[WX_ZTY],[WX_ZTSJ]=NEW.[WX_ZTSJ],[WX_ZJY]=NEW.[WX_ZJY],[WX_ZJSJ]=NEW.[WX_ZJSJ],[WX_WYDM]=NEW.[WX_WYDM],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_C="CREATE TRIGGER [vw_del_CVIEW] INSTEAD OF DELETE ON [CVIEW] BEGIN DELETE FROM [C] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_C="SELECT  Id,CFWLX,JSBL,CH,ZRZH,YSDM,SJC,MYC,CJZMJ,CTNJZMJ,CYTMJ,CGYJZMJ,CFTJZMJ,CBQMJ,CG,SPTYMJ,WX_DCY,WX_DCSJ,WX_CLY,WX_CLSJ,WX_ZTY,WX_ZTSJ,WX_ZJY,WX_ZJSJ,WX_WYDM,DatabaseId,FLAGS,XGR,XGSJ FROM C WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_CVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('cview','geometry','rowid','c','geometry',0)";
        #endregion        
        
        
        #region CFDJ SQL语句
        private string CREATE_VIEW_CFDJ="CREATE VIEW CFDJVIEW AS SELECT  Id,YSDM,BDCDYH,YWH,CFJG,CFLX,CFWJ,CFWH,CFQSSJ,CFJSSJ,CFFW,QXDM,DJJG,DBR,DJSJ,JFYWH,JFJG,JFWJ,JFWH,JFDBR,JFDJSJ,FJ,QSZT,DatabaseId,FLAGS,XGR,XGSJ FROM CFDJ WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_CFDJ="CREATE TRIGGER [vw_ins_CFDJVIEW] INSTEAD OF INSERT ON [CFDJVIEW] BEGIN INSERT OR REPLACE INTO [CFDJ] ([Id],[YSDM],[BDCDYH],[YWH],[CFJG],[CFLX],[CFWJ],[CFWH],[CFQSSJ],[CFJSSJ],[CFFW],[QXDM],[DJJG],[DBR],[DJSJ],[JFYWH],[JFJG],[JFWJ],[JFWH],[JFDBR],[JFDJSJ],[FJ],[QSZT],[DatabaseId],[FLAGS],[XGR],[XGSJ])  VALUES (NEW.[Id],NEW.[YSDM],NEW.[BDCDYH],NEW.[YWH],NEW.[CFJG],NEW.[CFLX],NEW.[CFWJ],NEW.[CFWH],NEW.[CFQSSJ],NEW.[CFJSSJ],NEW.[CFFW],NEW.[QXDM],NEW.[DJJG],NEW.[DBR],NEW.[DJSJ],NEW.[JFYWH],NEW.[JFJG],NEW.[JFWJ],NEW.[JFWH],NEW.[JFDBR],NEW.[JFDJSJ],NEW.[FJ],NEW.[QSZT],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ]);END";
        private string UPDATE_TRIGGER_CFDJ="CREATE TRIGGER [vw_upd_CFDJVIEW] INSTEAD OF UPDATE OF [Id],[YSDM],[BDCDYH],[YWH],[CFJG],[CFLX],[CFWJ],[CFWH],[CFQSSJ],[CFJSSJ],[CFFW],[QXDM],[DJJG],[DBR],[DJSJ],[JFYWH],[JFJG],[JFWJ],[JFWH],[JFDBR],[JFDJSJ],[FJ],[QSZT],[DatabaseId],[FLAGS],[XGR],[XGSJ] ON [CFDJVIEW] BEGIN UPDATE [CFDJ] SET [Id]=NEW.[Id],[YSDM]=NEW.[YSDM],[BDCDYH]=NEW.[BDCDYH],[YWH]=NEW.[YWH],[CFJG]=NEW.[CFJG],[CFLX]=NEW.[CFLX],[CFWJ]=NEW.[CFWJ],[CFWH]=NEW.[CFWH],[CFQSSJ]=NEW.[CFQSSJ],[CFJSSJ]=NEW.[CFJSSJ],[CFFW]=NEW.[CFFW],[QXDM]=NEW.[QXDM],[DJJG]=NEW.[DJJG],[DBR]=NEW.[DBR],[DJSJ]=NEW.[DJSJ],[JFYWH]=NEW.[JFYWH],[JFJG]=NEW.[JFJG],[JFWJ]=NEW.[JFWJ],[JFWH]=NEW.[JFWH],[JFDBR]=NEW.[JFDBR],[JFDJSJ]=NEW.[JFDJSJ],[FJ]=NEW.[FJ],[QSZT]=NEW.[QSZT],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_CFDJ="CREATE TRIGGER [vw_del_CFDJVIEW] INSTEAD OF DELETE ON [CFDJVIEW] BEGIN DELETE FROM [CFDJ] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_CFDJ="SELECT  Id,YSDM,BDCDYH,YWH,CFJG,CFLX,CFWJ,CFWH,CFQSSJ,CFJSSJ,CFFW,QXDM,DJJG,DBR,DJSJ,JFYWH,JFJG,JFWJ,JFWH,JFDBR,JFDJSJ,FJ,QSZT,DatabaseId,FLAGS,XGR,XGSJ FROM CFDJ WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_CFDJVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('cfdjview','geometry','rowid','cfdj','geometry',0)";
        #endregion        
        
        
        #region DJQ SQL语句
        private string CREATE_VIEW_DJQ="CREATE VIEW DJQVIEW AS SELECT  Id,YSDM,DJQDM,DJQMC,WX_DCY,WX_DCSJ,WX_CLY,WX_CLSJ,WX_ZTY,WX_ZTSJ,WX_ZJY,WX_ZJSJ,WX_WYDM,DatabaseId,FLAGS,XGR,XGSJ,geometry FROM DJQ WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_DJQ="CREATE TRIGGER [vw_ins_DJQVIEW] INSTEAD OF INSERT ON [DJQVIEW] BEGIN INSERT OR REPLACE INTO [DJQ] ([Id],[YSDM],[DJQDM],[DJQMC],[WX_DCY],[WX_DCSJ],[WX_CLY],[WX_CLSJ],[WX_ZTY],[WX_ZTSJ],[WX_ZJY],[WX_ZJSJ],[WX_WYDM],[DatabaseId],[FLAGS],[XGR],[XGSJ],[geometry])  VALUES (NEW.[Id],NEW.[YSDM],NEW.[DJQDM],NEW.[DJQMC],NEW.[WX_DCY],NEW.[WX_DCSJ],NEW.[WX_CLY],NEW.[WX_CLSJ],NEW.[WX_ZTY],NEW.[WX_ZTSJ],NEW.[WX_ZJY],NEW.[WX_ZJSJ],NEW.[WX_WYDM],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ],NEW.[geometry]);END";
        private string UPDATE_TRIGGER_DJQ="CREATE TRIGGER [vw_upd_DJQVIEW] INSTEAD OF UPDATE OF [Id],[YSDM],[DJQDM],[DJQMC],[WX_DCY],[WX_DCSJ],[WX_CLY],[WX_CLSJ],[WX_ZTY],[WX_ZTSJ],[WX_ZJY],[WX_ZJSJ],[WX_WYDM],[DatabaseId],[FLAGS],[XGR],[XGSJ],[geometry] ON [DJQVIEW] BEGIN UPDATE [DJQ] SET [Id]=NEW.[Id],[YSDM]=NEW.[YSDM],[DJQDM]=NEW.[DJQDM],[DJQMC]=NEW.[DJQMC],[WX_DCY]=NEW.[WX_DCY],[WX_DCSJ]=NEW.[WX_DCSJ],[WX_CLY]=NEW.[WX_CLY],[WX_CLSJ]=NEW.[WX_CLSJ],[WX_ZTY]=NEW.[WX_ZTY],[WX_ZTSJ]=NEW.[WX_ZTSJ],[WX_ZJY]=NEW.[WX_ZJY],[WX_ZJSJ]=NEW.[WX_ZJSJ],[WX_WYDM]=NEW.[WX_WYDM],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ],[geometry]=NEW.[geometry] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_DJQ="CREATE TRIGGER [vw_del_DJQVIEW] INSTEAD OF DELETE ON [DJQVIEW] BEGIN DELETE FROM [DJQ] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_DJQ="SELECT  Id,YSDM,DJQDM,DJQMC,WX_DCY,WX_DCSJ,WX_CLY,WX_CLSJ,WX_ZTY,WX_ZTSJ,WX_ZJY,WX_ZJSJ,WX_WYDM,DatabaseId,FLAGS,XGR,XGSJ,geometry FROM DJQ WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_DJQVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('djqview','geometry','rowid','djq','geometry',0)";
        #endregion        
        
        
        #region DJZQ SQL语句
        private string CREATE_VIEW_DJZQ="CREATE VIEW DJZQVIEW AS SELECT  Id,YSDM,DJZQDM,DJZQMC,WX_DCY,WX_DCSJ,WX_CLY,WX_CLSJ,WX_ZTY,WX_ZTSJ,WX_ZJY,WX_ZJSJ,WX_WYDM,DatabaseId,FLAGS,XGR,XGSJ,geometry FROM DJZQ WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_DJZQ="CREATE TRIGGER [vw_ins_DJZQVIEW] INSTEAD OF INSERT ON [DJZQVIEW] BEGIN INSERT OR REPLACE INTO [DJZQ] ([Id],[YSDM],[DJZQDM],[DJZQMC],[WX_DCY],[WX_DCSJ],[WX_CLY],[WX_CLSJ],[WX_ZTY],[WX_ZTSJ],[WX_ZJY],[WX_ZJSJ],[WX_WYDM],[DatabaseId],[FLAGS],[XGR],[XGSJ],[geometry])  VALUES (NEW.[Id],NEW.[YSDM],NEW.[DJZQDM],NEW.[DJZQMC],NEW.[WX_DCY],NEW.[WX_DCSJ],NEW.[WX_CLY],NEW.[WX_CLSJ],NEW.[WX_ZTY],NEW.[WX_ZTSJ],NEW.[WX_ZJY],NEW.[WX_ZJSJ],NEW.[WX_WYDM],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ],NEW.[geometry]);END";
        private string UPDATE_TRIGGER_DJZQ="CREATE TRIGGER [vw_upd_DJZQVIEW] INSTEAD OF UPDATE OF [Id],[YSDM],[DJZQDM],[DJZQMC],[WX_DCY],[WX_DCSJ],[WX_CLY],[WX_CLSJ],[WX_ZTY],[WX_ZTSJ],[WX_ZJY],[WX_ZJSJ],[WX_WYDM],[DatabaseId],[FLAGS],[XGR],[XGSJ],[geometry] ON [DJZQVIEW] BEGIN UPDATE [DJZQ] SET [Id]=NEW.[Id],[YSDM]=NEW.[YSDM],[DJZQDM]=NEW.[DJZQDM],[DJZQMC]=NEW.[DJZQMC],[WX_DCY]=NEW.[WX_DCY],[WX_DCSJ]=NEW.[WX_DCSJ],[WX_CLY]=NEW.[WX_CLY],[WX_CLSJ]=NEW.[WX_CLSJ],[WX_ZTY]=NEW.[WX_ZTY],[WX_ZTSJ]=NEW.[WX_ZTSJ],[WX_ZJY]=NEW.[WX_ZJY],[WX_ZJSJ]=NEW.[WX_ZJSJ],[WX_WYDM]=NEW.[WX_WYDM],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ],[geometry]=NEW.[geometry] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_DJZQ="CREATE TRIGGER [vw_del_DJZQVIEW] INSTEAD OF DELETE ON [DJZQVIEW] BEGIN DELETE FROM [DJZQ] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_DJZQ="SELECT  Id,YSDM,DJZQDM,DJZQMC,WX_DCY,WX_DCSJ,WX_CLY,WX_CLSJ,WX_ZTY,WX_ZTSJ,WX_ZJY,WX_ZJSJ,WX_WYDM,DatabaseId,FLAGS,XGR,XGSJ,geometry FROM DJZQ WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_DJZQVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('djzqview','geometry','rowid','djzq','geometry',0)";
        #endregion        
        
        
        #region DYAQ SQL语句
        private string CREATE_VIEW_DYAQ="CREATE VIEW DYAQVIEW AS SELECT  Id,YSDM,BDCDYH,YWH,DYBDCLX,DYR,DYFS,DJLX,DJYY,ZJJZWZL,ZJJZWDYFW,BDBZZQSE,ZWLXQSSJ,ZWLXJSSJ,ZGZQQDSS,ZGZQSE,ZXDYYWH,ZXDYYY,ZXSJ,BDCDJZMH,QXDM,DJJG,DBR,DJSJ,FJ,QSZT,DatabaseId,FLAGS,XGR,XGSJ FROM DYAQ WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_DYAQ="CREATE TRIGGER [vw_ins_DYAQVIEW] INSTEAD OF INSERT ON [DYAQVIEW] BEGIN INSERT OR REPLACE INTO [DYAQ] ([Id],[YSDM],[BDCDYH],[YWH],[DYBDCLX],[DYR],[DYFS],[DJLX],[DJYY],[ZJJZWZL],[ZJJZWDYFW],[BDBZZQSE],[ZWLXQSSJ],[ZWLXJSSJ],[ZGZQQDSS],[ZGZQSE],[ZXDYYWH],[ZXDYYY],[ZXSJ],[BDCDJZMH],[QXDM],[DJJG],[DBR],[DJSJ],[FJ],[QSZT],[DatabaseId],[FLAGS],[XGR],[XGSJ])  VALUES (NEW.[Id],NEW.[YSDM],NEW.[BDCDYH],NEW.[YWH],NEW.[DYBDCLX],NEW.[DYR],NEW.[DYFS],NEW.[DJLX],NEW.[DJYY],NEW.[ZJJZWZL],NEW.[ZJJZWDYFW],NEW.[BDBZZQSE],NEW.[ZWLXQSSJ],NEW.[ZWLXJSSJ],NEW.[ZGZQQDSS],NEW.[ZGZQSE],NEW.[ZXDYYWH],NEW.[ZXDYYY],NEW.[ZXSJ],NEW.[BDCDJZMH],NEW.[QXDM],NEW.[DJJG],NEW.[DBR],NEW.[DJSJ],NEW.[FJ],NEW.[QSZT],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ]);END";
        private string UPDATE_TRIGGER_DYAQ="CREATE TRIGGER [vw_upd_DYAQVIEW] INSTEAD OF UPDATE OF [Id],[YSDM],[BDCDYH],[YWH],[DYBDCLX],[DYR],[DYFS],[DJLX],[DJYY],[ZJJZWZL],[ZJJZWDYFW],[BDBZZQSE],[ZWLXQSSJ],[ZWLXJSSJ],[ZGZQQDSS],[ZGZQSE],[ZXDYYWH],[ZXDYYY],[ZXSJ],[BDCDJZMH],[QXDM],[DJJG],[DBR],[DJSJ],[FJ],[QSZT],[DatabaseId],[FLAGS],[XGR],[XGSJ] ON [DYAQVIEW] BEGIN UPDATE [DYAQ] SET [Id]=NEW.[Id],[YSDM]=NEW.[YSDM],[BDCDYH]=NEW.[BDCDYH],[YWH]=NEW.[YWH],[DYBDCLX]=NEW.[DYBDCLX],[DYR]=NEW.[DYR],[DYFS]=NEW.[DYFS],[DJLX]=NEW.[DJLX],[DJYY]=NEW.[DJYY],[ZJJZWZL]=NEW.[ZJJZWZL],[ZJJZWDYFW]=NEW.[ZJJZWDYFW],[BDBZZQSE]=NEW.[BDBZZQSE],[ZWLXQSSJ]=NEW.[ZWLXQSSJ],[ZWLXJSSJ]=NEW.[ZWLXJSSJ],[ZGZQQDSS]=NEW.[ZGZQQDSS],[ZGZQSE]=NEW.[ZGZQSE],[ZXDYYWH]=NEW.[ZXDYYWH],[ZXDYYY]=NEW.[ZXDYYY],[ZXSJ]=NEW.[ZXSJ],[BDCDJZMH]=NEW.[BDCDJZMH],[QXDM]=NEW.[QXDM],[DJJG]=NEW.[DJJG],[DBR]=NEW.[DBR],[DJSJ]=NEW.[DJSJ],[FJ]=NEW.[FJ],[QSZT]=NEW.[QSZT],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_DYAQ="CREATE TRIGGER [vw_del_DYAQVIEW] INSTEAD OF DELETE ON [DYAQVIEW] BEGIN DELETE FROM [DYAQ] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_DYAQ="SELECT  Id,YSDM,BDCDYH,YWH,DYBDCLX,DYR,DYFS,DJLX,DJYY,ZJJZWZL,ZJJZWDYFW,BDBZZQSE,ZWLXQSSJ,ZWLXJSSJ,ZGZQQDSS,ZGZQSE,ZXDYYWH,ZXDYYY,ZXSJ,BDCDJZMH,QXDM,DJJG,DBR,DJSJ,FJ,QSZT,DatabaseId,FLAGS,XGR,XGSJ FROM DYAQ WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_DYAQVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('dyaqview','geometry','rowid','dyaq','geometry',0)";
        #endregion        
        
        
        #region DYIQ SQL语句
        private string CREATE_VIEW_DYIQ="CREATE VIEW DYIQVIEW AS SELECT  Id,YSDM,YWH,GYDBDCDYH,GYDQLR,GYDQLRZJZL,GYDQLRZJH,XYDBDCDYH,XYDZL,XYDQLR,XYDQLRZJZL,XYDQLRZJH,DJLX,DJYY,DYQNR,BDCDJZMH,QLQSSJ,QLJSSJ,QXDM,DJJG,DBR,DJSJ,FJ,QSZT,DatabaseId,FLAGS,XGR,XGSJ FROM DYIQ WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_DYIQ="CREATE TRIGGER [vw_ins_DYIQVIEW] INSTEAD OF INSERT ON [DYIQVIEW] BEGIN INSERT OR REPLACE INTO [DYIQ] ([Id],[YSDM],[YWH],[GYDBDCDYH],[GYDQLR],[GYDQLRZJZL],[GYDQLRZJH],[XYDBDCDYH],[XYDZL],[XYDQLR],[XYDQLRZJZL],[XYDQLRZJH],[DJLX],[DJYY],[DYQNR],[BDCDJZMH],[QLQSSJ],[QLJSSJ],[QXDM],[DJJG],[DBR],[DJSJ],[FJ],[QSZT],[DatabaseId],[FLAGS],[XGR],[XGSJ])  VALUES (NEW.[Id],NEW.[YSDM],NEW.[YWH],NEW.[GYDBDCDYH],NEW.[GYDQLR],NEW.[GYDQLRZJZL],NEW.[GYDQLRZJH],NEW.[XYDBDCDYH],NEW.[XYDZL],NEW.[XYDQLR],NEW.[XYDQLRZJZL],NEW.[XYDQLRZJH],NEW.[DJLX],NEW.[DJYY],NEW.[DYQNR],NEW.[BDCDJZMH],NEW.[QLQSSJ],NEW.[QLJSSJ],NEW.[QXDM],NEW.[DJJG],NEW.[DBR],NEW.[DJSJ],NEW.[FJ],NEW.[QSZT],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ]);END";
        private string UPDATE_TRIGGER_DYIQ="CREATE TRIGGER [vw_upd_DYIQVIEW] INSTEAD OF UPDATE OF [Id],[YSDM],[YWH],[GYDBDCDYH],[GYDQLR],[GYDQLRZJZL],[GYDQLRZJH],[XYDBDCDYH],[XYDZL],[XYDQLR],[XYDQLRZJZL],[XYDQLRZJH],[DJLX],[DJYY],[DYQNR],[BDCDJZMH],[QLQSSJ],[QLJSSJ],[QXDM],[DJJG],[DBR],[DJSJ],[FJ],[QSZT],[DatabaseId],[FLAGS],[XGR],[XGSJ] ON [DYIQVIEW] BEGIN UPDATE [DYIQ] SET [Id]=NEW.[Id],[YSDM]=NEW.[YSDM],[YWH]=NEW.[YWH],[GYDBDCDYH]=NEW.[GYDBDCDYH],[GYDQLR]=NEW.[GYDQLR],[GYDQLRZJZL]=NEW.[GYDQLRZJZL],[GYDQLRZJH]=NEW.[GYDQLRZJH],[XYDBDCDYH]=NEW.[XYDBDCDYH],[XYDZL]=NEW.[XYDZL],[XYDQLR]=NEW.[XYDQLR],[XYDQLRZJZL]=NEW.[XYDQLRZJZL],[XYDQLRZJH]=NEW.[XYDQLRZJH],[DJLX]=NEW.[DJLX],[DJYY]=NEW.[DJYY],[DYQNR]=NEW.[DYQNR],[BDCDJZMH]=NEW.[BDCDJZMH],[QLQSSJ]=NEW.[QLQSSJ],[QLJSSJ]=NEW.[QLJSSJ],[QXDM]=NEW.[QXDM],[DJJG]=NEW.[DJJG],[DBR]=NEW.[DBR],[DJSJ]=NEW.[DJSJ],[FJ]=NEW.[FJ],[QSZT]=NEW.[QSZT],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_DYIQ="CREATE TRIGGER [vw_del_DYIQVIEW] INSTEAD OF DELETE ON [DYIQVIEW] BEGIN DELETE FROM [DYIQ] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_DYIQ="SELECT  Id,YSDM,YWH,GYDBDCDYH,GYDQLR,GYDQLRZJZL,GYDQLRZJH,XYDBDCDYH,XYDZL,XYDQLR,XYDQLRZJZL,XYDQLRZJH,DJLX,DJYY,DYQNR,BDCDJZMH,QLQSSJ,QLJSSJ,QXDM,DJJG,DBR,DJSJ,FJ,QSZT,DatabaseId,FLAGS,XGR,XGSJ FROM DYIQ WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_DYIQVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('dyiqview','geometry','rowid','dyiq','geometry',0)";
        #endregion        
        
        
        #region DZDZW SQL语句
        private string CREATE_VIEW_DZDZW="CREATE VIEW DZDZWVIEW AS SELECT  Id,YSDM,BDCDYH,ZDZHDM,DZDZWLX,DZWMC,MJDW,MJ,DAH,ZT,WX_DCY,WX_DCSJ,WX_CLY,WX_CLSJ,WX_ZTY,WX_ZTSJ,WX_ZJY,WX_ZJSJ,WX_WYDM,DatabaseId,FLAGS,XGR,XGSJ,geometry FROM DZDZW WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_DZDZW="CREATE TRIGGER [vw_ins_DZDZWVIEW] INSTEAD OF INSERT ON [DZDZWVIEW] BEGIN INSERT OR REPLACE INTO [DZDZW] ([Id],[YSDM],[BDCDYH],[ZDZHDM],[DZDZWLX],[DZWMC],[MJDW],[MJ],[DAH],[ZT],[WX_DCY],[WX_DCSJ],[WX_CLY],[WX_CLSJ],[WX_ZTY],[WX_ZTSJ],[WX_ZJY],[WX_ZJSJ],[WX_WYDM],[DatabaseId],[FLAGS],[XGR],[XGSJ],[geometry])  VALUES (NEW.[Id],NEW.[YSDM],NEW.[BDCDYH],NEW.[ZDZHDM],NEW.[DZDZWLX],NEW.[DZWMC],NEW.[MJDW],NEW.[MJ],NEW.[DAH],NEW.[ZT],NEW.[WX_DCY],NEW.[WX_DCSJ],NEW.[WX_CLY],NEW.[WX_CLSJ],NEW.[WX_ZTY],NEW.[WX_ZTSJ],NEW.[WX_ZJY],NEW.[WX_ZJSJ],NEW.[WX_WYDM],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ],NEW.[geometry]);END";
        private string UPDATE_TRIGGER_DZDZW="CREATE TRIGGER [vw_upd_DZDZWVIEW] INSTEAD OF UPDATE OF [Id],[YSDM],[BDCDYH],[ZDZHDM],[DZDZWLX],[DZWMC],[MJDW],[MJ],[DAH],[ZT],[WX_DCY],[WX_DCSJ],[WX_CLY],[WX_CLSJ],[WX_ZTY],[WX_ZTSJ],[WX_ZJY],[WX_ZJSJ],[WX_WYDM],[DatabaseId],[FLAGS],[XGR],[XGSJ],[geometry] ON [DZDZWVIEW] BEGIN UPDATE [DZDZW] SET [Id]=NEW.[Id],[YSDM]=NEW.[YSDM],[BDCDYH]=NEW.[BDCDYH],[ZDZHDM]=NEW.[ZDZHDM],[DZDZWLX]=NEW.[DZDZWLX],[DZWMC]=NEW.[DZWMC],[MJDW]=NEW.[MJDW],[MJ]=NEW.[MJ],[DAH]=NEW.[DAH],[ZT]=NEW.[ZT],[WX_DCY]=NEW.[WX_DCY],[WX_DCSJ]=NEW.[WX_DCSJ],[WX_CLY]=NEW.[WX_CLY],[WX_CLSJ]=NEW.[WX_CLSJ],[WX_ZTY]=NEW.[WX_ZTY],[WX_ZTSJ]=NEW.[WX_ZTSJ],[WX_ZJY]=NEW.[WX_ZJY],[WX_ZJSJ]=NEW.[WX_ZJSJ],[WX_WYDM]=NEW.[WX_WYDM],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ],[geometry]=NEW.[geometry] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_DZDZW="CREATE TRIGGER [vw_del_DZDZWVIEW] INSTEAD OF DELETE ON [DZDZWVIEW] BEGIN DELETE FROM [DZDZW] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_DZDZW="SELECT  Id,YSDM,BDCDYH,ZDZHDM,DZDZWLX,DZWMC,MJDW,MJ,DAH,ZT,WX_DCY,WX_DCSJ,WX_CLY,WX_CLSJ,WX_ZTY,WX_ZTSJ,WX_ZJY,WX_ZJSJ,WX_WYDM,DatabaseId,FLAGS,XGR,XGSJ,geometry FROM DZDZW WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_DZDZWVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('dzdzwview','geometry','rowid','dzdzw','geometry',0)";
        #endregion        
        
        
        #region FDCQ1 SQL语句
        private string CREATE_VIEW_FDCQ1="CREATE VIEW FDCQ1VIEW AS SELECT  Id,YSDM,BDCDYH,YWH,QLLX,DJLX,DJYY,FDZL,TDSYQR,DYTDMJ,FTTDMJ,TDSYQSSJ,TDSYJSSJ,FDCJYJG,BDCQZH,QXDM,DJJG,DBR,DJSJ,FJ,FCFHT,QSZT,WX_DCY,WX_DCSJ,WX_CLY,WX_CLSJ,WX_ZTY,WX_ZTSJ,WX_ZJY,WX_ZJSJ,WX_WYDM,DatabaseId,FLAGS,XGR,XGSJ FROM FDCQ1 WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_FDCQ1="CREATE TRIGGER [vw_ins_FDCQ1VIEW] INSTEAD OF INSERT ON [FDCQ1VIEW] BEGIN INSERT OR REPLACE INTO [FDCQ1] ([Id],[YSDM],[BDCDYH],[YWH],[QLLX],[DJLX],[DJYY],[FDZL],[TDSYQR],[DYTDMJ],[FTTDMJ],[TDSYQSSJ],[TDSYJSSJ],[FDCJYJG],[BDCQZH],[QXDM],[DJJG],[DBR],[DJSJ],[FJ],[FCFHT],[QSZT],[WX_DCY],[WX_DCSJ],[WX_CLY],[WX_CLSJ],[WX_ZTY],[WX_ZTSJ],[WX_ZJY],[WX_ZJSJ],[WX_WYDM],[DatabaseId],[FLAGS],[XGR],[XGSJ])  VALUES (NEW.[Id],NEW.[YSDM],NEW.[BDCDYH],NEW.[YWH],NEW.[QLLX],NEW.[DJLX],NEW.[DJYY],NEW.[FDZL],NEW.[TDSYQR],NEW.[DYTDMJ],NEW.[FTTDMJ],NEW.[TDSYQSSJ],NEW.[TDSYJSSJ],NEW.[FDCJYJG],NEW.[BDCQZH],NEW.[QXDM],NEW.[DJJG],NEW.[DBR],NEW.[DJSJ],NEW.[FJ],NEW.[FCFHT],NEW.[QSZT],NEW.[WX_DCY],NEW.[WX_DCSJ],NEW.[WX_CLY],NEW.[WX_CLSJ],NEW.[WX_ZTY],NEW.[WX_ZTSJ],NEW.[WX_ZJY],NEW.[WX_ZJSJ],NEW.[WX_WYDM],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ]);END";
        private string UPDATE_TRIGGER_FDCQ1="CREATE TRIGGER [vw_upd_FDCQ1VIEW] INSTEAD OF UPDATE OF [Id],[YSDM],[BDCDYH],[YWH],[QLLX],[DJLX],[DJYY],[FDZL],[TDSYQR],[DYTDMJ],[FTTDMJ],[TDSYQSSJ],[TDSYJSSJ],[FDCJYJG],[BDCQZH],[QXDM],[DJJG],[DBR],[DJSJ],[FJ],[FCFHT],[QSZT],[WX_DCY],[WX_DCSJ],[WX_CLY],[WX_CLSJ],[WX_ZTY],[WX_ZTSJ],[WX_ZJY],[WX_ZJSJ],[WX_WYDM],[DatabaseId],[FLAGS],[XGR],[XGSJ] ON [FDCQ1VIEW] BEGIN UPDATE [FDCQ1] SET [Id]=NEW.[Id],[YSDM]=NEW.[YSDM],[BDCDYH]=NEW.[BDCDYH],[YWH]=NEW.[YWH],[QLLX]=NEW.[QLLX],[DJLX]=NEW.[DJLX],[DJYY]=NEW.[DJYY],[FDZL]=NEW.[FDZL],[TDSYQR]=NEW.[TDSYQR],[DYTDMJ]=NEW.[DYTDMJ],[FTTDMJ]=NEW.[FTTDMJ],[TDSYQSSJ]=NEW.[TDSYQSSJ],[TDSYJSSJ]=NEW.[TDSYJSSJ],[FDCJYJG]=NEW.[FDCJYJG],[BDCQZH]=NEW.[BDCQZH],[QXDM]=NEW.[QXDM],[DJJG]=NEW.[DJJG],[DBR]=NEW.[DBR],[DJSJ]=NEW.[DJSJ],[FJ]=NEW.[FJ],[FCFHT]=NEW.[FCFHT],[QSZT]=NEW.[QSZT],[WX_DCY]=NEW.[WX_DCY],[WX_DCSJ]=NEW.[WX_DCSJ],[WX_CLY]=NEW.[WX_CLY],[WX_CLSJ]=NEW.[WX_CLSJ],[WX_ZTY]=NEW.[WX_ZTY],[WX_ZTSJ]=NEW.[WX_ZTSJ],[WX_ZJY]=NEW.[WX_ZJY],[WX_ZJSJ]=NEW.[WX_ZJSJ],[WX_WYDM]=NEW.[WX_WYDM],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_FDCQ1="CREATE TRIGGER [vw_del_FDCQ1VIEW] INSTEAD OF DELETE ON [FDCQ1VIEW] BEGIN DELETE FROM [FDCQ1] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_FDCQ1="SELECT  Id,YSDM,BDCDYH,YWH,QLLX,DJLX,DJYY,FDZL,TDSYQR,DYTDMJ,FTTDMJ,TDSYQSSJ,TDSYJSSJ,FDCJYJG,BDCQZH,QXDM,DJJG,DBR,DJSJ,FJ,FCFHT,QSZT,WX_DCY,WX_DCSJ,WX_CLY,WX_CLSJ,WX_ZTY,WX_ZTSJ,WX_ZJY,WX_ZJSJ,WX_WYDM,DatabaseId,FLAGS,XGR,XGSJ FROM FDCQ1 WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_FDCQ1VIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('fdcq1view','geometry','rowid','fdcq1','geometry',0)";
        #endregion        
        
        
        #region FDCQ2 SQL语句
        private string CREATE_VIEW_FDCQ2="CREATE VIEW FDCQ2VIEW AS SELECT  Id,YSDM,BDCDYH,YWH,QLLX,DJLX,DJYY,FDZL,TDSYQR,DYTDMJ,FTTDMJ,TDSYQSSJ,TDSYJSSJ,FDCJYJG,GHYT,FWXZ,FWJG,SZC,ZCS,JZMJ,ZYJZMJ,FTJZMJ,JGSJ,BDCQZH,QXDM,DJJG,DBR,DJSJ,FJ,QSZT,WX_DCY,WX_DCSJ,WX_CLY,WX_CLSJ,WX_ZTY,WX_ZTSJ,WX_ZJY,WX_ZJSJ,WX_WYDM,DatabaseId,FLAGS,XGR,XGSJ FROM FDCQ2 WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_FDCQ2="CREATE TRIGGER [vw_ins_FDCQ2VIEW] INSTEAD OF INSERT ON [FDCQ2VIEW] BEGIN INSERT OR REPLACE INTO [FDCQ2] ([Id],[YSDM],[BDCDYH],[YWH],[QLLX],[DJLX],[DJYY],[FDZL],[TDSYQR],[DYTDMJ],[FTTDMJ],[TDSYQSSJ],[TDSYJSSJ],[FDCJYJG],[GHYT],[FWXZ],[FWJG],[SZC],[ZCS],[JZMJ],[ZYJZMJ],[FTJZMJ],[JGSJ],[BDCQZH],[QXDM],[DJJG],[DBR],[DJSJ],[FJ],[QSZT],[WX_DCY],[WX_DCSJ],[WX_CLY],[WX_CLSJ],[WX_ZTY],[WX_ZTSJ],[WX_ZJY],[WX_ZJSJ],[WX_WYDM],[DatabaseId],[FLAGS],[XGR],[XGSJ])  VALUES (NEW.[Id],NEW.[YSDM],NEW.[BDCDYH],NEW.[YWH],NEW.[QLLX],NEW.[DJLX],NEW.[DJYY],NEW.[FDZL],NEW.[TDSYQR],NEW.[DYTDMJ],NEW.[FTTDMJ],NEW.[TDSYQSSJ],NEW.[TDSYJSSJ],NEW.[FDCJYJG],NEW.[GHYT],NEW.[FWXZ],NEW.[FWJG],NEW.[SZC],NEW.[ZCS],NEW.[JZMJ],NEW.[ZYJZMJ],NEW.[FTJZMJ],NEW.[JGSJ],NEW.[BDCQZH],NEW.[QXDM],NEW.[DJJG],NEW.[DBR],NEW.[DJSJ],NEW.[FJ],NEW.[QSZT],NEW.[WX_DCY],NEW.[WX_DCSJ],NEW.[WX_CLY],NEW.[WX_CLSJ],NEW.[WX_ZTY],NEW.[WX_ZTSJ],NEW.[WX_ZJY],NEW.[WX_ZJSJ],NEW.[WX_WYDM],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ]);END";
        private string UPDATE_TRIGGER_FDCQ2="CREATE TRIGGER [vw_upd_FDCQ2VIEW] INSTEAD OF UPDATE OF [Id],[YSDM],[BDCDYH],[YWH],[QLLX],[DJLX],[DJYY],[FDZL],[TDSYQR],[DYTDMJ],[FTTDMJ],[TDSYQSSJ],[TDSYJSSJ],[FDCJYJG],[GHYT],[FWXZ],[FWJG],[SZC],[ZCS],[JZMJ],[ZYJZMJ],[FTJZMJ],[JGSJ],[BDCQZH],[QXDM],[DJJG],[DBR],[DJSJ],[FJ],[QSZT],[WX_DCY],[WX_DCSJ],[WX_CLY],[WX_CLSJ],[WX_ZTY],[WX_ZTSJ],[WX_ZJY],[WX_ZJSJ],[WX_WYDM],[DatabaseId],[FLAGS],[XGR],[XGSJ] ON [FDCQ2VIEW] BEGIN UPDATE [FDCQ2] SET [Id]=NEW.[Id],[YSDM]=NEW.[YSDM],[BDCDYH]=NEW.[BDCDYH],[YWH]=NEW.[YWH],[QLLX]=NEW.[QLLX],[DJLX]=NEW.[DJLX],[DJYY]=NEW.[DJYY],[FDZL]=NEW.[FDZL],[TDSYQR]=NEW.[TDSYQR],[DYTDMJ]=NEW.[DYTDMJ],[FTTDMJ]=NEW.[FTTDMJ],[TDSYQSSJ]=NEW.[TDSYQSSJ],[TDSYJSSJ]=NEW.[TDSYJSSJ],[FDCJYJG]=NEW.[FDCJYJG],[GHYT]=NEW.[GHYT],[FWXZ]=NEW.[FWXZ],[FWJG]=NEW.[FWJG],[SZC]=NEW.[SZC],[ZCS]=NEW.[ZCS],[JZMJ]=NEW.[JZMJ],[ZYJZMJ]=NEW.[ZYJZMJ],[FTJZMJ]=NEW.[FTJZMJ],[JGSJ]=NEW.[JGSJ],[BDCQZH]=NEW.[BDCQZH],[QXDM]=NEW.[QXDM],[DJJG]=NEW.[DJJG],[DBR]=NEW.[DBR],[DJSJ]=NEW.[DJSJ],[FJ]=NEW.[FJ],[QSZT]=NEW.[QSZT],[WX_DCY]=NEW.[WX_DCY],[WX_DCSJ]=NEW.[WX_DCSJ],[WX_CLY]=NEW.[WX_CLY],[WX_CLSJ]=NEW.[WX_CLSJ],[WX_ZTY]=NEW.[WX_ZTY],[WX_ZTSJ]=NEW.[WX_ZTSJ],[WX_ZJY]=NEW.[WX_ZJY],[WX_ZJSJ]=NEW.[WX_ZJSJ],[WX_WYDM]=NEW.[WX_WYDM],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_FDCQ2="CREATE TRIGGER [vw_del_FDCQ2VIEW] INSTEAD OF DELETE ON [FDCQ2VIEW] BEGIN DELETE FROM [FDCQ2] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_FDCQ2="SELECT  Id,YSDM,BDCDYH,YWH,QLLX,DJLX,DJYY,FDZL,TDSYQR,DYTDMJ,FTTDMJ,TDSYQSSJ,TDSYJSSJ,FDCJYJG,GHYT,FWXZ,FWJG,SZC,ZCS,JZMJ,ZYJZMJ,FTJZMJ,JGSJ,BDCQZH,QXDM,DJJG,DBR,DJSJ,FJ,QSZT,WX_DCY,WX_DCSJ,WX_CLY,WX_CLSJ,WX_ZTY,WX_ZTSJ,WX_ZJY,WX_ZJSJ,WX_WYDM,DatabaseId,FLAGS,XGR,XGSJ FROM FDCQ2 WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_FDCQ2VIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('fdcq2view','geometry','rowid','fdcq2','geometry',0)";
        #endregion        
        
        
        #region FDCQ3 SQL语句
        private string CREATE_VIEW_FDCQ3="CREATE VIEW FDCQ3VIEW AS SELECT  Id,YSDM,BDCDYH,YWH,QLLX,JGZWBH,JGZWMC,JGZWSL,JGZWMJ,FTTDMJ,QXDM,DJJG,DBR,DJSJ,FJ,QSZT,DatabaseId,FLAGS,XGR,XGSJ FROM FDCQ3 WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_FDCQ3="CREATE TRIGGER [vw_ins_FDCQ3VIEW] INSTEAD OF INSERT ON [FDCQ3VIEW] BEGIN INSERT OR REPLACE INTO [FDCQ3] ([Id],[YSDM],[BDCDYH],[YWH],[QLLX],[JGZWBH],[JGZWMC],[JGZWSL],[JGZWMJ],[FTTDMJ],[QXDM],[DJJG],[DBR],[DJSJ],[FJ],[QSZT],[DatabaseId],[FLAGS],[XGR],[XGSJ])  VALUES (NEW.[Id],NEW.[YSDM],NEW.[BDCDYH],NEW.[YWH],NEW.[QLLX],NEW.[JGZWBH],NEW.[JGZWMC],NEW.[JGZWSL],NEW.[JGZWMJ],NEW.[FTTDMJ],NEW.[QXDM],NEW.[DJJG],NEW.[DBR],NEW.[DJSJ],NEW.[FJ],NEW.[QSZT],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ]);END";
        private string UPDATE_TRIGGER_FDCQ3="CREATE TRIGGER [vw_upd_FDCQ3VIEW] INSTEAD OF UPDATE OF [Id],[YSDM],[BDCDYH],[YWH],[QLLX],[JGZWBH],[JGZWMC],[JGZWSL],[JGZWMJ],[FTTDMJ],[QXDM],[DJJG],[DBR],[DJSJ],[FJ],[QSZT],[DatabaseId],[FLAGS],[XGR],[XGSJ] ON [FDCQ3VIEW] BEGIN UPDATE [FDCQ3] SET [Id]=NEW.[Id],[YSDM]=NEW.[YSDM],[BDCDYH]=NEW.[BDCDYH],[YWH]=NEW.[YWH],[QLLX]=NEW.[QLLX],[JGZWBH]=NEW.[JGZWBH],[JGZWMC]=NEW.[JGZWMC],[JGZWSL]=NEW.[JGZWSL],[JGZWMJ]=NEW.[JGZWMJ],[FTTDMJ]=NEW.[FTTDMJ],[QXDM]=NEW.[QXDM],[DJJG]=NEW.[DJJG],[DBR]=NEW.[DBR],[DJSJ]=NEW.[DJSJ],[FJ]=NEW.[FJ],[QSZT]=NEW.[QSZT],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_FDCQ3="CREATE TRIGGER [vw_del_FDCQ3VIEW] INSTEAD OF DELETE ON [FDCQ3VIEW] BEGIN DELETE FROM [FDCQ3] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_FDCQ3="SELECT  Id,YSDM,BDCDYH,YWH,QLLX,JGZWBH,JGZWMC,JGZWSL,JGZWMJ,FTTDMJ,QXDM,DJJG,DBR,DJSJ,FJ,QSZT,DatabaseId,FLAGS,XGR,XGSJ FROM FDCQ3 WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_FDCQ3VIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('fdcq3view','geometry','rowid','fdcq3','geometry',0)";
        #endregion        
        
        
        #region FDCQXM SQL语句
        private string CREATE_VIEW_FDCQXM="CREATE VIEW FDCQXMVIEW AS SELECT  Id,BDCDYH,XMMC,ZH,ZCS,GHYT,FWJG,JZMJ,JGSJ,ZTS,WX_DCY,WX_DCSJ,WX_CLY,WX_CLSJ,WX_ZTY,WX_ZTSJ,WX_ZJY,WX_ZJSJ,WX_WYDM,DatabaseId,FLAGS,XGR,XGSJ FROM FDCQXM WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_FDCQXM="CREATE TRIGGER [vw_ins_FDCQXMVIEW] INSTEAD OF INSERT ON [FDCQXMVIEW] BEGIN INSERT OR REPLACE INTO [FDCQXM] ([Id],[BDCDYH],[XMMC],[ZH],[ZCS],[GHYT],[FWJG],[JZMJ],[JGSJ],[ZTS],[WX_DCY],[WX_DCSJ],[WX_CLY],[WX_CLSJ],[WX_ZTY],[WX_ZTSJ],[WX_ZJY],[WX_ZJSJ],[WX_WYDM],[DatabaseId],[FLAGS],[XGR],[XGSJ])  VALUES (NEW.[Id],NEW.[BDCDYH],NEW.[XMMC],NEW.[ZH],NEW.[ZCS],NEW.[GHYT],NEW.[FWJG],NEW.[JZMJ],NEW.[JGSJ],NEW.[ZTS],NEW.[WX_DCY],NEW.[WX_DCSJ],NEW.[WX_CLY],NEW.[WX_CLSJ],NEW.[WX_ZTY],NEW.[WX_ZTSJ],NEW.[WX_ZJY],NEW.[WX_ZJSJ],NEW.[WX_WYDM],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ]);END";
        private string UPDATE_TRIGGER_FDCQXM="CREATE TRIGGER [vw_upd_FDCQXMVIEW] INSTEAD OF UPDATE OF [Id],[BDCDYH],[XMMC],[ZH],[ZCS],[GHYT],[FWJG],[JZMJ],[JGSJ],[ZTS],[WX_DCY],[WX_DCSJ],[WX_CLY],[WX_CLSJ],[WX_ZTY],[WX_ZTSJ],[WX_ZJY],[WX_ZJSJ],[WX_WYDM],[DatabaseId],[FLAGS],[XGR],[XGSJ] ON [FDCQXMVIEW] BEGIN UPDATE [FDCQXM] SET [Id]=NEW.[Id],[BDCDYH]=NEW.[BDCDYH],[XMMC]=NEW.[XMMC],[ZH]=NEW.[ZH],[ZCS]=NEW.[ZCS],[GHYT]=NEW.[GHYT],[FWJG]=NEW.[FWJG],[JZMJ]=NEW.[JZMJ],[JGSJ]=NEW.[JGSJ],[ZTS]=NEW.[ZTS],[WX_DCY]=NEW.[WX_DCY],[WX_DCSJ]=NEW.[WX_DCSJ],[WX_CLY]=NEW.[WX_CLY],[WX_CLSJ]=NEW.[WX_CLSJ],[WX_ZTY]=NEW.[WX_ZTY],[WX_ZTSJ]=NEW.[WX_ZTSJ],[WX_ZJY]=NEW.[WX_ZJY],[WX_ZJSJ]=NEW.[WX_ZJSJ],[WX_WYDM]=NEW.[WX_WYDM],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_FDCQXM="CREATE TRIGGER [vw_del_FDCQXMVIEW] INSTEAD OF DELETE ON [FDCQXMVIEW] BEGIN DELETE FROM [FDCQXM] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_FDCQXM="SELECT  Id,BDCDYH,XMMC,ZH,ZCS,GHYT,FWJG,JZMJ,JGSJ,ZTS,WX_DCY,WX_DCSJ,WX_CLY,WX_CLSJ,WX_ZTY,WX_ZTSJ,WX_ZJY,WX_ZJSJ,WX_WYDM,DatabaseId,FLAGS,XGR,XGSJ FROM FDCQXM WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_FDCQXMVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('fdcqxmview','geometry','rowid','fdcqxm','geometry',0)";
        #endregion        
        
        
        #region FZ SQL语句
        private string CREATE_VIEW_FZ="CREATE VIEW FZVIEW AS SELECT  Id,YWH,YSDM,FZRY,FZSJ,FZMC,FZSL,HFZSH,LZRXM,LZRZJLB,LZRZJH,LZRDH,LZRDZ,LZRYB,BZ,DatabaseId,FLAGS,XGR,XGSJ FROM FZ WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_FZ="CREATE TRIGGER [vw_ins_FZVIEW] INSTEAD OF INSERT ON [FZVIEW] BEGIN INSERT OR REPLACE INTO [FZ] ([Id],[YWH],[YSDM],[FZRY],[FZSJ],[FZMC],[FZSL],[HFZSH],[LZRXM],[LZRZJLB],[LZRZJH],[LZRDH],[LZRDZ],[LZRYB],[BZ],[DatabaseId],[FLAGS],[XGR],[XGSJ])  VALUES (NEW.[Id],NEW.[YWH],NEW.[YSDM],NEW.[FZRY],NEW.[FZSJ],NEW.[FZMC],NEW.[FZSL],NEW.[HFZSH],NEW.[LZRXM],NEW.[LZRZJLB],NEW.[LZRZJH],NEW.[LZRDH],NEW.[LZRDZ],NEW.[LZRYB],NEW.[BZ],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ]);END";
        private string UPDATE_TRIGGER_FZ="CREATE TRIGGER [vw_upd_FZVIEW] INSTEAD OF UPDATE OF [Id],[YWH],[YSDM],[FZRY],[FZSJ],[FZMC],[FZSL],[HFZSH],[LZRXM],[LZRZJLB],[LZRZJH],[LZRDH],[LZRDZ],[LZRYB],[BZ],[DatabaseId],[FLAGS],[XGR],[XGSJ] ON [FZVIEW] BEGIN UPDATE [FZ] SET [Id]=NEW.[Id],[YWH]=NEW.[YWH],[YSDM]=NEW.[YSDM],[FZRY]=NEW.[FZRY],[FZSJ]=NEW.[FZSJ],[FZMC]=NEW.[FZMC],[FZSL]=NEW.[FZSL],[HFZSH]=NEW.[HFZSH],[LZRXM]=NEW.[LZRXM],[LZRZJLB]=NEW.[LZRZJLB],[LZRZJH]=NEW.[LZRZJH],[LZRDH]=NEW.[LZRDH],[LZRDZ]=NEW.[LZRDZ],[LZRYB]=NEW.[LZRYB],[BZ]=NEW.[BZ],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_FZ="CREATE TRIGGER [vw_del_FZVIEW] INSTEAD OF DELETE ON [FZVIEW] BEGIN DELETE FROM [FZ] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_FZ="SELECT  Id,YWH,YSDM,FZRY,FZSJ,FZMC,FZSL,HFZSH,LZRXM,LZRZJLB,LZRZJH,LZRDH,LZRDZ,LZRYB,BZ,DatabaseId,FLAGS,XGR,XGSJ FROM FZ WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_FZVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('fzview','geometry','rowid','fz','geometry',0)";
        #endregion        
        
        
        #region GD SQL语句
        private string CREATE_VIEW_GD="CREATE VIEW GDVIEW AS SELECT  Id,YWH,YSDM,DJDL,DJXL,ZL,QZHM,WJJS,ZYS,GDRY,GDSJ,BZ,DatabaseId,FLAGS,XGR,XGSJ FROM GD WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_GD="CREATE TRIGGER [vw_ins_GDVIEW] INSTEAD OF INSERT ON [GDVIEW] BEGIN INSERT OR REPLACE INTO [GD] ([Id],[YWH],[YSDM],[DJDL],[DJXL],[ZL],[QZHM],[WJJS],[ZYS],[GDRY],[GDSJ],[BZ],[DatabaseId],[FLAGS],[XGR],[XGSJ])  VALUES (NEW.[Id],NEW.[YWH],NEW.[YSDM],NEW.[DJDL],NEW.[DJXL],NEW.[ZL],NEW.[QZHM],NEW.[WJJS],NEW.[ZYS],NEW.[GDRY],NEW.[GDSJ],NEW.[BZ],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ]);END";
        private string UPDATE_TRIGGER_GD="CREATE TRIGGER [vw_upd_GDVIEW] INSTEAD OF UPDATE OF [Id],[YWH],[YSDM],[DJDL],[DJXL],[ZL],[QZHM],[WJJS],[ZYS],[GDRY],[GDSJ],[BZ],[DatabaseId],[FLAGS],[XGR],[XGSJ] ON [GDVIEW] BEGIN UPDATE [GD] SET [Id]=NEW.[Id],[YWH]=NEW.[YWH],[YSDM]=NEW.[YSDM],[DJDL]=NEW.[DJDL],[DJXL]=NEW.[DJXL],[ZL]=NEW.[ZL],[QZHM]=NEW.[QZHM],[WJJS]=NEW.[WJJS],[ZYS]=NEW.[ZYS],[GDRY]=NEW.[GDRY],[GDSJ]=NEW.[GDSJ],[BZ]=NEW.[BZ],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_GD="CREATE TRIGGER [vw_del_GDVIEW] INSTEAD OF DELETE ON [GDVIEW] BEGIN DELETE FROM [GD] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_GD="SELECT  Id,YWH,YSDM,DJDL,DJXL,ZL,QZHM,WJJS,ZYS,GDRY,GDSJ,BZ,DatabaseId,FLAGS,XGR,XGSJ FROM GD WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_GDVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('gdview','geometry','rowid','gd','geometry',0)";
        #endregion        
        
        
        #region GJZWSYQ SQL语句
        private string CREATE_VIEW_GJZWSYQ="CREATE VIEW GJZWSYQVIEW AS SELECT  Id,YSDM,BDCDYH,YWH,QLLX,DJLX,DJYY,ZL,TDHYSYQR,TDHYSYMJ,TDHYSYQSSJ,TDHYSYJSSJ,GJZWLX,GJZWGHYT,GJZWMJ,JGSJ,BDCQZH,QXDM,DJJG,DBR,DJSJ,FJ,GJZWPMT,QSZT,WX_DCY,WX_DCSJ,WX_CLY,WX_CLSJ,WX_ZTY,WX_ZTSJ,WX_ZJY,WX_ZJSJ,WX_WYDM,DatabaseId,FLAGS,XGR,XGSJ FROM GJZWSYQ WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_GJZWSYQ="CREATE TRIGGER [vw_ins_GJZWSYQVIEW] INSTEAD OF INSERT ON [GJZWSYQVIEW] BEGIN INSERT OR REPLACE INTO [GJZWSYQ] ([Id],[YSDM],[BDCDYH],[YWH],[QLLX],[DJLX],[DJYY],[ZL],[TDHYSYQR],[TDHYSYMJ],[TDHYSYQSSJ],[TDHYSYJSSJ],[GJZWLX],[GJZWGHYT],[GJZWMJ],[JGSJ],[BDCQZH],[QXDM],[DJJG],[DBR],[DJSJ],[FJ],[GJZWPMT],[QSZT],[WX_DCY],[WX_DCSJ],[WX_CLY],[WX_CLSJ],[WX_ZTY],[WX_ZTSJ],[WX_ZJY],[WX_ZJSJ],[WX_WYDM],[DatabaseId],[FLAGS],[XGR],[XGSJ])  VALUES (NEW.[Id],NEW.[YSDM],NEW.[BDCDYH],NEW.[YWH],NEW.[QLLX],NEW.[DJLX],NEW.[DJYY],NEW.[ZL],NEW.[TDHYSYQR],NEW.[TDHYSYMJ],NEW.[TDHYSYQSSJ],NEW.[TDHYSYJSSJ],NEW.[GJZWLX],NEW.[GJZWGHYT],NEW.[GJZWMJ],NEW.[JGSJ],NEW.[BDCQZH],NEW.[QXDM],NEW.[DJJG],NEW.[DBR],NEW.[DJSJ],NEW.[FJ],NEW.[GJZWPMT],NEW.[QSZT],NEW.[WX_DCY],NEW.[WX_DCSJ],NEW.[WX_CLY],NEW.[WX_CLSJ],NEW.[WX_ZTY],NEW.[WX_ZTSJ],NEW.[WX_ZJY],NEW.[WX_ZJSJ],NEW.[WX_WYDM],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ]);END";
        private string UPDATE_TRIGGER_GJZWSYQ="CREATE TRIGGER [vw_upd_GJZWSYQVIEW] INSTEAD OF UPDATE OF [Id],[YSDM],[BDCDYH],[YWH],[QLLX],[DJLX],[DJYY],[ZL],[TDHYSYQR],[TDHYSYMJ],[TDHYSYQSSJ],[TDHYSYJSSJ],[GJZWLX],[GJZWGHYT],[GJZWMJ],[JGSJ],[BDCQZH],[QXDM],[DJJG],[DBR],[DJSJ],[FJ],[GJZWPMT],[QSZT],[WX_DCY],[WX_DCSJ],[WX_CLY],[WX_CLSJ],[WX_ZTY],[WX_ZTSJ],[WX_ZJY],[WX_ZJSJ],[WX_WYDM],[DatabaseId],[FLAGS],[XGR],[XGSJ] ON [GJZWSYQVIEW] BEGIN UPDATE [GJZWSYQ] SET [Id]=NEW.[Id],[YSDM]=NEW.[YSDM],[BDCDYH]=NEW.[BDCDYH],[YWH]=NEW.[YWH],[QLLX]=NEW.[QLLX],[DJLX]=NEW.[DJLX],[DJYY]=NEW.[DJYY],[ZL]=NEW.[ZL],[TDHYSYQR]=NEW.[TDHYSYQR],[TDHYSYMJ]=NEW.[TDHYSYMJ],[TDHYSYQSSJ]=NEW.[TDHYSYQSSJ],[TDHYSYJSSJ]=NEW.[TDHYSYJSSJ],[GJZWLX]=NEW.[GJZWLX],[GJZWGHYT]=NEW.[GJZWGHYT],[GJZWMJ]=NEW.[GJZWMJ],[JGSJ]=NEW.[JGSJ],[BDCQZH]=NEW.[BDCQZH],[QXDM]=NEW.[QXDM],[DJJG]=NEW.[DJJG],[DBR]=NEW.[DBR],[DJSJ]=NEW.[DJSJ],[FJ]=NEW.[FJ],[GJZWPMT]=NEW.[GJZWPMT],[QSZT]=NEW.[QSZT],[WX_DCY]=NEW.[WX_DCY],[WX_DCSJ]=NEW.[WX_DCSJ],[WX_CLY]=NEW.[WX_CLY],[WX_CLSJ]=NEW.[WX_CLSJ],[WX_ZTY]=NEW.[WX_ZTY],[WX_ZTSJ]=NEW.[WX_ZTSJ],[WX_ZJY]=NEW.[WX_ZJY],[WX_ZJSJ]=NEW.[WX_ZJSJ],[WX_WYDM]=NEW.[WX_WYDM],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_GJZWSYQ="CREATE TRIGGER [vw_del_GJZWSYQVIEW] INSTEAD OF DELETE ON [GJZWSYQVIEW] BEGIN DELETE FROM [GJZWSYQ] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_GJZWSYQ="SELECT  Id,YSDM,BDCDYH,YWH,QLLX,DJLX,DJYY,ZL,TDHYSYQR,TDHYSYMJ,TDHYSYQSSJ,TDHYSYJSSJ,GJZWLX,GJZWGHYT,GJZWMJ,JGSJ,BDCQZH,QXDM,DJJG,DBR,DJSJ,FJ,GJZWPMT,QSZT,WX_DCY,WX_DCSJ,WX_CLY,WX_CLSJ,WX_ZTY,WX_ZTSJ,WX_ZJY,WX_ZJSJ,WX_WYDM,DatabaseId,FLAGS,XGR,XGSJ FROM GJZWSYQ WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_GJZWSYQVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('gjzwsyqview','geometry','rowid','gjzwsyq','geometry',0)";
        #endregion        
        
        
        #region GZW SQL语句
        private string CREATE_VIEW_GZW="CREATE VIEW GZWVIEW AS SELECT  Id,YSDM,BDCDYH,ZDZHDM,GZWMC,ZL,MJDW,MJ,DAH,ZT,WX_DCY,WX_DCSJ,WX_CLY,WX_CLSJ,WX_ZTY,WX_ZTSJ,WX_ZJY,WX_ZJSJ,WX_WYDM,DatabaseId,FLAGS,XGR,XGSJ,geometry FROM GZW WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_GZW="CREATE TRIGGER [vw_ins_GZWVIEW] INSTEAD OF INSERT ON [GZWVIEW] BEGIN INSERT OR REPLACE INTO [GZW] ([Id],[YSDM],[BDCDYH],[ZDZHDM],[GZWMC],[ZL],[MJDW],[MJ],[DAH],[ZT],[WX_DCY],[WX_DCSJ],[WX_CLY],[WX_CLSJ],[WX_ZTY],[WX_ZTSJ],[WX_ZJY],[WX_ZJSJ],[WX_WYDM],[DatabaseId],[FLAGS],[XGR],[XGSJ],[geometry])  VALUES (NEW.[Id],NEW.[YSDM],NEW.[BDCDYH],NEW.[ZDZHDM],NEW.[GZWMC],NEW.[ZL],NEW.[MJDW],NEW.[MJ],NEW.[DAH],NEW.[ZT],NEW.[WX_DCY],NEW.[WX_DCSJ],NEW.[WX_CLY],NEW.[WX_CLSJ],NEW.[WX_ZTY],NEW.[WX_ZTSJ],NEW.[WX_ZJY],NEW.[WX_ZJSJ],NEW.[WX_WYDM],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ],NEW.[geometry]);END";
        private string UPDATE_TRIGGER_GZW="CREATE TRIGGER [vw_upd_GZWVIEW] INSTEAD OF UPDATE OF [Id],[YSDM],[BDCDYH],[ZDZHDM],[GZWMC],[ZL],[MJDW],[MJ],[DAH],[ZT],[WX_DCY],[WX_DCSJ],[WX_CLY],[WX_CLSJ],[WX_ZTY],[WX_ZTSJ],[WX_ZJY],[WX_ZJSJ],[WX_WYDM],[DatabaseId],[FLAGS],[XGR],[XGSJ],[geometry] ON [GZWVIEW] BEGIN UPDATE [GZW] SET [Id]=NEW.[Id],[YSDM]=NEW.[YSDM],[BDCDYH]=NEW.[BDCDYH],[ZDZHDM]=NEW.[ZDZHDM],[GZWMC]=NEW.[GZWMC],[ZL]=NEW.[ZL],[MJDW]=NEW.[MJDW],[MJ]=NEW.[MJ],[DAH]=NEW.[DAH],[ZT]=NEW.[ZT],[WX_DCY]=NEW.[WX_DCY],[WX_DCSJ]=NEW.[WX_DCSJ],[WX_CLY]=NEW.[WX_CLY],[WX_CLSJ]=NEW.[WX_CLSJ],[WX_ZTY]=NEW.[WX_ZTY],[WX_ZTSJ]=NEW.[WX_ZTSJ],[WX_ZJY]=NEW.[WX_ZJY],[WX_ZJSJ]=NEW.[WX_ZJSJ],[WX_WYDM]=NEW.[WX_WYDM],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ],[geometry]=NEW.[geometry] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_GZW="CREATE TRIGGER [vw_del_GZWVIEW] INSTEAD OF DELETE ON [GZWVIEW] BEGIN DELETE FROM [GZW] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_GZW="SELECT  Id,YSDM,BDCDYH,ZDZHDM,GZWMC,ZL,MJDW,MJ,DAH,ZT,WX_DCY,WX_DCSJ,WX_CLY,WX_CLSJ,WX_ZTY,WX_ZTSJ,WX_ZJY,WX_ZJSJ,WX_WYDM,DatabaseId,FLAGS,XGR,XGSJ,geometry FROM GZW WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_GZWVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('gzwview','geometry','rowid','gzw','geometry',0)";
        #endregion        
        
        
        #region H SQL语句
        private string CREATE_VIEW_H="CREATE VIEW HVIEW AS SELECT  Id,BDCDYH,FWBM,YSDM,ZRZH,LJZH,CH,ZL,MJDW,SJCS,HH,SHBW,HX,HXJG,FWYT1,FWYT2,FWYT3,YCJZMJ,YCTNJZMJ,YCFTJZMJ,YCDXBFJZMJ,YCQTJZMJ,YCFTXS,SCJZMJ,SCTNJZMJ,SCFTJZMJ,SCDXBFJZMJ,SCQTJZMJ,SCFTXS,GYTDMJ,FTTDMJ,DYTDMJ,FWLX,FWXZ,FCFHT,ZT,WX_DCY,WX_DCSJ,WX_CLY,WX_CLSJ,WX_ZTY,WX_ZTSJ,WX_ZJY,WX_ZJSJ,WX_WYDM,DatabaseId,FLAGS,XGR,XGSJ FROM H WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_H="CREATE TRIGGER [vw_ins_HVIEW] INSTEAD OF INSERT ON [HVIEW] BEGIN INSERT OR REPLACE INTO [H] ([Id],[BDCDYH],[FWBM],[YSDM],[ZRZH],[LJZH],[CH],[ZL],[MJDW],[SJCS],[HH],[SHBW],[HX],[HXJG],[FWYT1],[FWYT2],[FWYT3],[YCJZMJ],[YCTNJZMJ],[YCFTJZMJ],[YCDXBFJZMJ],[YCQTJZMJ],[YCFTXS],[SCJZMJ],[SCTNJZMJ],[SCFTJZMJ],[SCDXBFJZMJ],[SCQTJZMJ],[SCFTXS],[GYTDMJ],[FTTDMJ],[DYTDMJ],[FWLX],[FWXZ],[FCFHT],[ZT],[WX_DCY],[WX_DCSJ],[WX_CLY],[WX_CLSJ],[WX_ZTY],[WX_ZTSJ],[WX_ZJY],[WX_ZJSJ],[WX_WYDM],[DatabaseId],[FLAGS],[XGR],[XGSJ])  VALUES (NEW.[Id],NEW.[BDCDYH],NEW.[FWBM],NEW.[YSDM],NEW.[ZRZH],NEW.[LJZH],NEW.[CH],NEW.[ZL],NEW.[MJDW],NEW.[SJCS],NEW.[HH],NEW.[SHBW],NEW.[HX],NEW.[HXJG],NEW.[FWYT1],NEW.[FWYT2],NEW.[FWYT3],NEW.[YCJZMJ],NEW.[YCTNJZMJ],NEW.[YCFTJZMJ],NEW.[YCDXBFJZMJ],NEW.[YCQTJZMJ],NEW.[YCFTXS],NEW.[SCJZMJ],NEW.[SCTNJZMJ],NEW.[SCFTJZMJ],NEW.[SCDXBFJZMJ],NEW.[SCQTJZMJ],NEW.[SCFTXS],NEW.[GYTDMJ],NEW.[FTTDMJ],NEW.[DYTDMJ],NEW.[FWLX],NEW.[FWXZ],NEW.[FCFHT],NEW.[ZT],NEW.[WX_DCY],NEW.[WX_DCSJ],NEW.[WX_CLY],NEW.[WX_CLSJ],NEW.[WX_ZTY],NEW.[WX_ZTSJ],NEW.[WX_ZJY],NEW.[WX_ZJSJ],NEW.[WX_WYDM],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ]);END";
        private string UPDATE_TRIGGER_H="CREATE TRIGGER [vw_upd_HVIEW] INSTEAD OF UPDATE OF [Id],[BDCDYH],[FWBM],[YSDM],[ZRZH],[LJZH],[CH],[ZL],[MJDW],[SJCS],[HH],[SHBW],[HX],[HXJG],[FWYT1],[FWYT2],[FWYT3],[YCJZMJ],[YCTNJZMJ],[YCFTJZMJ],[YCDXBFJZMJ],[YCQTJZMJ],[YCFTXS],[SCJZMJ],[SCTNJZMJ],[SCFTJZMJ],[SCDXBFJZMJ],[SCQTJZMJ],[SCFTXS],[GYTDMJ],[FTTDMJ],[DYTDMJ],[FWLX],[FWXZ],[FCFHT],[ZT],[WX_DCY],[WX_DCSJ],[WX_CLY],[WX_CLSJ],[WX_ZTY],[WX_ZTSJ],[WX_ZJY],[WX_ZJSJ],[WX_WYDM],[DatabaseId],[FLAGS],[XGR],[XGSJ] ON [HVIEW] BEGIN UPDATE [H] SET [Id]=NEW.[Id],[BDCDYH]=NEW.[BDCDYH],[FWBM]=NEW.[FWBM],[YSDM]=NEW.[YSDM],[ZRZH]=NEW.[ZRZH],[LJZH]=NEW.[LJZH],[CH]=NEW.[CH],[ZL]=NEW.[ZL],[MJDW]=NEW.[MJDW],[SJCS]=NEW.[SJCS],[HH]=NEW.[HH],[SHBW]=NEW.[SHBW],[HX]=NEW.[HX],[HXJG]=NEW.[HXJG],[FWYT1]=NEW.[FWYT1],[FWYT2]=NEW.[FWYT2],[FWYT3]=NEW.[FWYT3],[YCJZMJ]=NEW.[YCJZMJ],[YCTNJZMJ]=NEW.[YCTNJZMJ],[YCFTJZMJ]=NEW.[YCFTJZMJ],[YCDXBFJZMJ]=NEW.[YCDXBFJZMJ],[YCQTJZMJ]=NEW.[YCQTJZMJ],[YCFTXS]=NEW.[YCFTXS],[SCJZMJ]=NEW.[SCJZMJ],[SCTNJZMJ]=NEW.[SCTNJZMJ],[SCFTJZMJ]=NEW.[SCFTJZMJ],[SCDXBFJZMJ]=NEW.[SCDXBFJZMJ],[SCQTJZMJ]=NEW.[SCQTJZMJ],[SCFTXS]=NEW.[SCFTXS],[GYTDMJ]=NEW.[GYTDMJ],[FTTDMJ]=NEW.[FTTDMJ],[DYTDMJ]=NEW.[DYTDMJ],[FWLX]=NEW.[FWLX],[FWXZ]=NEW.[FWXZ],[FCFHT]=NEW.[FCFHT],[ZT]=NEW.[ZT],[WX_DCY]=NEW.[WX_DCY],[WX_DCSJ]=NEW.[WX_DCSJ],[WX_CLY]=NEW.[WX_CLY],[WX_CLSJ]=NEW.[WX_CLSJ],[WX_ZTY]=NEW.[WX_ZTY],[WX_ZTSJ]=NEW.[WX_ZTSJ],[WX_ZJY]=NEW.[WX_ZJY],[WX_ZJSJ]=NEW.[WX_ZJSJ],[WX_WYDM]=NEW.[WX_WYDM],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_H="CREATE TRIGGER [vw_del_HVIEW] INSTEAD OF DELETE ON [HVIEW] BEGIN DELETE FROM [H] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_H="SELECT  Id,BDCDYH,FWBM,YSDM,ZRZH,LJZH,CH,ZL,MJDW,SJCS,HH,SHBW,HX,HXJG,FWYT1,FWYT2,FWYT3,YCJZMJ,YCTNJZMJ,YCFTJZMJ,YCDXBFJZMJ,YCQTJZMJ,YCFTXS,SCJZMJ,SCTNJZMJ,SCFTJZMJ,SCDXBFJZMJ,SCQTJZMJ,SCFTXS,GYTDMJ,FTTDMJ,DYTDMJ,FWLX,FWXZ,FCFHT,ZT,WX_DCY,WX_DCSJ,WX_CLY,WX_CLSJ,WX_ZTY,WX_ZTSJ,WX_ZJY,WX_ZJSJ,WX_WYDM,DatabaseId,FLAGS,XGR,XGSJ FROM H WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_HVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('hview','geometry','rowid','h','geometry',0)";
        #endregion        
        
        
        #region HYSYQ SQL语句
        private string CREATE_VIEW_HYSYQ="CREATE VIEW HYSYQVIEW AS SELECT  Id,YSDM,ZHHDDM,BDCDYH,YWH,QLLX,DJLX,DJYY,SYQMJ,SYQQSSJ,SYQJSSJ,SYJZE,SYJBZYJ,SYJJNQK,BDCQZH,QXDM,DJJG,DBR,DJSJ,FJ,QSZT,DatabaseId,FLAGS,XGR,XGSJ FROM HYSYQ WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_HYSYQ="CREATE TRIGGER [vw_ins_HYSYQVIEW] INSTEAD OF INSERT ON [HYSYQVIEW] BEGIN INSERT OR REPLACE INTO [HYSYQ] ([Id],[YSDM],[ZHHDDM],[BDCDYH],[YWH],[QLLX],[DJLX],[DJYY],[SYQMJ],[SYQQSSJ],[SYQJSSJ],[SYJZE],[SYJBZYJ],[SYJJNQK],[BDCQZH],[QXDM],[DJJG],[DBR],[DJSJ],[FJ],[QSZT],[DatabaseId],[FLAGS],[XGR],[XGSJ])  VALUES (NEW.[Id],NEW.[YSDM],NEW.[ZHHDDM],NEW.[BDCDYH],NEW.[YWH],NEW.[QLLX],NEW.[DJLX],NEW.[DJYY],NEW.[SYQMJ],NEW.[SYQQSSJ],NEW.[SYQJSSJ],NEW.[SYJZE],NEW.[SYJBZYJ],NEW.[SYJJNQK],NEW.[BDCQZH],NEW.[QXDM],NEW.[DJJG],NEW.[DBR],NEW.[DJSJ],NEW.[FJ],NEW.[QSZT],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ]);END";
        private string UPDATE_TRIGGER_HYSYQ="CREATE TRIGGER [vw_upd_HYSYQVIEW] INSTEAD OF UPDATE OF [Id],[YSDM],[ZHHDDM],[BDCDYH],[YWH],[QLLX],[DJLX],[DJYY],[SYQMJ],[SYQQSSJ],[SYQJSSJ],[SYJZE],[SYJBZYJ],[SYJJNQK],[BDCQZH],[QXDM],[DJJG],[DBR],[DJSJ],[FJ],[QSZT],[DatabaseId],[FLAGS],[XGR],[XGSJ] ON [HYSYQVIEW] BEGIN UPDATE [HYSYQ] SET [Id]=NEW.[Id],[YSDM]=NEW.[YSDM],[ZHHDDM]=NEW.[ZHHDDM],[BDCDYH]=NEW.[BDCDYH],[YWH]=NEW.[YWH],[QLLX]=NEW.[QLLX],[DJLX]=NEW.[DJLX],[DJYY]=NEW.[DJYY],[SYQMJ]=NEW.[SYQMJ],[SYQQSSJ]=NEW.[SYQQSSJ],[SYQJSSJ]=NEW.[SYQJSSJ],[SYJZE]=NEW.[SYJZE],[SYJBZYJ]=NEW.[SYJBZYJ],[SYJJNQK]=NEW.[SYJJNQK],[BDCQZH]=NEW.[BDCQZH],[QXDM]=NEW.[QXDM],[DJJG]=NEW.[DJJG],[DBR]=NEW.[DBR],[DJSJ]=NEW.[DJSJ],[FJ]=NEW.[FJ],[QSZT]=NEW.[QSZT],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_HYSYQ="CREATE TRIGGER [vw_del_HYSYQVIEW] INSTEAD OF DELETE ON [HYSYQVIEW] BEGIN DELETE FROM [HYSYQ] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_HYSYQ="SELECT  Id,YSDM,ZHHDDM,BDCDYH,YWH,QLLX,DJLX,DJYY,SYQMJ,SYQQSSJ,SYQJSSJ,SYJZE,SYJBZYJ,SYJJNQK,BDCQZH,QXDM,DJJG,DBR,DJSJ,FJ,QSZT,DatabaseId,FLAGS,XGR,XGSJ FROM HYSYQ WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_HYSYQVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('hysyqview','geometry','rowid','hysyq','geometry',0)";
        #endregion        
        
        
        #region JSYDSYQ SQL语句
        private string CREATE_VIEW_JSYDSYQ="CREATE VIEW JSYDSYQVIEW AS SELECT  Id,YSDM,ZDDM,BDCDYH,YWH,QLLX,DJLX,DJYY,SYQMJ,SYQQSSJ,SYQJSSJ,QDJG,BDCQZH,QXDM,DJJG,DBR,DJSJ,FJ,QSZT,WX_DCY,WX_DCSJ,WX_CLY,WX_CLSJ,WX_ZTY,WX_ZTSJ,WX_ZJY,WX_ZJSJ,WX_WYDM,DatabaseId,FLAGS,XGR,XGSJ FROM JSYDSYQ WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_JSYDSYQ="CREATE TRIGGER [vw_ins_JSYDSYQVIEW] INSTEAD OF INSERT ON [JSYDSYQVIEW] BEGIN INSERT OR REPLACE INTO [JSYDSYQ] ([Id],[YSDM],[ZDDM],[BDCDYH],[YWH],[QLLX],[DJLX],[DJYY],[SYQMJ],[SYQQSSJ],[SYQJSSJ],[QDJG],[BDCQZH],[QXDM],[DJJG],[DBR],[DJSJ],[FJ],[QSZT],[WX_DCY],[WX_DCSJ],[WX_CLY],[WX_CLSJ],[WX_ZTY],[WX_ZTSJ],[WX_ZJY],[WX_ZJSJ],[WX_WYDM],[DatabaseId],[FLAGS],[XGR],[XGSJ])  VALUES (NEW.[Id],NEW.[YSDM],NEW.[ZDDM],NEW.[BDCDYH],NEW.[YWH],NEW.[QLLX],NEW.[DJLX],NEW.[DJYY],NEW.[SYQMJ],NEW.[SYQQSSJ],NEW.[SYQJSSJ],NEW.[QDJG],NEW.[BDCQZH],NEW.[QXDM],NEW.[DJJG],NEW.[DBR],NEW.[DJSJ],NEW.[FJ],NEW.[QSZT],NEW.[WX_DCY],NEW.[WX_DCSJ],NEW.[WX_CLY],NEW.[WX_CLSJ],NEW.[WX_ZTY],NEW.[WX_ZTSJ],NEW.[WX_ZJY],NEW.[WX_ZJSJ],NEW.[WX_WYDM],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ]);END";
        private string UPDATE_TRIGGER_JSYDSYQ="CREATE TRIGGER [vw_upd_JSYDSYQVIEW] INSTEAD OF UPDATE OF [Id],[YSDM],[ZDDM],[BDCDYH],[YWH],[QLLX],[DJLX],[DJYY],[SYQMJ],[SYQQSSJ],[SYQJSSJ],[QDJG],[BDCQZH],[QXDM],[DJJG],[DBR],[DJSJ],[FJ],[QSZT],[WX_DCY],[WX_DCSJ],[WX_CLY],[WX_CLSJ],[WX_ZTY],[WX_ZTSJ],[WX_ZJY],[WX_ZJSJ],[WX_WYDM],[DatabaseId],[FLAGS],[XGR],[XGSJ] ON [JSYDSYQVIEW] BEGIN UPDATE [JSYDSYQ] SET [Id]=NEW.[Id],[YSDM]=NEW.[YSDM],[ZDDM]=NEW.[ZDDM],[BDCDYH]=NEW.[BDCDYH],[YWH]=NEW.[YWH],[QLLX]=NEW.[QLLX],[DJLX]=NEW.[DJLX],[DJYY]=NEW.[DJYY],[SYQMJ]=NEW.[SYQMJ],[SYQQSSJ]=NEW.[SYQQSSJ],[SYQJSSJ]=NEW.[SYQJSSJ],[QDJG]=NEW.[QDJG],[BDCQZH]=NEW.[BDCQZH],[QXDM]=NEW.[QXDM],[DJJG]=NEW.[DJJG],[DBR]=NEW.[DBR],[DJSJ]=NEW.[DJSJ],[FJ]=NEW.[FJ],[QSZT]=NEW.[QSZT],[WX_DCY]=NEW.[WX_DCY],[WX_DCSJ]=NEW.[WX_DCSJ],[WX_CLY]=NEW.[WX_CLY],[WX_CLSJ]=NEW.[WX_CLSJ],[WX_ZTY]=NEW.[WX_ZTY],[WX_ZTSJ]=NEW.[WX_ZTSJ],[WX_ZJY]=NEW.[WX_ZJY],[WX_ZJSJ]=NEW.[WX_ZJSJ],[WX_WYDM]=NEW.[WX_WYDM],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_JSYDSYQ="CREATE TRIGGER [vw_del_JSYDSYQVIEW] INSTEAD OF DELETE ON [JSYDSYQVIEW] BEGIN DELETE FROM [JSYDSYQ] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_JSYDSYQ="SELECT  Id,YSDM,ZDDM,BDCDYH,YWH,QLLX,DJLX,DJYY,SYQMJ,SYQQSSJ,SYQJSSJ,QDJG,BDCQZH,QXDM,DJJG,DBR,DJSJ,FJ,QSZT,WX_DCY,WX_DCSJ,WX_CLY,WX_CLSJ,WX_ZTY,WX_ZTSJ,WX_ZJY,WX_ZJSJ,WX_WYDM,DatabaseId,FLAGS,XGR,XGSJ FROM JSYDSYQ WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_JSYDSYQVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('jsydsyqview','geometry','rowid','jsydsyq','geometry',0)";
        #endregion        
        
        
        #region JZD SQL语句
        private string CREATE_VIEW_JZD="CREATE VIEW JZDVIEW AS SELECT  Id,ZDZHDM,YSDM,JZDH,SXH,JBLX,JZDLX,XZBZ,YZBZ,WX_DCY,WX_DCSJ,WX_CLY,WX_CLSJ,WX_ZTY,WX_ZTSJ,WX_ZJY,WX_ZJSJ,WX_WYDM,DatabaseId,FLAGS,XGR,XGSJ,geometry FROM JZD WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_JZD="CREATE TRIGGER [vw_ins_JZDVIEW] INSTEAD OF INSERT ON [JZDVIEW] BEGIN INSERT OR REPLACE INTO [JZD] ([Id],[ZDZHDM],[YSDM],[JZDH],[SXH],[JBLX],[JZDLX],[XZBZ],[YZBZ],[WX_DCY],[WX_DCSJ],[WX_CLY],[WX_CLSJ],[WX_ZTY],[WX_ZTSJ],[WX_ZJY],[WX_ZJSJ],[WX_WYDM],[DatabaseId],[FLAGS],[XGR],[XGSJ],[geometry])  VALUES (NEW.[Id],NEW.[ZDZHDM],NEW.[YSDM],NEW.[JZDH],NEW.[SXH],NEW.[JBLX],NEW.[JZDLX],NEW.[XZBZ],NEW.[YZBZ],NEW.[WX_DCY],NEW.[WX_DCSJ],NEW.[WX_CLY],NEW.[WX_CLSJ],NEW.[WX_ZTY],NEW.[WX_ZTSJ],NEW.[WX_ZJY],NEW.[WX_ZJSJ],NEW.[WX_WYDM],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ],NEW.[geometry]);END";
        private string UPDATE_TRIGGER_JZD="CREATE TRIGGER [vw_upd_JZDVIEW] INSTEAD OF UPDATE OF [Id],[ZDZHDM],[YSDM],[JZDH],[SXH],[JBLX],[JZDLX],[XZBZ],[YZBZ],[WX_DCY],[WX_DCSJ],[WX_CLY],[WX_CLSJ],[WX_ZTY],[WX_ZTSJ],[WX_ZJY],[WX_ZJSJ],[WX_WYDM],[DatabaseId],[FLAGS],[XGR],[XGSJ],[geometry] ON [JZDVIEW] BEGIN UPDATE [JZD] SET [Id]=NEW.[Id],[ZDZHDM]=NEW.[ZDZHDM],[YSDM]=NEW.[YSDM],[JZDH]=NEW.[JZDH],[SXH]=NEW.[SXH],[JBLX]=NEW.[JBLX],[JZDLX]=NEW.[JZDLX],[XZBZ]=NEW.[XZBZ],[YZBZ]=NEW.[YZBZ],[WX_DCY]=NEW.[WX_DCY],[WX_DCSJ]=NEW.[WX_DCSJ],[WX_CLY]=NEW.[WX_CLY],[WX_CLSJ]=NEW.[WX_CLSJ],[WX_ZTY]=NEW.[WX_ZTY],[WX_ZTSJ]=NEW.[WX_ZTSJ],[WX_ZJY]=NEW.[WX_ZJY],[WX_ZJSJ]=NEW.[WX_ZJSJ],[WX_WYDM]=NEW.[WX_WYDM],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ],[geometry]=NEW.[geometry] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_JZD="CREATE TRIGGER [vw_del_JZDVIEW] INSTEAD OF DELETE ON [JZDVIEW] BEGIN DELETE FROM [JZD] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_JZD="SELECT  Id,ZDZHDM,YSDM,JZDH,SXH,JBLX,JZDLX,XZBZ,YZBZ,WX_DCY,WX_DCSJ,WX_CLY,WX_CLSJ,WX_ZTY,WX_ZTSJ,WX_ZJY,WX_ZJSJ,WX_WYDM,DatabaseId,FLAGS,XGR,XGSJ,geometry FROM JZD WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_JZDVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('jzdview','geometry','rowid','jzd','geometry',0)";
        #endregion        
        
        
        #region JZDZJ SQL语句
        private string CREATE_VIEW_JZDZJ="CREATE VIEW JZDZJVIEW AS SELECT  Id,GLYSBH,YSDM,ZJNR,ZT,YS,BS,XZ,XHX,KD,GD,ZJDZXJXZB,ZJDZXJYZB,ZJFX,DatabaseId,FLAGS,XGR,XGSJ,geometry FROM JZDZJ WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_JZDZJ="CREATE TRIGGER [vw_ins_JZDZJVIEW] INSTEAD OF INSERT ON [JZDZJVIEW] BEGIN INSERT OR REPLACE INTO [JZDZJ] ([Id],[GLYSBH],[YSDM],[ZJNR],[ZT],[YS],[BS],[XZ],[XHX],[KD],[GD],[ZJDZXJXZB],[ZJDZXJYZB],[ZJFX],[DatabaseId],[FLAGS],[XGR],[XGSJ],[geometry])  VALUES (NEW.[Id],NEW.[GLYSBH],NEW.[YSDM],NEW.[ZJNR],NEW.[ZT],NEW.[YS],NEW.[BS],NEW.[XZ],NEW.[XHX],NEW.[KD],NEW.[GD],NEW.[ZJDZXJXZB],NEW.[ZJDZXJYZB],NEW.[ZJFX],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ],NEW.[geometry]);END";
        private string UPDATE_TRIGGER_JZDZJ="CREATE TRIGGER [vw_upd_JZDZJVIEW] INSTEAD OF UPDATE OF [Id],[GLYSBH],[YSDM],[ZJNR],[ZT],[YS],[BS],[XZ],[XHX],[KD],[GD],[ZJDZXJXZB],[ZJDZXJYZB],[ZJFX],[DatabaseId],[FLAGS],[XGR],[XGSJ],[geometry] ON [JZDZJVIEW] BEGIN UPDATE [JZDZJ] SET [Id]=NEW.[Id],[GLYSBH]=NEW.[GLYSBH],[YSDM]=NEW.[YSDM],[ZJNR]=NEW.[ZJNR],[ZT]=NEW.[ZT],[YS]=NEW.[YS],[BS]=NEW.[BS],[XZ]=NEW.[XZ],[XHX]=NEW.[XHX],[KD]=NEW.[KD],[GD]=NEW.[GD],[ZJDZXJXZB]=NEW.[ZJDZXJXZB],[ZJDZXJYZB]=NEW.[ZJDZXJYZB],[ZJFX]=NEW.[ZJFX],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ],[geometry]=NEW.[geometry] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_JZDZJ="CREATE TRIGGER [vw_del_JZDZJVIEW] INSTEAD OF DELETE ON [JZDZJVIEW] BEGIN DELETE FROM [JZDZJ] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_JZDZJ="SELECT  Id,GLYSBH,YSDM,ZJNR,ZT,YS,BS,XZ,XHX,KD,GD,ZJDZXJXZB,ZJDZXJYZB,ZJFX,DatabaseId,FLAGS,XGR,XGSJ,geometry FROM JZDZJ WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_JZDZJVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('jzdzjview','geometry','rowid','jzdzj','geometry',0)";
        #endregion        
        
        
        #region JZX SQL语句
        private string CREATE_VIEW_JZX="CREATE VIEW JZXVIEW AS SELECT  Id,ZDZHDM,YSDM,JZXCD,JZXLB,JZXWZ,JXXZ,QSJXXYSBH,QSJXXYS,QSZYYYSBH,QSZYYYS,WX_DCY,WX_DCSJ,WX_CLY,WX_CLSJ,WX_ZTY,WX_ZTSJ,WX_ZJY,WX_ZJSJ,WX_WYDM,DatabaseId,FLAGS,XGR,XGSJ,geometry FROM JZX WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_JZX="CREATE TRIGGER [vw_ins_JZXVIEW] INSTEAD OF INSERT ON [JZXVIEW] BEGIN INSERT OR REPLACE INTO [JZX] ([Id],[ZDZHDM],[YSDM],[JZXCD],[JZXLB],[JZXWZ],[JXXZ],[QSJXXYSBH],[QSJXXYS],[QSZYYYSBH],[QSZYYYS],[WX_DCY],[WX_DCSJ],[WX_CLY],[WX_CLSJ],[WX_ZTY],[WX_ZTSJ],[WX_ZJY],[WX_ZJSJ],[WX_WYDM],[DatabaseId],[FLAGS],[XGR],[XGSJ],[geometry])  VALUES (NEW.[Id],NEW.[ZDZHDM],NEW.[YSDM],NEW.[JZXCD],NEW.[JZXLB],NEW.[JZXWZ],NEW.[JXXZ],NEW.[QSJXXYSBH],NEW.[QSJXXYS],NEW.[QSZYYYSBH],NEW.[QSZYYYS],NEW.[WX_DCY],NEW.[WX_DCSJ],NEW.[WX_CLY],NEW.[WX_CLSJ],NEW.[WX_ZTY],NEW.[WX_ZTSJ],NEW.[WX_ZJY],NEW.[WX_ZJSJ],NEW.[WX_WYDM],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ],NEW.[geometry]);END";
        private string UPDATE_TRIGGER_JZX="CREATE TRIGGER [vw_upd_JZXVIEW] INSTEAD OF UPDATE OF [Id],[ZDZHDM],[YSDM],[JZXCD],[JZXLB],[JZXWZ],[JXXZ],[QSJXXYSBH],[QSJXXYS],[QSZYYYSBH],[QSZYYYS],[WX_DCY],[WX_DCSJ],[WX_CLY],[WX_CLSJ],[WX_ZTY],[WX_ZTSJ],[WX_ZJY],[WX_ZJSJ],[WX_WYDM],[DatabaseId],[FLAGS],[XGR],[XGSJ],[geometry] ON [JZXVIEW] BEGIN UPDATE [JZX] SET [Id]=NEW.[Id],[ZDZHDM]=NEW.[ZDZHDM],[YSDM]=NEW.[YSDM],[JZXCD]=NEW.[JZXCD],[JZXLB]=NEW.[JZXLB],[JZXWZ]=NEW.[JZXWZ],[JXXZ]=NEW.[JXXZ],[QSJXXYSBH]=NEW.[QSJXXYSBH],[QSJXXYS]=NEW.[QSJXXYS],[QSZYYYSBH]=NEW.[QSZYYYSBH],[QSZYYYS]=NEW.[QSZYYYS],[WX_DCY]=NEW.[WX_DCY],[WX_DCSJ]=NEW.[WX_DCSJ],[WX_CLY]=NEW.[WX_CLY],[WX_CLSJ]=NEW.[WX_CLSJ],[WX_ZTY]=NEW.[WX_ZTY],[WX_ZTSJ]=NEW.[WX_ZTSJ],[WX_ZJY]=NEW.[WX_ZJY],[WX_ZJSJ]=NEW.[WX_ZJSJ],[WX_WYDM]=NEW.[WX_WYDM],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ],[geometry]=NEW.[geometry] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_JZX="CREATE TRIGGER [vw_del_JZXVIEW] INSTEAD OF DELETE ON [JZXVIEW] BEGIN DELETE FROM [JZX] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_JZX="SELECT  Id,ZDZHDM,YSDM,JZXCD,JZXLB,JZXWZ,JXXZ,QSJXXYSBH,QSJXXYS,QSZYYYSBH,QSZYYYS,WX_DCY,WX_DCSJ,WX_CLY,WX_CLSJ,WX_ZTY,WX_ZTSJ,WX_ZJY,WX_ZJSJ,WX_WYDM,DatabaseId,FLAGS,XGR,XGSJ,geometry FROM JZX WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_JZXVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('jzxview','geometry','rowid','jzx','geometry',0)";
        #endregion        
        
        
        #region JZXZJ SQL语句
        private string CREATE_VIEW_JZXZJ="CREATE VIEW JZXZJVIEW AS SELECT  Id,GLYSBH,YSDM,ZJNR,ZT,YS,BS,XZ,XHX,KD,GD,ZJDZXJXZB,ZJDZXJYZB,ZJFX,DatabaseId,FLAGS,XGR,XGSJ,geometry FROM JZXZJ WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_JZXZJ="CREATE TRIGGER [vw_ins_JZXZJVIEW] INSTEAD OF INSERT ON [JZXZJVIEW] BEGIN INSERT OR REPLACE INTO [JZXZJ] ([Id],[GLYSBH],[YSDM],[ZJNR],[ZT],[YS],[BS],[XZ],[XHX],[KD],[GD],[ZJDZXJXZB],[ZJDZXJYZB],[ZJFX],[DatabaseId],[FLAGS],[XGR],[XGSJ],[geometry])  VALUES (NEW.[Id],NEW.[GLYSBH],NEW.[YSDM],NEW.[ZJNR],NEW.[ZT],NEW.[YS],NEW.[BS],NEW.[XZ],NEW.[XHX],NEW.[KD],NEW.[GD],NEW.[ZJDZXJXZB],NEW.[ZJDZXJYZB],NEW.[ZJFX],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ],NEW.[geometry]);END";
        private string UPDATE_TRIGGER_JZXZJ="CREATE TRIGGER [vw_upd_JZXZJVIEW] INSTEAD OF UPDATE OF [Id],[GLYSBH],[YSDM],[ZJNR],[ZT],[YS],[BS],[XZ],[XHX],[KD],[GD],[ZJDZXJXZB],[ZJDZXJYZB],[ZJFX],[DatabaseId],[FLAGS],[XGR],[XGSJ],[geometry] ON [JZXZJVIEW] BEGIN UPDATE [JZXZJ] SET [Id]=NEW.[Id],[GLYSBH]=NEW.[GLYSBH],[YSDM]=NEW.[YSDM],[ZJNR]=NEW.[ZJNR],[ZT]=NEW.[ZT],[YS]=NEW.[YS],[BS]=NEW.[BS],[XZ]=NEW.[XZ],[XHX]=NEW.[XHX],[KD]=NEW.[KD],[GD]=NEW.[GD],[ZJDZXJXZB]=NEW.[ZJDZXJXZB],[ZJDZXJYZB]=NEW.[ZJDZXJYZB],[ZJFX]=NEW.[ZJFX],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ],[geometry]=NEW.[geometry] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_JZXZJ="CREATE TRIGGER [vw_del_JZXZJVIEW] INSTEAD OF DELETE ON [JZXZJVIEW] BEGIN DELETE FROM [JZXZJ] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_JZXZJ="SELECT  Id,GLYSBH,YSDM,ZJNR,ZT,YS,BS,XZ,XHX,KD,GD,ZJDZXJXZB,ZJDZXJYZB,ZJFX,DatabaseId,FLAGS,XGR,XGSJ,geometry FROM JZXZJ WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_JZXZJVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('jzxzjview','geometry','rowid','jzxzj','geometry',0)";
        #endregion        
        
        
        #region LJZ SQL语句
        private string CREATE_VIEW_LJZ="CREATE VIEW LJZVIEW AS SELECT  Id,LJZH,ZRZH,YSDM,MPH,YCJZMJ,YCDXMJ,YCQTMJ,SCJZMJ,SCDXMJ,SCQTMJ,JGRQ,FWJG1,FWJG2,FWJG3,JZWZT,FWYT1,FWYT2,FWYT3,ZCS,DSCS,DXCS,BZ,DatabaseId,FLAGS,XGR,XGSJ FROM LJZ WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_LJZ="CREATE TRIGGER [vw_ins_LJZVIEW] INSTEAD OF INSERT ON [LJZVIEW] BEGIN INSERT OR REPLACE INTO [LJZ] ([Id],[LJZH],[ZRZH],[YSDM],[MPH],[YCJZMJ],[YCDXMJ],[YCQTMJ],[SCJZMJ],[SCDXMJ],[SCQTMJ],[JGRQ],[FWJG1],[FWJG2],[FWJG3],[JZWZT],[FWYT1],[FWYT2],[FWYT3],[ZCS],[DSCS],[DXCS],[BZ],[DatabaseId],[FLAGS],[XGR],[XGSJ])  VALUES (NEW.[Id],NEW.[LJZH],NEW.[ZRZH],NEW.[YSDM],NEW.[MPH],NEW.[YCJZMJ],NEW.[YCDXMJ],NEW.[YCQTMJ],NEW.[SCJZMJ],NEW.[SCDXMJ],NEW.[SCQTMJ],NEW.[JGRQ],NEW.[FWJG1],NEW.[FWJG2],NEW.[FWJG3],NEW.[JZWZT],NEW.[FWYT1],NEW.[FWYT2],NEW.[FWYT3],NEW.[ZCS],NEW.[DSCS],NEW.[DXCS],NEW.[BZ],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ]);END";
        private string UPDATE_TRIGGER_LJZ="CREATE TRIGGER [vw_upd_LJZVIEW] INSTEAD OF UPDATE OF [Id],[LJZH],[ZRZH],[YSDM],[MPH],[YCJZMJ],[YCDXMJ],[YCQTMJ],[SCJZMJ],[SCDXMJ],[SCQTMJ],[JGRQ],[FWJG1],[FWJG2],[FWJG3],[JZWZT],[FWYT1],[FWYT2],[FWYT3],[ZCS],[DSCS],[DXCS],[BZ],[DatabaseId],[FLAGS],[XGR],[XGSJ] ON [LJZVIEW] BEGIN UPDATE [LJZ] SET [Id]=NEW.[Id],[LJZH]=NEW.[LJZH],[ZRZH]=NEW.[ZRZH],[YSDM]=NEW.[YSDM],[MPH]=NEW.[MPH],[YCJZMJ]=NEW.[YCJZMJ],[YCDXMJ]=NEW.[YCDXMJ],[YCQTMJ]=NEW.[YCQTMJ],[SCJZMJ]=NEW.[SCJZMJ],[SCDXMJ]=NEW.[SCDXMJ],[SCQTMJ]=NEW.[SCQTMJ],[JGRQ]=NEW.[JGRQ],[FWJG1]=NEW.[FWJG1],[FWJG2]=NEW.[FWJG2],[FWJG3]=NEW.[FWJG3],[JZWZT]=NEW.[JZWZT],[FWYT1]=NEW.[FWYT1],[FWYT2]=NEW.[FWYT2],[FWYT3]=NEW.[FWYT3],[ZCS]=NEW.[ZCS],[DSCS]=NEW.[DSCS],[DXCS]=NEW.[DXCS],[BZ]=NEW.[BZ],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_LJZ="CREATE TRIGGER [vw_del_LJZVIEW] INSTEAD OF DELETE ON [LJZVIEW] BEGIN DELETE FROM [LJZ] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_LJZ="SELECT  Id,LJZH,ZRZH,YSDM,MPH,YCJZMJ,YCDXMJ,YCQTMJ,SCJZMJ,SCDXMJ,SCQTMJ,JGRQ,FWJG1,FWJG2,FWJG3,JZWZT,FWYT1,FWYT2,FWYT3,ZCS,DSCS,DXCS,BZ,DatabaseId,FLAGS,XGR,XGSJ FROM LJZ WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_LJZVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('ljzview','geometry','rowid','ljz','geometry',0)";
        #endregion        
        
        
        #region LQ SQL语句
        private string CREATE_VIEW_LQ="CREATE VIEW LQVIEW AS SELECT  Id,YSDM,BDCDYH,YWH,QLLX,DJLX,DJYY,FBF,SYQMJ,LDSYQSSJ,LDSYJSSJ,LDSYQXZ,SLLMSYQR1,SLLMSYQR2,ZYSZ,ZS,LZ,QY,ZLND,LB,XB,XDM,BDCQZH,QXDM,DJJG,DBR,DJSJ,FJ,QSZT,DatabaseId,FLAGS,XGR,XGSJ FROM LQ WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_LQ="CREATE TRIGGER [vw_ins_LQVIEW] INSTEAD OF INSERT ON [LQVIEW] BEGIN INSERT OR REPLACE INTO [LQ] ([Id],[YSDM],[BDCDYH],[YWH],[QLLX],[DJLX],[DJYY],[FBF],[SYQMJ],[LDSYQSSJ],[LDSYJSSJ],[LDSYQXZ],[SLLMSYQR1],[SLLMSYQR2],[ZYSZ],[ZS],[LZ],[QY],[ZLND],[LB],[XB],[XDM],[BDCQZH],[QXDM],[DJJG],[DBR],[DJSJ],[FJ],[QSZT],[DatabaseId],[FLAGS],[XGR],[XGSJ])  VALUES (NEW.[Id],NEW.[YSDM],NEW.[BDCDYH],NEW.[YWH],NEW.[QLLX],NEW.[DJLX],NEW.[DJYY],NEW.[FBF],NEW.[SYQMJ],NEW.[LDSYQSSJ],NEW.[LDSYJSSJ],NEW.[LDSYQXZ],NEW.[SLLMSYQR1],NEW.[SLLMSYQR2],NEW.[ZYSZ],NEW.[ZS],NEW.[LZ],NEW.[QY],NEW.[ZLND],NEW.[LB],NEW.[XB],NEW.[XDM],NEW.[BDCQZH],NEW.[QXDM],NEW.[DJJG],NEW.[DBR],NEW.[DJSJ],NEW.[FJ],NEW.[QSZT],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ]);END";
        private string UPDATE_TRIGGER_LQ="CREATE TRIGGER [vw_upd_LQVIEW] INSTEAD OF UPDATE OF [Id],[YSDM],[BDCDYH],[YWH],[QLLX],[DJLX],[DJYY],[FBF],[SYQMJ],[LDSYQSSJ],[LDSYJSSJ],[LDSYQXZ],[SLLMSYQR1],[SLLMSYQR2],[ZYSZ],[ZS],[LZ],[QY],[ZLND],[LB],[XB],[XDM],[BDCQZH],[QXDM],[DJJG],[DBR],[DJSJ],[FJ],[QSZT],[DatabaseId],[FLAGS],[XGR],[XGSJ] ON [LQVIEW] BEGIN UPDATE [LQ] SET [Id]=NEW.[Id],[YSDM]=NEW.[YSDM],[BDCDYH]=NEW.[BDCDYH],[YWH]=NEW.[YWH],[QLLX]=NEW.[QLLX],[DJLX]=NEW.[DJLX],[DJYY]=NEW.[DJYY],[FBF]=NEW.[FBF],[SYQMJ]=NEW.[SYQMJ],[LDSYQSSJ]=NEW.[LDSYQSSJ],[LDSYJSSJ]=NEW.[LDSYJSSJ],[LDSYQXZ]=NEW.[LDSYQXZ],[SLLMSYQR1]=NEW.[SLLMSYQR1],[SLLMSYQR2]=NEW.[SLLMSYQR2],[ZYSZ]=NEW.[ZYSZ],[ZS]=NEW.[ZS],[LZ]=NEW.[LZ],[QY]=NEW.[QY],[ZLND]=NEW.[ZLND],[LB]=NEW.[LB],[XB]=NEW.[XB],[XDM]=NEW.[XDM],[BDCQZH]=NEW.[BDCQZH],[QXDM]=NEW.[QXDM],[DJJG]=NEW.[DJJG],[DBR]=NEW.[DBR],[DJSJ]=NEW.[DJSJ],[FJ]=NEW.[FJ],[QSZT]=NEW.[QSZT],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_LQ="CREATE TRIGGER [vw_del_LQVIEW] INSTEAD OF DELETE ON [LQVIEW] BEGIN DELETE FROM [LQ] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_LQ="SELECT  Id,YSDM,BDCDYH,YWH,QLLX,DJLX,DJYY,FBF,SYQMJ,LDSYQSSJ,LDSYJSSJ,LDSYQXZ,SLLMSYQR1,SLLMSYQR2,ZYSZ,ZS,LZ,QY,ZLND,LB,XB,XDM,BDCQZH,QXDM,DJJG,DBR,DJSJ,FJ,QSZT,DatabaseId,FLAGS,XGR,XGSJ FROM LQ WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_LQVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('lqview','geometry','rowid','lq','geometry',0)";
        #endregion        
        
        
        #region MZDZW SQL语句
        private string CREATE_VIEW_MZDZW="CREATE VIEW MZDZWVIEW AS SELECT  Id,YSDM,BDCDYH,ZDZHDM,MZDZWLX,DZWMC,MJDW,MJ,DAH,ZT,WX_DCY,WX_DCSJ,WX_CLY,WX_CLSJ,WX_ZTY,WX_ZTSJ,WX_ZJY,WX_ZJSJ,WX_WYDM,DatabaseId,FLAGS,XGR,XGSJ,geometry FROM MZDZW WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_MZDZW="CREATE TRIGGER [vw_ins_MZDZWVIEW] INSTEAD OF INSERT ON [MZDZWVIEW] BEGIN INSERT OR REPLACE INTO [MZDZW] ([Id],[YSDM],[BDCDYH],[ZDZHDM],[MZDZWLX],[DZWMC],[MJDW],[MJ],[DAH],[ZT],[WX_DCY],[WX_DCSJ],[WX_CLY],[WX_CLSJ],[WX_ZTY],[WX_ZTSJ],[WX_ZJY],[WX_ZJSJ],[WX_WYDM],[DatabaseId],[FLAGS],[XGR],[XGSJ],[geometry])  VALUES (NEW.[Id],NEW.[YSDM],NEW.[BDCDYH],NEW.[ZDZHDM],NEW.[MZDZWLX],NEW.[DZWMC],NEW.[MJDW],NEW.[MJ],NEW.[DAH],NEW.[ZT],NEW.[WX_DCY],NEW.[WX_DCSJ],NEW.[WX_CLY],NEW.[WX_CLSJ],NEW.[WX_ZTY],NEW.[WX_ZTSJ],NEW.[WX_ZJY],NEW.[WX_ZJSJ],NEW.[WX_WYDM],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ],NEW.[geometry]);END";
        private string UPDATE_TRIGGER_MZDZW="CREATE TRIGGER [vw_upd_MZDZWVIEW] INSTEAD OF UPDATE OF [Id],[YSDM],[BDCDYH],[ZDZHDM],[MZDZWLX],[DZWMC],[MJDW],[MJ],[DAH],[ZT],[WX_DCY],[WX_DCSJ],[WX_CLY],[WX_CLSJ],[WX_ZTY],[WX_ZTSJ],[WX_ZJY],[WX_ZJSJ],[WX_WYDM],[DatabaseId],[FLAGS],[XGR],[XGSJ],[geometry] ON [MZDZWVIEW] BEGIN UPDATE [MZDZW] SET [Id]=NEW.[Id],[YSDM]=NEW.[YSDM],[BDCDYH]=NEW.[BDCDYH],[ZDZHDM]=NEW.[ZDZHDM],[MZDZWLX]=NEW.[MZDZWLX],[DZWMC]=NEW.[DZWMC],[MJDW]=NEW.[MJDW],[MJ]=NEW.[MJ],[DAH]=NEW.[DAH],[ZT]=NEW.[ZT],[WX_DCY]=NEW.[WX_DCY],[WX_DCSJ]=NEW.[WX_DCSJ],[WX_CLY]=NEW.[WX_CLY],[WX_CLSJ]=NEW.[WX_CLSJ],[WX_ZTY]=NEW.[WX_ZTY],[WX_ZTSJ]=NEW.[WX_ZTSJ],[WX_ZJY]=NEW.[WX_ZJY],[WX_ZJSJ]=NEW.[WX_ZJSJ],[WX_WYDM]=NEW.[WX_WYDM],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ],[geometry]=NEW.[geometry] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_MZDZW="CREATE TRIGGER [vw_del_MZDZWVIEW] INSTEAD OF DELETE ON [MZDZWVIEW] BEGIN DELETE FROM [MZDZW] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_MZDZW="SELECT  Id,YSDM,BDCDYH,ZDZHDM,MZDZWLX,DZWMC,MJDW,MJ,DAH,ZT,WX_DCY,WX_DCSJ,WX_CLY,WX_CLSJ,WX_ZTY,WX_ZTSJ,WX_ZJY,WX_ZJSJ,WX_WYDM,DatabaseId,FLAGS,XGR,XGSJ,geometry FROM MZDZW WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_MZDZWVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('mzdzwview','geometry','rowid','mzdzw','geometry',0)";
        #endregion        
        
        
        #region NYDSYQ SQL语句
        private string CREATE_VIEW_NYDSYQ="CREATE VIEW NYDSYQVIEW AS SELECT  Id,YSDM,BDCDYH,YWH,QLLX,DJLX,DJYY,ZL,FBFDM,FBFMC,CBMJ,CBQSSJ,CBJSSJ,TDSYQXZ,SYTTLX,YZYFS,CYZL,SYZCL,BDCQZH,QXDM,DJJG,DBR,DJSJ,FJ,QSZT,WX_DCY,WX_DCSJ,WX_CLY,WX_CLSJ,WX_ZTY,WX_ZTSJ,WX_ZJY,WX_ZJSJ,WX_WYDM,DatabaseId,FLAGS,XGR,XGSJ FROM NYDSYQ WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_NYDSYQ="CREATE TRIGGER [vw_ins_NYDSYQVIEW] INSTEAD OF INSERT ON [NYDSYQVIEW] BEGIN INSERT OR REPLACE INTO [NYDSYQ] ([Id],[YSDM],[BDCDYH],[YWH],[QLLX],[DJLX],[DJYY],[ZL],[FBFDM],[FBFMC],[CBMJ],[CBQSSJ],[CBJSSJ],[TDSYQXZ],[SYTTLX],[YZYFS],[CYZL],[SYZCL],[BDCQZH],[QXDM],[DJJG],[DBR],[DJSJ],[FJ],[QSZT],[WX_DCY],[WX_DCSJ],[WX_CLY],[WX_CLSJ],[WX_ZTY],[WX_ZTSJ],[WX_ZJY],[WX_ZJSJ],[WX_WYDM],[DatabaseId],[FLAGS],[XGR],[XGSJ])  VALUES (NEW.[Id],NEW.[YSDM],NEW.[BDCDYH],NEW.[YWH],NEW.[QLLX],NEW.[DJLX],NEW.[DJYY],NEW.[ZL],NEW.[FBFDM],NEW.[FBFMC],NEW.[CBMJ],NEW.[CBQSSJ],NEW.[CBJSSJ],NEW.[TDSYQXZ],NEW.[SYTTLX],NEW.[YZYFS],NEW.[CYZL],NEW.[SYZCL],NEW.[BDCQZH],NEW.[QXDM],NEW.[DJJG],NEW.[DBR],NEW.[DJSJ],NEW.[FJ],NEW.[QSZT],NEW.[WX_DCY],NEW.[WX_DCSJ],NEW.[WX_CLY],NEW.[WX_CLSJ],NEW.[WX_ZTY],NEW.[WX_ZTSJ],NEW.[WX_ZJY],NEW.[WX_ZJSJ],NEW.[WX_WYDM],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ]);END";
        private string UPDATE_TRIGGER_NYDSYQ="CREATE TRIGGER [vw_upd_NYDSYQVIEW] INSTEAD OF UPDATE OF [Id],[YSDM],[BDCDYH],[YWH],[QLLX],[DJLX],[DJYY],[ZL],[FBFDM],[FBFMC],[CBMJ],[CBQSSJ],[CBJSSJ],[TDSYQXZ],[SYTTLX],[YZYFS],[CYZL],[SYZCL],[BDCQZH],[QXDM],[DJJG],[DBR],[DJSJ],[FJ],[QSZT],[WX_DCY],[WX_DCSJ],[WX_CLY],[WX_CLSJ],[WX_ZTY],[WX_ZTSJ],[WX_ZJY],[WX_ZJSJ],[WX_WYDM],[DatabaseId],[FLAGS],[XGR],[XGSJ] ON [NYDSYQVIEW] BEGIN UPDATE [NYDSYQ] SET [Id]=NEW.[Id],[YSDM]=NEW.[YSDM],[BDCDYH]=NEW.[BDCDYH],[YWH]=NEW.[YWH],[QLLX]=NEW.[QLLX],[DJLX]=NEW.[DJLX],[DJYY]=NEW.[DJYY],[ZL]=NEW.[ZL],[FBFDM]=NEW.[FBFDM],[FBFMC]=NEW.[FBFMC],[CBMJ]=NEW.[CBMJ],[CBQSSJ]=NEW.[CBQSSJ],[CBJSSJ]=NEW.[CBJSSJ],[TDSYQXZ]=NEW.[TDSYQXZ],[SYTTLX]=NEW.[SYTTLX],[YZYFS]=NEW.[YZYFS],[CYZL]=NEW.[CYZL],[SYZCL]=NEW.[SYZCL],[BDCQZH]=NEW.[BDCQZH],[QXDM]=NEW.[QXDM],[DJJG]=NEW.[DJJG],[DBR]=NEW.[DBR],[DJSJ]=NEW.[DJSJ],[FJ]=NEW.[FJ],[QSZT]=NEW.[QSZT],[WX_DCY]=NEW.[WX_DCY],[WX_DCSJ]=NEW.[WX_DCSJ],[WX_CLY]=NEW.[WX_CLY],[WX_CLSJ]=NEW.[WX_CLSJ],[WX_ZTY]=NEW.[WX_ZTY],[WX_ZTSJ]=NEW.[WX_ZTSJ],[WX_ZJY]=NEW.[WX_ZJY],[WX_ZJSJ]=NEW.[WX_ZJSJ],[WX_WYDM]=NEW.[WX_WYDM],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_NYDSYQ="CREATE TRIGGER [vw_del_NYDSYQVIEW] INSTEAD OF DELETE ON [NYDSYQVIEW] BEGIN DELETE FROM [NYDSYQ] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_NYDSYQ="SELECT  Id,YSDM,BDCDYH,YWH,QLLX,DJLX,DJYY,ZL,FBFDM,FBFMC,CBMJ,CBQSSJ,CBJSSJ,TDSYQXZ,SYTTLX,YZYFS,CYZL,SYZCL,BDCQZH,QXDM,DJJG,DBR,DJSJ,FJ,QSZT,WX_DCY,WX_DCSJ,WX_CLY,WX_CLSJ,WX_ZTY,WX_ZTSJ,WX_ZJY,WX_ZJSJ,WX_WYDM,DatabaseId,FLAGS,XGR,XGSJ FROM NYDSYQ WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_NYDSYQVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('nydsyqview','geometry','rowid','nydsyq','geometry',0)";
        #endregion        
        
        
        #region QLR SQL语句
        private string CREATE_VIEW_QLR="CREATE VIEW QLRVIEW AS SELECT  Id,YSDM,BDCDYH,SXH,QLRMC,BDCQZH,QZYSXLH,SFCZR,ZJZL,ZJH,FZJG,SSHY,GJ,HJSZSS,XB,DH,DZ,YB,GZDW,DZYJ,QLRLX,QLBL,GYFS,GYQK,BZ,DatabaseId,FLAGS,XGR,XGSJ,WX_WYDM FROM QLR WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_QLR="CREATE TRIGGER [vw_ins_QLRVIEW] INSTEAD OF INSERT ON [QLRVIEW] BEGIN INSERT OR REPLACE INTO [QLR] ([Id],[YSDM],[BDCDYH],[SXH],[QLRMC],[BDCQZH],[QZYSXLH],[SFCZR],[ZJZL],[ZJH],[FZJG],[SSHY],[GJ],[HJSZSS],[XB],[DH],[DZ],[YB],[GZDW],[DZYJ],[QLRLX],[QLBL],[GYFS],[GYQK],[BZ],[DatabaseId],[FLAGS],[XGR],[XGSJ],[WX_WYDM])  VALUES (NEW.[Id],NEW.[YSDM],NEW.[BDCDYH],NEW.[SXH],NEW.[QLRMC],NEW.[BDCQZH],NEW.[QZYSXLH],NEW.[SFCZR],NEW.[ZJZL],NEW.[ZJH],NEW.[FZJG],NEW.[SSHY],NEW.[GJ],NEW.[HJSZSS],NEW.[XB],NEW.[DH],NEW.[DZ],NEW.[YB],NEW.[GZDW],NEW.[DZYJ],NEW.[QLRLX],NEW.[QLBL],NEW.[GYFS],NEW.[GYQK],NEW.[BZ],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ],NEW.[WX_WYDM]);END";
        private string UPDATE_TRIGGER_QLR="CREATE TRIGGER [vw_upd_QLRVIEW] INSTEAD OF UPDATE OF [Id],[YSDM],[BDCDYH],[SXH],[QLRMC],[BDCQZH],[QZYSXLH],[SFCZR],[ZJZL],[ZJH],[FZJG],[SSHY],[GJ],[HJSZSS],[XB],[DH],[DZ],[YB],[GZDW],[DZYJ],[QLRLX],[QLBL],[GYFS],[GYQK],[BZ],[DatabaseId],[FLAGS],[XGR],[XGSJ],[WX_WYDM] ON [QLRVIEW] BEGIN UPDATE [QLR] SET [Id]=NEW.[Id],[YSDM]=NEW.[YSDM],[BDCDYH]=NEW.[BDCDYH],[SXH]=NEW.[SXH],[QLRMC]=NEW.[QLRMC],[BDCQZH]=NEW.[BDCQZH],[QZYSXLH]=NEW.[QZYSXLH],[SFCZR]=NEW.[SFCZR],[ZJZL]=NEW.[ZJZL],[ZJH]=NEW.[ZJH],[FZJG]=NEW.[FZJG],[SSHY]=NEW.[SSHY],[GJ]=NEW.[GJ],[HJSZSS]=NEW.[HJSZSS],[XB]=NEW.[XB],[DH]=NEW.[DH],[DZ]=NEW.[DZ],[YB]=NEW.[YB],[GZDW]=NEW.[GZDW],[DZYJ]=NEW.[DZYJ],[QLRLX]=NEW.[QLRLX],[QLBL]=NEW.[QLBL],[GYFS]=NEW.[GYFS],[GYQK]=NEW.[GYQK],[BZ]=NEW.[BZ],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ],[WX_WYDM]=NEW.[WX_WYDM] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_QLR="CREATE TRIGGER [vw_del_QLRVIEW] INSTEAD OF DELETE ON [QLRVIEW] BEGIN DELETE FROM [QLR] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_QLR="SELECT  Id,YSDM,BDCDYH,SXH,QLRMC,BDCQZH,QZYSXLH,SFCZR,ZJZL,ZJH,FZJG,SSHY,GJ,HJSZSS,XB,DH,DZ,YB,GZDW,DZYJ,QLRLX,QLBL,GYFS,GYQK,BZ,DatabaseId,FLAGS,XGR,XGSJ,WX_WYDM FROM QLR WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_QLRVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('qlrview','geometry','rowid','qlr','geometry',0)";
        #endregion        
        
        
        #region QTXGQL SQL语句
        private string CREATE_VIEW_QTXGQL="CREATE VIEW QTXGQLVIEW AS SELECT  Id,YSDM,BDCDYH,YWH,QLLX,DJLX,DJYY,QLQSSJ,QLJSSJ,QSFS,SYLX,QSL,QSYT,KCMJ,KCFS,KCKZ,SCGM,BDCQZH,QXDM,DJJG,DBR,DJSJ,FJ,FT,QSZT,DatabaseId,FLAGS,XGR,XGSJ FROM QTXGQL WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_QTXGQL="CREATE TRIGGER [vw_ins_QTXGQLVIEW] INSTEAD OF INSERT ON [QTXGQLVIEW] BEGIN INSERT OR REPLACE INTO [QTXGQL] ([Id],[YSDM],[BDCDYH],[YWH],[QLLX],[DJLX],[DJYY],[QLQSSJ],[QLJSSJ],[QSFS],[SYLX],[QSL],[QSYT],[KCMJ],[KCFS],[KCKZ],[SCGM],[BDCQZH],[QXDM],[DJJG],[DBR],[DJSJ],[FJ],[FT],[QSZT],[DatabaseId],[FLAGS],[XGR],[XGSJ])  VALUES (NEW.[Id],NEW.[YSDM],NEW.[BDCDYH],NEW.[YWH],NEW.[QLLX],NEW.[DJLX],NEW.[DJYY],NEW.[QLQSSJ],NEW.[QLJSSJ],NEW.[QSFS],NEW.[SYLX],NEW.[QSL],NEW.[QSYT],NEW.[KCMJ],NEW.[KCFS],NEW.[KCKZ],NEW.[SCGM],NEW.[BDCQZH],NEW.[QXDM],NEW.[DJJG],NEW.[DBR],NEW.[DJSJ],NEW.[FJ],NEW.[FT],NEW.[QSZT],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ]);END";
        private string UPDATE_TRIGGER_QTXGQL="CREATE TRIGGER [vw_upd_QTXGQLVIEW] INSTEAD OF UPDATE OF [Id],[YSDM],[BDCDYH],[YWH],[QLLX],[DJLX],[DJYY],[QLQSSJ],[QLJSSJ],[QSFS],[SYLX],[QSL],[QSYT],[KCMJ],[KCFS],[KCKZ],[SCGM],[BDCQZH],[QXDM],[DJJG],[DBR],[DJSJ],[FJ],[FT],[QSZT],[DatabaseId],[FLAGS],[XGR],[XGSJ] ON [QTXGQLVIEW] BEGIN UPDATE [QTXGQL] SET [Id]=NEW.[Id],[YSDM]=NEW.[YSDM],[BDCDYH]=NEW.[BDCDYH],[YWH]=NEW.[YWH],[QLLX]=NEW.[QLLX],[DJLX]=NEW.[DJLX],[DJYY]=NEW.[DJYY],[QLQSSJ]=NEW.[QLQSSJ],[QLJSSJ]=NEW.[QLJSSJ],[QSFS]=NEW.[QSFS],[SYLX]=NEW.[SYLX],[QSL]=NEW.[QSL],[QSYT]=NEW.[QSYT],[KCMJ]=NEW.[KCMJ],[KCFS]=NEW.[KCFS],[KCKZ]=NEW.[KCKZ],[SCGM]=NEW.[SCGM],[BDCQZH]=NEW.[BDCQZH],[QXDM]=NEW.[QXDM],[DJJG]=NEW.[DJJG],[DBR]=NEW.[DBR],[DJSJ]=NEW.[DJSJ],[FJ]=NEW.[FJ],[FT]=NEW.[FT],[QSZT]=NEW.[QSZT],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_QTXGQL="CREATE TRIGGER [vw_del_QTXGQLVIEW] INSTEAD OF DELETE ON [QTXGQLVIEW] BEGIN DELETE FROM [QTXGQL] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_QTXGQL="SELECT  Id,YSDM,BDCDYH,YWH,QLLX,DJLX,DJYY,QLQSSJ,QLJSSJ,QSFS,SYLX,QSL,QSYT,KCMJ,KCFS,KCKZ,SCGM,BDCQZH,QXDM,DJJG,DBR,DJSJ,FJ,FT,QSZT,DatabaseId,FLAGS,XGR,XGSJ FROM QTXGQL WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_QTXGQLVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('qtxgqlview','geometry','rowid','qtxgql','geometry',0)";
        #endregion        
        
        
        #region QXZD SQL语句
        private string CREATE_VIEW_QXZD="CREATE VIEW QXZDVIEW AS SELECT  Id,XZQHDM,XZQHMC,DatabaseId,FLAGS,XGR,XGSJ FROM QXZD WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_QXZD="CREATE TRIGGER [vw_ins_QXZDVIEW] INSTEAD OF INSERT ON [QXZDVIEW] BEGIN INSERT OR REPLACE INTO [QXZD] ([Id],[XZQHDM],[XZQHMC],[DatabaseId],[FLAGS],[XGR],[XGSJ])  VALUES (NEW.[Id],NEW.[XZQHDM],NEW.[XZQHMC],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ]);END";
        private string UPDATE_TRIGGER_QXZD="CREATE TRIGGER [vw_upd_QXZDVIEW] INSTEAD OF UPDATE OF [Id],[XZQHDM],[XZQHMC],[DatabaseId],[FLAGS],[XGR],[XGSJ] ON [QXZDVIEW] BEGIN UPDATE [QXZD] SET [Id]=NEW.[Id],[XZQHDM]=NEW.[XZQHDM],[XZQHMC]=NEW.[XZQHMC],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_QXZD="CREATE TRIGGER [vw_del_QXZDVIEW] INSTEAD OF DELETE ON [QXZDVIEW] BEGIN DELETE FROM [QXZD] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_QXZD="SELECT  Id,XZQHDM,XZQHMC,DatabaseId,FLAGS,XGR,XGSJ FROM QXZD WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_QXZDVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('qxzdview','geometry','rowid','qxzd','geometry',0)";
        #endregion        
        
        
        #region R SQL语句
        private string CREATE_VIEW_R="CREATE VIEW RVIEW AS SELECT  Id,YSDM,QLRMC,QLRPY,PYSX,ZJZL,ZJH,FZJG,SSHY,GJ,HJSZSS,XB,DH,DZ,YB,GZDW,DZYJ,BZ,DatabaseId,FLAGS,XGR,XGSJ FROM R WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_R="CREATE TRIGGER [vw_ins_RVIEW] INSTEAD OF INSERT ON [RVIEW] BEGIN INSERT OR REPLACE INTO [R] ([Id],[YSDM],[QLRMC],[QLRPY],[PYSX],[ZJZL],[ZJH],[FZJG],[SSHY],[GJ],[HJSZSS],[XB],[DH],[DZ],[YB],[GZDW],[DZYJ],[BZ],[DatabaseId],[FLAGS],[XGR],[XGSJ])  VALUES (NEW.[Id],NEW.[YSDM],NEW.[QLRMC],NEW.[QLRPY],NEW.[PYSX],NEW.[ZJZL],NEW.[ZJH],NEW.[FZJG],NEW.[SSHY],NEW.[GJ],NEW.[HJSZSS],NEW.[XB],NEW.[DH],NEW.[DZ],NEW.[YB],NEW.[GZDW],NEW.[DZYJ],NEW.[BZ],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ]);END";
        private string UPDATE_TRIGGER_R="CREATE TRIGGER [vw_upd_RVIEW] INSTEAD OF UPDATE OF [Id],[YSDM],[QLRMC],[QLRPY],[PYSX],[ZJZL],[ZJH],[FZJG],[SSHY],[GJ],[HJSZSS],[XB],[DH],[DZ],[YB],[GZDW],[DZYJ],[BZ],[DatabaseId],[FLAGS],[XGR],[XGSJ] ON [RVIEW] BEGIN UPDATE [R] SET [Id]=NEW.[Id],[YSDM]=NEW.[YSDM],[QLRMC]=NEW.[QLRMC],[QLRPY]=NEW.[QLRPY],[PYSX]=NEW.[PYSX],[ZJZL]=NEW.[ZJZL],[ZJH]=NEW.[ZJH],[FZJG]=NEW.[FZJG],[SSHY]=NEW.[SSHY],[GJ]=NEW.[GJ],[HJSZSS]=NEW.[HJSZSS],[XB]=NEW.[XB],[DH]=NEW.[DH],[DZ]=NEW.[DZ],[YB]=NEW.[YB],[GZDW]=NEW.[GZDW],[DZYJ]=NEW.[DZYJ],[BZ]=NEW.[BZ],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_R="CREATE TRIGGER [vw_del_RVIEW] INSTEAD OF DELETE ON [RVIEW] BEGIN DELETE FROM [R] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_R="SELECT  Id,YSDM,QLRMC,QLRPY,PYSX,ZJZL,ZJH,FZJG,SSHY,GJ,HJSZSS,XB,DH,DZ,YB,GZDW,DZYJ,BZ,DatabaseId,FLAGS,XGR,XGSJ FROM R WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_RVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('rview','geometry','rowid','r','geometry',0)";
        #endregion        
        
        
        #region SF SQL语句
        private string CREATE_VIEW_SF="CREATE VIEW SFVIEW AS SELECT  Id,YWH,YSDM,JFRY,JFRQ,SFKMMC,SFEWSF,SFJS,SFLX,YSJE,ZKHYSJE,SFRY,SFRQ,FFF,SJFFR,SSJE,SFDW,DatabaseId,FLAGS,XGR,XGSJ FROM SF WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_SF="CREATE TRIGGER [vw_ins_SFVIEW] INSTEAD OF INSERT ON [SFVIEW] BEGIN INSERT OR REPLACE INTO [SF] ([Id],[YWH],[YSDM],[JFRY],[JFRQ],[SFKMMC],[SFEWSF],[SFJS],[SFLX],[YSJE],[ZKHYSJE],[SFRY],[SFRQ],[FFF],[SJFFR],[SSJE],[SFDW],[DatabaseId],[FLAGS],[XGR],[XGSJ])  VALUES (NEW.[Id],NEW.[YWH],NEW.[YSDM],NEW.[JFRY],NEW.[JFRQ],NEW.[SFKMMC],NEW.[SFEWSF],NEW.[SFJS],NEW.[SFLX],NEW.[YSJE],NEW.[ZKHYSJE],NEW.[SFRY],NEW.[SFRQ],NEW.[FFF],NEW.[SJFFR],NEW.[SSJE],NEW.[SFDW],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ]);END";
        private string UPDATE_TRIGGER_SF="CREATE TRIGGER [vw_upd_SFVIEW] INSTEAD OF UPDATE OF [Id],[YWH],[YSDM],[JFRY],[JFRQ],[SFKMMC],[SFEWSF],[SFJS],[SFLX],[YSJE],[ZKHYSJE],[SFRY],[SFRQ],[FFF],[SJFFR],[SSJE],[SFDW],[DatabaseId],[FLAGS],[XGR],[XGSJ] ON [SFVIEW] BEGIN UPDATE [SF] SET [Id]=NEW.[Id],[YWH]=NEW.[YWH],[YSDM]=NEW.[YSDM],[JFRY]=NEW.[JFRY],[JFRQ]=NEW.[JFRQ],[SFKMMC]=NEW.[SFKMMC],[SFEWSF]=NEW.[SFEWSF],[SFJS]=NEW.[SFJS],[SFLX]=NEW.[SFLX],[YSJE]=NEW.[YSJE],[ZKHYSJE]=NEW.[ZKHYSJE],[SFRY]=NEW.[SFRY],[SFRQ]=NEW.[SFRQ],[FFF]=NEW.[FFF],[SJFFR]=NEW.[SJFFR],[SSJE]=NEW.[SSJE],[SFDW]=NEW.[SFDW],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_SF="CREATE TRIGGER [vw_del_SFVIEW] INSTEAD OF DELETE ON [SFVIEW] BEGIN DELETE FROM [SF] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_SF="SELECT  Id,YWH,YSDM,JFRY,JFRQ,SFKMMC,SFEWSF,SFJS,SFLX,YSJE,ZKHYSJE,SFRY,SFRQ,FFF,SJFFR,SSJE,SFDW,DatabaseId,FLAGS,XGR,XGSJ FROM SF WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_SFVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('sfview','geometry','rowid','sf','geometry',0)";
        #endregion        
        
        
        #region SGSJ SQL语句
        private string CREATE_VIEW_SGSJ="CREATE VIEW SGSJVIEW AS SELECT  Id,YSDM,SJWJM,TWJM,YSJWJM,DatabaseId,FLAGS,XGR,XGSJ FROM SGSJ WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_SGSJ="CREATE TRIGGER [vw_ins_SGSJVIEW] INSTEAD OF INSERT ON [SGSJVIEW] BEGIN INSERT OR REPLACE INTO [SGSJ] ([Id],[YSDM],[SJWJM],[TWJM],[YSJWJM],[DatabaseId],[FLAGS],[XGR],[XGSJ])  VALUES (NEW.[Id],NEW.[YSDM],NEW.[SJWJM],NEW.[TWJM],NEW.[YSJWJM],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ]);END";
        private string UPDATE_TRIGGER_SGSJ="CREATE TRIGGER [vw_upd_SGSJVIEW] INSTEAD OF UPDATE OF [Id],[YSDM],[SJWJM],[TWJM],[YSJWJM],[DatabaseId],[FLAGS],[XGR],[XGSJ] ON [SGSJVIEW] BEGIN UPDATE [SGSJ] SET [Id]=NEW.[Id],[YSDM]=NEW.[YSDM],[SJWJM]=NEW.[SJWJM],[TWJM]=NEW.[TWJM],[YSJWJM]=NEW.[YSJWJM],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_SGSJ="CREATE TRIGGER [vw_del_SGSJVIEW] INSTEAD OF DELETE ON [SGSJVIEW] BEGIN DELETE FROM [SGSJ] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_SGSJ="SELECT  Id,YSDM,SJWJM,TWJM,YSJWJM,DatabaseId,FLAGS,XGR,XGSJ FROM SGSJ WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_SGSJVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('sgsjview','geometry','rowid','sgsj','geometry',0)";
        #endregion        
        
        
        #region SH SQL语句
        private string CREATE_VIEW_SH="CREATE VIEW SHVIEW AS SELECT  Id,YWH,YSDM,JDMC,SXH,SHRYXM,SHKSSJ,SHJSSJ,SHYJ,CZJG,DatabaseId,FLAGS,XGR,XGSJ FROM SH WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_SH="CREATE TRIGGER [vw_ins_SHVIEW] INSTEAD OF INSERT ON [SHVIEW] BEGIN INSERT OR REPLACE INTO [SH] ([Id],[YWH],[YSDM],[JDMC],[SXH],[SHRYXM],[SHKSSJ],[SHJSSJ],[SHYJ],[CZJG],[DatabaseId],[FLAGS],[XGR],[XGSJ])  VALUES (NEW.[Id],NEW.[YWH],NEW.[YSDM],NEW.[JDMC],NEW.[SXH],NEW.[SHRYXM],NEW.[SHKSSJ],NEW.[SHJSSJ],NEW.[SHYJ],NEW.[CZJG],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ]);END";
        private string UPDATE_TRIGGER_SH="CREATE TRIGGER [vw_upd_SHVIEW] INSTEAD OF UPDATE OF [Id],[YWH],[YSDM],[JDMC],[SXH],[SHRYXM],[SHKSSJ],[SHJSSJ],[SHYJ],[CZJG],[DatabaseId],[FLAGS],[XGR],[XGSJ] ON [SHVIEW] BEGIN UPDATE [SH] SET [Id]=NEW.[Id],[YWH]=NEW.[YWH],[YSDM]=NEW.[YSDM],[JDMC]=NEW.[JDMC],[SXH]=NEW.[SXH],[SHRYXM]=NEW.[SHRYXM],[SHKSSJ]=NEW.[SHKSSJ],[SHJSSJ]=NEW.[SHJSSJ],[SHYJ]=NEW.[SHYJ],[CZJG]=NEW.[CZJG],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_SH="CREATE TRIGGER [vw_del_SHVIEW] INSTEAD OF DELETE ON [SHVIEW] BEGIN DELETE FROM [SH] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_SH="SELECT  Id,YWH,YSDM,JDMC,SXH,SHRYXM,SHKSSJ,SHJSSJ,SHYJ,CZJG,DatabaseId,FLAGS,XGR,XGSJ FROM SH WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_SHVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('shview','geometry','rowid','sh','geometry',0)";
        #endregion        
        
        
        #region SJ SQL语句
        private string CREATE_VIEW_SJ="CREATE VIEW SJVIEW AS SELECT  Id,YWH,YSDM,SJSJ,SJLX,SJMC,SJSL,SFSJSY,SFEWSJ,SFBCSJ,YS,BZ,DatabaseId,FLAGS,XGR,XGSJ FROM SJ WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_SJ="CREATE TRIGGER [vw_ins_SJVIEW] INSTEAD OF INSERT ON [SJVIEW] BEGIN INSERT OR REPLACE INTO [SJ] ([Id],[YWH],[YSDM],[SJSJ],[SJLX],[SJMC],[SJSL],[SFSJSY],[SFEWSJ],[SFBCSJ],[YS],[BZ],[DatabaseId],[FLAGS],[XGR],[XGSJ])  VALUES (NEW.[Id],NEW.[YWH],NEW.[YSDM],NEW.[SJSJ],NEW.[SJLX],NEW.[SJMC],NEW.[SJSL],NEW.[SFSJSY],NEW.[SFEWSJ],NEW.[SFBCSJ],NEW.[YS],NEW.[BZ],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ]);END";
        private string UPDATE_TRIGGER_SJ="CREATE TRIGGER [vw_upd_SJVIEW] INSTEAD OF UPDATE OF [Id],[YWH],[YSDM],[SJSJ],[SJLX],[SJMC],[SJSL],[SFSJSY],[SFEWSJ],[SFBCSJ],[YS],[BZ],[DatabaseId],[FLAGS],[XGR],[XGSJ] ON [SJVIEW] BEGIN UPDATE [SJ] SET [Id]=NEW.[Id],[YWH]=NEW.[YWH],[YSDM]=NEW.[YSDM],[SJSJ]=NEW.[SJSJ],[SJLX]=NEW.[SJLX],[SJMC]=NEW.[SJMC],[SJSL]=NEW.[SJSL],[SFSJSY]=NEW.[SFSJSY],[SFEWSJ]=NEW.[SFEWSJ],[SFBCSJ]=NEW.[SFBCSJ],[YS]=NEW.[YS],[BZ]=NEW.[BZ],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_SJ="CREATE TRIGGER [vw_del_SJVIEW] INSTEAD OF DELETE ON [SJVIEW] BEGIN DELETE FROM [SJ] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_SJ="SELECT  Id,YWH,YSDM,SJSJ,SJLX,SJMC,SJSL,SFSJSY,SFEWSJ,SFBCSJ,YS,BZ,DatabaseId,FLAGS,XGR,XGSJ FROM SJ WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_SJVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('sjview','geometry','rowid','sj','geometry',0)";
        #endregion        
        
        
        #region SLSQ SQL语句
        private string CREATE_VIEW_SLSQ="CREATE VIEW SLSQVIEW AS SELECT  Id,YSDM,YWH,DJDL,DJXL,SQZSBS,SQFBCZ,QXDM,SLRY,SLSJ,ZL,TZRXM,TZFS,TZRDH,TZRYDDH,TZRDZYJ,SFWTAJ,JSSJ,AJZT,BZ,DatabaseId,FLAGS,XGR,XGSJ FROM SLSQ WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_SLSQ="CREATE TRIGGER [vw_ins_SLSQVIEW] INSTEAD OF INSERT ON [SLSQVIEW] BEGIN INSERT OR REPLACE INTO [SLSQ] ([Id],[YSDM],[YWH],[DJDL],[DJXL],[SQZSBS],[SQFBCZ],[QXDM],[SLRY],[SLSJ],[ZL],[TZRXM],[TZFS],[TZRDH],[TZRYDDH],[TZRDZYJ],[SFWTAJ],[JSSJ],[AJZT],[BZ],[DatabaseId],[FLAGS],[XGR],[XGSJ])  VALUES (NEW.[Id],NEW.[YSDM],NEW.[YWH],NEW.[DJDL],NEW.[DJXL],NEW.[SQZSBS],NEW.[SQFBCZ],NEW.[QXDM],NEW.[SLRY],NEW.[SLSJ],NEW.[ZL],NEW.[TZRXM],NEW.[TZFS],NEW.[TZRDH],NEW.[TZRYDDH],NEW.[TZRDZYJ],NEW.[SFWTAJ],NEW.[JSSJ],NEW.[AJZT],NEW.[BZ],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ]);END";
        private string UPDATE_TRIGGER_SLSQ="CREATE TRIGGER [vw_upd_SLSQVIEW] INSTEAD OF UPDATE OF [Id],[YSDM],[YWH],[DJDL],[DJXL],[SQZSBS],[SQFBCZ],[QXDM],[SLRY],[SLSJ],[ZL],[TZRXM],[TZFS],[TZRDH],[TZRYDDH],[TZRDZYJ],[SFWTAJ],[JSSJ],[AJZT],[BZ],[DatabaseId],[FLAGS],[XGR],[XGSJ] ON [SLSQVIEW] BEGIN UPDATE [SLSQ] SET [Id]=NEW.[Id],[YSDM]=NEW.[YSDM],[YWH]=NEW.[YWH],[DJDL]=NEW.[DJDL],[DJXL]=NEW.[DJXL],[SQZSBS]=NEW.[SQZSBS],[SQFBCZ]=NEW.[SQFBCZ],[QXDM]=NEW.[QXDM],[SLRY]=NEW.[SLRY],[SLSJ]=NEW.[SLSJ],[ZL]=NEW.[ZL],[TZRXM]=NEW.[TZRXM],[TZFS]=NEW.[TZFS],[TZRDH]=NEW.[TZRDH],[TZRYDDH]=NEW.[TZRYDDH],[TZRDZYJ]=NEW.[TZRDZYJ],[SFWTAJ]=NEW.[SFWTAJ],[JSSJ]=NEW.[JSSJ],[AJZT]=NEW.[AJZT],[BZ]=NEW.[BZ],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_SLSQ="CREATE TRIGGER [vw_del_SLSQVIEW] INSTEAD OF DELETE ON [SLSQVIEW] BEGIN DELETE FROM [SLSQ] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_SLSQ="SELECT  Id,YSDM,YWH,DJDL,DJXL,SQZSBS,SQFBCZ,QXDM,SLRY,SLSJ,ZL,TZRXM,TZFS,TZRDH,TZRYDDH,TZRDZYJ,SFWTAJ,JSSJ,AJZT,BZ,DatabaseId,FLAGS,XGR,XGSJ FROM SLSQ WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_SLSQVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('slsqview','geometry','rowid','slsq','geometry',0)";
        #endregion        
        
        
        #region SQR SQL语句
        private string CREATE_VIEW_SQR="CREATE VIEW SQRVIEW AS SELECT  Id,YWH,YSDM,QLRMC,QLRZJZL,QLRZJH,QLRTXDZ,QLRYB,QLRFRMC,QLRFRDH,QLRDLRMC,QLRDLRDH,QLRDLJG,YWRMC,YWRZJZL,YWRZJH,YWRTXDZ,YWRYB,YWRFRMC,YWRFRDH,YWRDLRMC,YWRDLRDH,YWRDLJG,BZ,DatabaseId,FLAGS,XGR,XGSJ FROM SQR WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_SQR="CREATE TRIGGER [vw_ins_SQRVIEW] INSTEAD OF INSERT ON [SQRVIEW] BEGIN INSERT OR REPLACE INTO [SQR] ([Id],[YWH],[YSDM],[QLRMC],[QLRZJZL],[QLRZJH],[QLRTXDZ],[QLRYB],[QLRFRMC],[QLRFRDH],[QLRDLRMC],[QLRDLRDH],[QLRDLJG],[YWRMC],[YWRZJZL],[YWRZJH],[YWRTXDZ],[YWRYB],[YWRFRMC],[YWRFRDH],[YWRDLRMC],[YWRDLRDH],[YWRDLJG],[BZ],[DatabaseId],[FLAGS],[XGR],[XGSJ])  VALUES (NEW.[Id],NEW.[YWH],NEW.[YSDM],NEW.[QLRMC],NEW.[QLRZJZL],NEW.[QLRZJH],NEW.[QLRTXDZ],NEW.[QLRYB],NEW.[QLRFRMC],NEW.[QLRFRDH],NEW.[QLRDLRMC],NEW.[QLRDLRDH],NEW.[QLRDLJG],NEW.[YWRMC],NEW.[YWRZJZL],NEW.[YWRZJH],NEW.[YWRTXDZ],NEW.[YWRYB],NEW.[YWRFRMC],NEW.[YWRFRDH],NEW.[YWRDLRMC],NEW.[YWRDLRDH],NEW.[YWRDLJG],NEW.[BZ],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ]);END";
        private string UPDATE_TRIGGER_SQR="CREATE TRIGGER [vw_upd_SQRVIEW] INSTEAD OF UPDATE OF [Id],[YWH],[YSDM],[QLRMC],[QLRZJZL],[QLRZJH],[QLRTXDZ],[QLRYB],[QLRFRMC],[QLRFRDH],[QLRDLRMC],[QLRDLRDH],[QLRDLJG],[YWRMC],[YWRZJZL],[YWRZJH],[YWRTXDZ],[YWRYB],[YWRFRMC],[YWRFRDH],[YWRDLRMC],[YWRDLRDH],[YWRDLJG],[BZ],[DatabaseId],[FLAGS],[XGR],[XGSJ] ON [SQRVIEW] BEGIN UPDATE [SQR] SET [Id]=NEW.[Id],[YWH]=NEW.[YWH],[YSDM]=NEW.[YSDM],[QLRMC]=NEW.[QLRMC],[QLRZJZL]=NEW.[QLRZJZL],[QLRZJH]=NEW.[QLRZJH],[QLRTXDZ]=NEW.[QLRTXDZ],[QLRYB]=NEW.[QLRYB],[QLRFRMC]=NEW.[QLRFRMC],[QLRFRDH]=NEW.[QLRFRDH],[QLRDLRMC]=NEW.[QLRDLRMC],[QLRDLRDH]=NEW.[QLRDLRDH],[QLRDLJG]=NEW.[QLRDLJG],[YWRMC]=NEW.[YWRMC],[YWRZJZL]=NEW.[YWRZJZL],[YWRZJH]=NEW.[YWRZJH],[YWRTXDZ]=NEW.[YWRTXDZ],[YWRYB]=NEW.[YWRYB],[YWRFRMC]=NEW.[YWRFRMC],[YWRFRDH]=NEW.[YWRFRDH],[YWRDLRMC]=NEW.[YWRDLRMC],[YWRDLRDH]=NEW.[YWRDLRDH],[YWRDLJG]=NEW.[YWRDLJG],[BZ]=NEW.[BZ],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_SQR="CREATE TRIGGER [vw_del_SQRVIEW] INSTEAD OF DELETE ON [SQRVIEW] BEGIN DELETE FROM [SQR] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_SQR="SELECT  Id,YWH,YSDM,QLRMC,QLRZJZL,QLRZJH,QLRTXDZ,QLRYB,QLRFRMC,QLRFRDH,QLRDLRMC,QLRDLRDH,QLRDLJG,YWRMC,YWRZJZL,YWRZJH,YWRTXDZ,YWRYB,YWRFRMC,YWRFRDH,YWRDLRMC,YWRDLRDH,YWRDLJG,BZ,DatabaseId,FLAGS,XGR,XGSJ FROM SQR WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_SQRVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('sqrview','geometry','rowid','sqr','geometry',0)";
        #endregion        
        
        
        #region SZ SQL语句
        private string CREATE_VIEW_SZ="CREATE VIEW SZVIEW AS SELECT  Id,YWH,YSDM,SZMC,SZZH,YSXLH,SZRY,SZSJ,BZ,DatabaseId,FLAGS,XGR,XGSJ FROM SZ WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_SZ="CREATE TRIGGER [vw_ins_SZVIEW] INSTEAD OF INSERT ON [SZVIEW] BEGIN INSERT OR REPLACE INTO [SZ] ([Id],[YWH],[YSDM],[SZMC],[SZZH],[YSXLH],[SZRY],[SZSJ],[BZ],[DatabaseId],[FLAGS],[XGR],[XGSJ])  VALUES (NEW.[Id],NEW.[YWH],NEW.[YSDM],NEW.[SZMC],NEW.[SZZH],NEW.[YSXLH],NEW.[SZRY],NEW.[SZSJ],NEW.[BZ],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ]);END";
        private string UPDATE_TRIGGER_SZ="CREATE TRIGGER [vw_upd_SZVIEW] INSTEAD OF UPDATE OF [Id],[YWH],[YSDM],[SZMC],[SZZH],[YSXLH],[SZRY],[SZSJ],[BZ],[DatabaseId],[FLAGS],[XGR],[XGSJ] ON [SZVIEW] BEGIN UPDATE [SZ] SET [Id]=NEW.[Id],[YWH]=NEW.[YWH],[YSDM]=NEW.[YSDM],[SZMC]=NEW.[SZMC],[SZZH]=NEW.[SZZH],[YSXLH]=NEW.[YSXLH],[SZRY]=NEW.[SZRY],[SZSJ]=NEW.[SZSJ],[BZ]=NEW.[BZ],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_SZ="CREATE TRIGGER [vw_del_SZVIEW] INSTEAD OF DELETE ON [SZVIEW] BEGIN DELETE FROM [SZ] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_SZ="SELECT  Id,YWH,YSDM,SZMC,SZZH,YSXLH,SZRY,SZSJ,BZ,DatabaseId,FLAGS,XGR,XGSJ FROM SZ WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_SZVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('szview','geometry','rowid','sz','geometry',0)";
        #endregion        
        
        
        #region TDSYQ SQL语句
        private string CREATE_VIEW_TDSYQ="CREATE VIEW TDSYQVIEW AS SELECT  Id,YSDM,ZDDM,BDCDYH,YWH,QLLX,DJLX,DJYY,MJDW,NYDMJ,GDMJ,LDMJ,CDMJ,QTNYDMJ,JSYDMJ,WLYDMJ,BDCQZH,QXDM,DJJG,DBR,DJSJ,FJ,QSZT,WX_DCY,WX_DCSJ,WX_CLY,WX_CLSJ,WX_ZTY,WX_ZTSJ,WX_ZJY,WX_ZJSJ,WX_WYDM,DatabaseId,FLAGS,XGR,XGSJ FROM TDSYQ WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_TDSYQ="CREATE TRIGGER [vw_ins_TDSYQVIEW] INSTEAD OF INSERT ON [TDSYQVIEW] BEGIN INSERT OR REPLACE INTO [TDSYQ] ([Id],[YSDM],[ZDDM],[BDCDYH],[YWH],[QLLX],[DJLX],[DJYY],[MJDW],[NYDMJ],[GDMJ],[LDMJ],[CDMJ],[QTNYDMJ],[JSYDMJ],[WLYDMJ],[BDCQZH],[QXDM],[DJJG],[DBR],[DJSJ],[FJ],[QSZT],[WX_DCY],[WX_DCSJ],[WX_CLY],[WX_CLSJ],[WX_ZTY],[WX_ZTSJ],[WX_ZJY],[WX_ZJSJ],[WX_WYDM],[DatabaseId],[FLAGS],[XGR],[XGSJ])  VALUES (NEW.[Id],NEW.[YSDM],NEW.[ZDDM],NEW.[BDCDYH],NEW.[YWH],NEW.[QLLX],NEW.[DJLX],NEW.[DJYY],NEW.[MJDW],NEW.[NYDMJ],NEW.[GDMJ],NEW.[LDMJ],NEW.[CDMJ],NEW.[QTNYDMJ],NEW.[JSYDMJ],NEW.[WLYDMJ],NEW.[BDCQZH],NEW.[QXDM],NEW.[DJJG],NEW.[DBR],NEW.[DJSJ],NEW.[FJ],NEW.[QSZT],NEW.[WX_DCY],NEW.[WX_DCSJ],NEW.[WX_CLY],NEW.[WX_CLSJ],NEW.[WX_ZTY],NEW.[WX_ZTSJ],NEW.[WX_ZJY],NEW.[WX_ZJSJ],NEW.[WX_WYDM],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ]);END";
        private string UPDATE_TRIGGER_TDSYQ="CREATE TRIGGER [vw_upd_TDSYQVIEW] INSTEAD OF UPDATE OF [Id],[YSDM],[ZDDM],[BDCDYH],[YWH],[QLLX],[DJLX],[DJYY],[MJDW],[NYDMJ],[GDMJ],[LDMJ],[CDMJ],[QTNYDMJ],[JSYDMJ],[WLYDMJ],[BDCQZH],[QXDM],[DJJG],[DBR],[DJSJ],[FJ],[QSZT],[WX_DCY],[WX_DCSJ],[WX_CLY],[WX_CLSJ],[WX_ZTY],[WX_ZTSJ],[WX_ZJY],[WX_ZJSJ],[WX_WYDM],[DatabaseId],[FLAGS],[XGR],[XGSJ] ON [TDSYQVIEW] BEGIN UPDATE [TDSYQ] SET [Id]=NEW.[Id],[YSDM]=NEW.[YSDM],[ZDDM]=NEW.[ZDDM],[BDCDYH]=NEW.[BDCDYH],[YWH]=NEW.[YWH],[QLLX]=NEW.[QLLX],[DJLX]=NEW.[DJLX],[DJYY]=NEW.[DJYY],[MJDW]=NEW.[MJDW],[NYDMJ]=NEW.[NYDMJ],[GDMJ]=NEW.[GDMJ],[LDMJ]=NEW.[LDMJ],[CDMJ]=NEW.[CDMJ],[QTNYDMJ]=NEW.[QTNYDMJ],[JSYDMJ]=NEW.[JSYDMJ],[WLYDMJ]=NEW.[WLYDMJ],[BDCQZH]=NEW.[BDCQZH],[QXDM]=NEW.[QXDM],[DJJG]=NEW.[DJJG],[DBR]=NEW.[DBR],[DJSJ]=NEW.[DJSJ],[FJ]=NEW.[FJ],[QSZT]=NEW.[QSZT],[WX_DCY]=NEW.[WX_DCY],[WX_DCSJ]=NEW.[WX_DCSJ],[WX_CLY]=NEW.[WX_CLY],[WX_CLSJ]=NEW.[WX_CLSJ],[WX_ZTY]=NEW.[WX_ZTY],[WX_ZTSJ]=NEW.[WX_ZTSJ],[WX_ZJY]=NEW.[WX_ZJY],[WX_ZJSJ]=NEW.[WX_ZJSJ],[WX_WYDM]=NEW.[WX_WYDM],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_TDSYQ="CREATE TRIGGER [vw_del_TDSYQVIEW] INSTEAD OF DELETE ON [TDSYQVIEW] BEGIN DELETE FROM [TDSYQ] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_TDSYQ="SELECT  Id,YSDM,ZDDM,BDCDYH,YWH,QLLX,DJLX,DJYY,MJDW,NYDMJ,GDMJ,LDMJ,CDMJ,QTNYDMJ,JSYDMJ,WLYDMJ,BDCQZH,QXDM,DJJG,DBR,DJSJ,FJ,QSZT,WX_DCY,WX_DCSJ,WX_CLY,WX_CLSJ,WX_ZTY,WX_ZTSJ,WX_ZJY,WX_ZJSJ,WX_WYDM,DatabaseId,FLAGS,XGR,XGSJ FROM TDSYQ WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_TDSYQVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('tdsyqview','geometry','rowid','tdsyq','geometry',0)";
        #endregion        
        
        
        #region XZDZW SQL语句
        private string CREATE_VIEW_XZDZW="CREATE VIEW XZDZWVIEW AS SELECT  Id,YSDM,BDCDYH,ZDZHDM,XZDZWLX,DZWMC,MJDW,MJ,DAH,ZT,WX_DCY,WX_DCSJ,WX_CLY,WX_CLSJ,WX_ZTY,WX_ZTSJ,WX_ZJY,WX_ZJSJ,WX_WYDM,DatabaseId,FLAGS,XGR,XGSJ,geometry FROM XZDZW WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_XZDZW="CREATE TRIGGER [vw_ins_XZDZWVIEW] INSTEAD OF INSERT ON [XZDZWVIEW] BEGIN INSERT OR REPLACE INTO [XZDZW] ([Id],[YSDM],[BDCDYH],[ZDZHDM],[XZDZWLX],[DZWMC],[MJDW],[MJ],[DAH],[ZT],[WX_DCY],[WX_DCSJ],[WX_CLY],[WX_CLSJ],[WX_ZTY],[WX_ZTSJ],[WX_ZJY],[WX_ZJSJ],[WX_WYDM],[DatabaseId],[FLAGS],[XGR],[XGSJ],[geometry])  VALUES (NEW.[Id],NEW.[YSDM],NEW.[BDCDYH],NEW.[ZDZHDM],NEW.[XZDZWLX],NEW.[DZWMC],NEW.[MJDW],NEW.[MJ],NEW.[DAH],NEW.[ZT],NEW.[WX_DCY],NEW.[WX_DCSJ],NEW.[WX_CLY],NEW.[WX_CLSJ],NEW.[WX_ZTY],NEW.[WX_ZTSJ],NEW.[WX_ZJY],NEW.[WX_ZJSJ],NEW.[WX_WYDM],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ],NEW.[geometry]);END";
        private string UPDATE_TRIGGER_XZDZW="CREATE TRIGGER [vw_upd_XZDZWVIEW] INSTEAD OF UPDATE OF [Id],[YSDM],[BDCDYH],[ZDZHDM],[XZDZWLX],[DZWMC],[MJDW],[MJ],[DAH],[ZT],[WX_DCY],[WX_DCSJ],[WX_CLY],[WX_CLSJ],[WX_ZTY],[WX_ZTSJ],[WX_ZJY],[WX_ZJSJ],[WX_WYDM],[DatabaseId],[FLAGS],[XGR],[XGSJ],[geometry] ON [XZDZWVIEW] BEGIN UPDATE [XZDZW] SET [Id]=NEW.[Id],[YSDM]=NEW.[YSDM],[BDCDYH]=NEW.[BDCDYH],[ZDZHDM]=NEW.[ZDZHDM],[XZDZWLX]=NEW.[XZDZWLX],[DZWMC]=NEW.[DZWMC],[MJDW]=NEW.[MJDW],[MJ]=NEW.[MJ],[DAH]=NEW.[DAH],[ZT]=NEW.[ZT],[WX_DCY]=NEW.[WX_DCY],[WX_DCSJ]=NEW.[WX_DCSJ],[WX_CLY]=NEW.[WX_CLY],[WX_CLSJ]=NEW.[WX_CLSJ],[WX_ZTY]=NEW.[WX_ZTY],[WX_ZTSJ]=NEW.[WX_ZTSJ],[WX_ZJY]=NEW.[WX_ZJY],[WX_ZJSJ]=NEW.[WX_ZJSJ],[WX_WYDM]=NEW.[WX_WYDM],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ],[geometry]=NEW.[geometry] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_XZDZW="CREATE TRIGGER [vw_del_XZDZWVIEW] INSTEAD OF DELETE ON [XZDZWVIEW] BEGIN DELETE FROM [XZDZW] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_XZDZW="SELECT  Id,YSDM,BDCDYH,ZDZHDM,XZDZWLX,DZWMC,MJDW,MJ,DAH,ZT,WX_DCY,WX_DCSJ,WX_CLY,WX_CLSJ,WX_ZTY,WX_ZTSJ,WX_ZJY,WX_ZJSJ,WX_WYDM,DatabaseId,FLAGS,XGR,XGSJ,geometry FROM XZDZW WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_XZDZWVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('xzdzwview','geometry','rowid','xzdzw','geometry',0)";
        #endregion        
        
        
        #region XZQ SQL语句
        private string CREATE_VIEW_XZQ="CREATE VIEW XZQVIEW AS SELECT  Id,YSDM,XZQDM,XZQMC,XZQMJ,DatabaseId,FLAGS,XGR,XGSJ,geometry FROM XZQ WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_XZQ="CREATE TRIGGER [vw_ins_XZQVIEW] INSTEAD OF INSERT ON [XZQVIEW] BEGIN INSERT OR REPLACE INTO [XZQ] ([Id],[YSDM],[XZQDM],[XZQMC],[XZQMJ],[DatabaseId],[FLAGS],[XGR],[XGSJ],[geometry])  VALUES (NEW.[Id],NEW.[YSDM],NEW.[XZQDM],NEW.[XZQMC],NEW.[XZQMJ],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ],NEW.[geometry]);END";
        private string UPDATE_TRIGGER_XZQ="CREATE TRIGGER [vw_upd_XZQVIEW] INSTEAD OF UPDATE OF [Id],[YSDM],[XZQDM],[XZQMC],[XZQMJ],[DatabaseId],[FLAGS],[XGR],[XGSJ],[geometry] ON [XZQVIEW] BEGIN UPDATE [XZQ] SET [Id]=NEW.[Id],[YSDM]=NEW.[YSDM],[XZQDM]=NEW.[XZQDM],[XZQMC]=NEW.[XZQMC],[XZQMJ]=NEW.[XZQMJ],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ],[geometry]=NEW.[geometry] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_XZQ="CREATE TRIGGER [vw_del_XZQVIEW] INSTEAD OF DELETE ON [XZQVIEW] BEGIN DELETE FROM [XZQ] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_XZQ="SELECT  Id,YSDM,XZQDM,XZQMC,XZQMJ,DatabaseId,FLAGS,XGR,XGSJ,geometry FROM XZQ WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_XZQVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('xzqview','geometry','rowid','xzq','geometry',0)";
        #endregion        
        
        
        #region XZQJX SQL语句
        private string CREATE_VIEW_XZQJX="CREATE VIEW XZQJXVIEW AS SELECT  Id,YSDM,JXLX,JXXZ,JXSM,DatabaseId,FLAGS,XGR,XGSJ,geometry FROM XZQJX WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_XZQJX="CREATE TRIGGER [vw_ins_XZQJXVIEW] INSTEAD OF INSERT ON [XZQJXVIEW] BEGIN INSERT OR REPLACE INTO [XZQJX] ([Id],[YSDM],[JXLX],[JXXZ],[JXSM],[DatabaseId],[FLAGS],[XGR],[XGSJ],[geometry])  VALUES (NEW.[Id],NEW.[YSDM],NEW.[JXLX],NEW.[JXXZ],NEW.[JXSM],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ],NEW.[geometry]);END";
        private string UPDATE_TRIGGER_XZQJX="CREATE TRIGGER [vw_upd_XZQJXVIEW] INSTEAD OF UPDATE OF [Id],[YSDM],[JXLX],[JXXZ],[JXSM],[DatabaseId],[FLAGS],[XGR],[XGSJ],[geometry] ON [XZQJXVIEW] BEGIN UPDATE [XZQJX] SET [Id]=NEW.[Id],[YSDM]=NEW.[YSDM],[JXLX]=NEW.[JXLX],[JXXZ]=NEW.[JXXZ],[JXSM]=NEW.[JXSM],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ],[geometry]=NEW.[geometry] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_XZQJX="CREATE TRIGGER [vw_del_XZQJXVIEW] INSTEAD OF DELETE ON [XZQJXVIEW] BEGIN DELETE FROM [XZQJX] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_XZQJX="SELECT  Id,YSDM,JXLX,JXXZ,JXSM,DatabaseId,FLAGS,XGR,XGSJ,geometry FROM XZQJX WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_XZQJXVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('xzqjxview','geometry','rowid','xzqjx','geometry',0)";
        #endregion        
        
        
        #region XZQZJ SQL语句
        private string CREATE_VIEW_XZQZJ="CREATE VIEW XZQZJVIEW AS SELECT  Id,YSDM,ZJNR,ZT,YS,BS,XZ,XHX,KD,GD,ZJDZXJXZB,ZJDZXJYZB,ZJFX,DatabaseId,FLAGS,XGR,XGSJ,geometry FROM XZQZJ WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_XZQZJ="CREATE TRIGGER [vw_ins_XZQZJVIEW] INSTEAD OF INSERT ON [XZQZJVIEW] BEGIN INSERT OR REPLACE INTO [XZQZJ] ([Id],[YSDM],[ZJNR],[ZT],[YS],[BS],[XZ],[XHX],[KD],[GD],[ZJDZXJXZB],[ZJDZXJYZB],[ZJFX],[DatabaseId],[FLAGS],[XGR],[XGSJ],[geometry])  VALUES (NEW.[Id],NEW.[YSDM],NEW.[ZJNR],NEW.[ZT],NEW.[YS],NEW.[BS],NEW.[XZ],NEW.[XHX],NEW.[KD],NEW.[GD],NEW.[ZJDZXJXZB],NEW.[ZJDZXJYZB],NEW.[ZJFX],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ],NEW.[geometry]);END";
        private string UPDATE_TRIGGER_XZQZJ="CREATE TRIGGER [vw_upd_XZQZJVIEW] INSTEAD OF UPDATE OF [Id],[YSDM],[ZJNR],[ZT],[YS],[BS],[XZ],[XHX],[KD],[GD],[ZJDZXJXZB],[ZJDZXJYZB],[ZJFX],[DatabaseId],[FLAGS],[XGR],[XGSJ],[geometry] ON [XZQZJVIEW] BEGIN UPDATE [XZQZJ] SET [Id]=NEW.[Id],[YSDM]=NEW.[YSDM],[ZJNR]=NEW.[ZJNR],[ZT]=NEW.[ZT],[YS]=NEW.[YS],[BS]=NEW.[BS],[XZ]=NEW.[XZ],[XHX]=NEW.[XHX],[KD]=NEW.[KD],[GD]=NEW.[GD],[ZJDZXJXZB]=NEW.[ZJDZXJXZB],[ZJDZXJYZB]=NEW.[ZJDZXJYZB],[ZJFX]=NEW.[ZJFX],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ],[geometry]=NEW.[geometry] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_XZQZJ="CREATE TRIGGER [vw_del_XZQZJVIEW] INSTEAD OF DELETE ON [XZQZJVIEW] BEGIN DELETE FROM [XZQZJ] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_XZQZJ="SELECT  Id,YSDM,ZJNR,ZT,YS,BS,XZ,XHX,KD,GD,ZJDZXJXZB,ZJDZXJYZB,ZJFX,DatabaseId,FLAGS,XGR,XGSJ,geometry FROM XZQZJ WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_XZQZJVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('xzqzjview','geometry','rowid','xzqzj','geometry',0)";
        #endregion        
        
        
        #region YGDJ SQL语句
        private string CREATE_VIEW_YGDJ="CREATE VIEW YGDJVIEW AS SELECT  Id,YSDM,BDCDYH,YWH,BDCZL,YWR,YWRZJZL,YWRZJH,YGDJZL,DJLX,DJYY,TDSYQR,GHYT,FWXZ,FWJG,SZC,ZCS,JZMJ,QDJG,BDCDJZMH,QXDM,DJJG,DBR,DJSJ,FJ,QSZT,DatabaseId,FLAGS,XGR,XGSJ FROM YGDJ WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_YGDJ="CREATE TRIGGER [vw_ins_YGDJVIEW] INSTEAD OF INSERT ON [YGDJVIEW] BEGIN INSERT OR REPLACE INTO [YGDJ] ([Id],[YSDM],[BDCDYH],[YWH],[BDCZL],[YWR],[YWRZJZL],[YWRZJH],[YGDJZL],[DJLX],[DJYY],[TDSYQR],[GHYT],[FWXZ],[FWJG],[SZC],[ZCS],[JZMJ],[QDJG],[BDCDJZMH],[QXDM],[DJJG],[DBR],[DJSJ],[FJ],[QSZT],[DatabaseId],[FLAGS],[XGR],[XGSJ])  VALUES (NEW.[Id],NEW.[YSDM],NEW.[BDCDYH],NEW.[YWH],NEW.[BDCZL],NEW.[YWR],NEW.[YWRZJZL],NEW.[YWRZJH],NEW.[YGDJZL],NEW.[DJLX],NEW.[DJYY],NEW.[TDSYQR],NEW.[GHYT],NEW.[FWXZ],NEW.[FWJG],NEW.[SZC],NEW.[ZCS],NEW.[JZMJ],NEW.[QDJG],NEW.[BDCDJZMH],NEW.[QXDM],NEW.[DJJG],NEW.[DBR],NEW.[DJSJ],NEW.[FJ],NEW.[QSZT],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ]);END";
        private string UPDATE_TRIGGER_YGDJ="CREATE TRIGGER [vw_upd_YGDJVIEW] INSTEAD OF UPDATE OF [Id],[YSDM],[BDCDYH],[YWH],[BDCZL],[YWR],[YWRZJZL],[YWRZJH],[YGDJZL],[DJLX],[DJYY],[TDSYQR],[GHYT],[FWXZ],[FWJG],[SZC],[ZCS],[JZMJ],[QDJG],[BDCDJZMH],[QXDM],[DJJG],[DBR],[DJSJ],[FJ],[QSZT],[DatabaseId],[FLAGS],[XGR],[XGSJ] ON [YGDJVIEW] BEGIN UPDATE [YGDJ] SET [Id]=NEW.[Id],[YSDM]=NEW.[YSDM],[BDCDYH]=NEW.[BDCDYH],[YWH]=NEW.[YWH],[BDCZL]=NEW.[BDCZL],[YWR]=NEW.[YWR],[YWRZJZL]=NEW.[YWRZJZL],[YWRZJH]=NEW.[YWRZJH],[YGDJZL]=NEW.[YGDJZL],[DJLX]=NEW.[DJLX],[DJYY]=NEW.[DJYY],[TDSYQR]=NEW.[TDSYQR],[GHYT]=NEW.[GHYT],[FWXZ]=NEW.[FWXZ],[FWJG]=NEW.[FWJG],[SZC]=NEW.[SZC],[ZCS]=NEW.[ZCS],[JZMJ]=NEW.[JZMJ],[QDJG]=NEW.[QDJG],[BDCDJZMH]=NEW.[BDCDJZMH],[QXDM]=NEW.[QXDM],[DJJG]=NEW.[DJJG],[DBR]=NEW.[DBR],[DJSJ]=NEW.[DJSJ],[FJ]=NEW.[FJ],[QSZT]=NEW.[QSZT],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_YGDJ="CREATE TRIGGER [vw_del_YGDJVIEW] INSTEAD OF DELETE ON [YGDJVIEW] BEGIN DELETE FROM [YGDJ] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_YGDJ="SELECT  Id,YSDM,BDCDYH,YWH,BDCZL,YWR,YWRZJZL,YWRZJH,YGDJZL,DJLX,DJYY,TDSYQR,GHYT,FWXZ,FWJG,SZC,ZCS,JZMJ,QDJG,BDCDJZMH,QXDM,DJJG,DBR,DJSJ,FJ,QSZT,DatabaseId,FLAGS,XGR,XGSJ FROM YGDJ WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_YGDJVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('ygdjview','geometry','rowid','ygdj','geometry',0)";
        #endregion        
        
        
        #region YHYDZB SQL语句
        private string CREATE_VIEW_YHYDZB="CREATE VIEW YHYDZBVIEW AS SELECT  Id,ZHHDDM,XH,BW,DJ,DatabaseId,FLAGS,XGR,XGSJ FROM YHYDZB WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_YHYDZB="CREATE TRIGGER [vw_ins_YHYDZBVIEW] INSTEAD OF INSERT ON [YHYDZBVIEW] BEGIN INSERT OR REPLACE INTO [YHYDZB] ([Id],[ZHHDDM],[XH],[BW],[DJ],[DatabaseId],[FLAGS],[XGR],[XGSJ])  VALUES (NEW.[Id],NEW.[ZHHDDM],NEW.[XH],NEW.[BW],NEW.[DJ],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ]);END";
        private string UPDATE_TRIGGER_YHYDZB="CREATE TRIGGER [vw_upd_YHYDZBVIEW] INSTEAD OF UPDATE OF [Id],[ZHHDDM],[XH],[BW],[DJ],[DatabaseId],[FLAGS],[XGR],[XGSJ] ON [YHYDZBVIEW] BEGIN UPDATE [YHYDZB] SET [Id]=NEW.[Id],[ZHHDDM]=NEW.[ZHHDDM],[XH]=NEW.[XH],[BW]=NEW.[BW],[DJ]=NEW.[DJ],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_YHYDZB="CREATE TRIGGER [vw_del_YHYDZBVIEW] INSTEAD OF DELETE ON [YHYDZBVIEW] BEGIN DELETE FROM [YHYDZB] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_YHYDZB="SELECT  Id,ZHHDDM,XH,BW,DJ,DatabaseId,FLAGS,XGR,XGSJ FROM YHYDZB WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_YHYDZBVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('yhydzbview','geometry','rowid','yhydzb','geometry',0)";
        #endregion        
        
        
        #region YHZK SQL语句
        private string CREATE_VIEW_YHZK="CREATE VIEW YHZKVIEW AS SELECT  Id,ZHDM,YHFS,YHMJ,JTYT,SYJSE,DatabaseId,FLAGS,XGR,XGSJ FROM YHZK WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_YHZK="CREATE TRIGGER [vw_ins_YHZKVIEW] INSTEAD OF INSERT ON [YHZKVIEW] BEGIN INSERT OR REPLACE INTO [YHZK] ([Id],[ZHDM],[YHFS],[YHMJ],[JTYT],[SYJSE],[DatabaseId],[FLAGS],[XGR],[XGSJ])  VALUES (NEW.[Id],NEW.[ZHDM],NEW.[YHFS],NEW.[YHMJ],NEW.[JTYT],NEW.[SYJSE],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ]);END";
        private string UPDATE_TRIGGER_YHZK="CREATE TRIGGER [vw_upd_YHZKVIEW] INSTEAD OF UPDATE OF [Id],[ZHDM],[YHFS],[YHMJ],[JTYT],[SYJSE],[DatabaseId],[FLAGS],[XGR],[XGSJ] ON [YHZKVIEW] BEGIN UPDATE [YHZK] SET [Id]=NEW.[Id],[ZHDM]=NEW.[ZHDM],[YHFS]=NEW.[YHFS],[YHMJ]=NEW.[YHMJ],[JTYT]=NEW.[JTYT],[SYJSE]=NEW.[SYJSE],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_YHZK="CREATE TRIGGER [vw_del_YHZKVIEW] INSTEAD OF DELETE ON [YHZKVIEW] BEGIN DELETE FROM [YHZK] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_YHZK="SELECT  Id,ZHDM,YHFS,YHMJ,JTYT,SYJSE,DatabaseId,FLAGS,XGR,XGSJ FROM YHZK WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_YHZKVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('yhzkview','geometry','rowid','yhzk','geometry',0)";
        #endregion        
        
        
        #region YYDJ SQL语句
        private string CREATE_VIEW_YYDJ="CREATE VIEW YYDJVIEW AS SELECT  Id,YSDM,BDCDYH,YWH,YYSX,BDCDJZMH,QXDM,DJJG,DBR,DJSJ,ZXYYYWH,ZXYYYY,ZXYYDBR,ZXYYDJSJ,FJ,QSZT,DatabaseId,FLAGS,XGR,XGSJ FROM YYDJ WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_YYDJ="CREATE TRIGGER [vw_ins_YYDJVIEW] INSTEAD OF INSERT ON [YYDJVIEW] BEGIN INSERT OR REPLACE INTO [YYDJ] ([Id],[YSDM],[BDCDYH],[YWH],[YYSX],[BDCDJZMH],[QXDM],[DJJG],[DBR],[DJSJ],[ZXYYYWH],[ZXYYYY],[ZXYYDBR],[ZXYYDJSJ],[FJ],[QSZT],[DatabaseId],[FLAGS],[XGR],[XGSJ])  VALUES (NEW.[Id],NEW.[YSDM],NEW.[BDCDYH],NEW.[YWH],NEW.[YYSX],NEW.[BDCDJZMH],NEW.[QXDM],NEW.[DJJG],NEW.[DBR],NEW.[DJSJ],NEW.[ZXYYYWH],NEW.[ZXYYYY],NEW.[ZXYYDBR],NEW.[ZXYYDJSJ],NEW.[FJ],NEW.[QSZT],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ]);END";
        private string UPDATE_TRIGGER_YYDJ="CREATE TRIGGER [vw_upd_YYDJVIEW] INSTEAD OF UPDATE OF [Id],[YSDM],[BDCDYH],[YWH],[YYSX],[BDCDJZMH],[QXDM],[DJJG],[DBR],[DJSJ],[ZXYYYWH],[ZXYYYY],[ZXYYDBR],[ZXYYDJSJ],[FJ],[QSZT],[DatabaseId],[FLAGS],[XGR],[XGSJ] ON [YYDJVIEW] BEGIN UPDATE [YYDJ] SET [Id]=NEW.[Id],[YSDM]=NEW.[YSDM],[BDCDYH]=NEW.[BDCDYH],[YWH]=NEW.[YWH],[YYSX]=NEW.[YYSX],[BDCDJZMH]=NEW.[BDCDJZMH],[QXDM]=NEW.[QXDM],[DJJG]=NEW.[DJJG],[DBR]=NEW.[DBR],[DJSJ]=NEW.[DJSJ],[ZXYYYWH]=NEW.[ZXYYYWH],[ZXYYYY]=NEW.[ZXYYYY],[ZXYYDBR]=NEW.[ZXYYDBR],[ZXYYDJSJ]=NEW.[ZXYYDJSJ],[FJ]=NEW.[FJ],[QSZT]=NEW.[QSZT],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_YYDJ="CREATE TRIGGER [vw_del_YYDJVIEW] INSTEAD OF DELETE ON [YYDJVIEW] BEGIN DELETE FROM [YYDJ] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_YYDJ="SELECT  Id,YSDM,BDCDYH,YWH,YYSX,BDCDJZMH,QXDM,DJJG,DBR,DJSJ,ZXYYYWH,ZXYYYY,ZXYYDBR,ZXYYDJSJ,FJ,QSZT,DatabaseId,FLAGS,XGR,XGSJ FROM YYDJ WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_YYDJVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('yydjview','geometry','rowid','yydj','geometry',0)";
        #endregion        
        
        
        #region ZDBHQK SQL语句
        private string CREATE_VIEW_ZDBHQK="CREATE VIEW ZDBHQKVIEW AS SELECT  Id,ZDDM,BHYY,BHNR,DJSJ,DBR,FJ,DatabaseId,FLAGS,XGR,XGSJ,WX_WYDM FROM ZDBHQK WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_ZDBHQK="CREATE TRIGGER [vw_ins_ZDBHQKVIEW] INSTEAD OF INSERT ON [ZDBHQKVIEW] BEGIN INSERT OR REPLACE INTO [ZDBHQK] ([Id],[ZDDM],[BHYY],[BHNR],[DJSJ],[DBR],[FJ],[DatabaseId],[FLAGS],[XGR],[XGSJ],[WX_WYDM])  VALUES (NEW.[Id],NEW.[ZDDM],NEW.[BHYY],NEW.[BHNR],NEW.[DJSJ],NEW.[DBR],NEW.[FJ],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ],NEW.[WX_WYDM]);END";
        private string UPDATE_TRIGGER_ZDBHQK="CREATE TRIGGER [vw_upd_ZDBHQKVIEW] INSTEAD OF UPDATE OF [Id],[ZDDM],[BHYY],[BHNR],[DJSJ],[DBR],[FJ],[DatabaseId],[FLAGS],[XGR],[XGSJ],[WX_WYDM] ON [ZDBHQKVIEW] BEGIN UPDATE [ZDBHQK] SET [Id]=NEW.[Id],[ZDDM]=NEW.[ZDDM],[BHYY]=NEW.[BHYY],[BHNR]=NEW.[BHNR],[DJSJ]=NEW.[DJSJ],[DBR]=NEW.[DBR],[FJ]=NEW.[FJ],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ],[WX_WYDM]=NEW.[WX_WYDM] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_ZDBHQK="CREATE TRIGGER [vw_del_ZDBHQKVIEW] INSTEAD OF DELETE ON [ZDBHQKVIEW] BEGIN DELETE FROM [ZDBHQK] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_ZDBHQK="SELECT  Id,ZDDM,BHYY,BHNR,DJSJ,DBR,FJ,DatabaseId,FLAGS,XGR,XGSJ,WX_WYDM FROM ZDBHQK WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_ZDBHQKVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('zdbhqkview','geometry','rowid','zdbhqk','geometry',0)";
        #endregion        
        
        
        #region ZDJBXX SQL语句
        private string CREATE_VIEW_ZDJBXX="CREATE VIEW ZDJBXXVIEW AS SELECT  Id,YSDM,ZDDM,BDCDYH,ZDTZM,ZL,ZDMJ,MJDW,YT,DJ,JG,QLLX,QLXZ,QLSDFS,RJL,JZMD,JZXG,ZDSZD,ZDSZN,ZDSZX,ZDSZB,ZDT,TFH,DJH,DAH,BZ,ZT,WX_DCY,WX_DCSJ,WX_CLY,WX_CLSJ,WX_ZTY,WX_ZTSJ,WX_ZJY,WX_ZJSJ,WX_WYDM,DatabaseId,FLAGS,XGR,XGSJ,geometry FROM ZDJBXX WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_ZDJBXX="CREATE TRIGGER [vw_ins_ZDJBXXVIEW] INSTEAD OF INSERT ON [ZDJBXXVIEW] BEGIN INSERT OR REPLACE INTO [ZDJBXX] ([Id],[YSDM],[ZDDM],[BDCDYH],[ZDTZM],[ZL],[ZDMJ],[MJDW],[YT],[DJ],[JG],[QLLX],[QLXZ],[QLSDFS],[RJL],[JZMD],[JZXG],[ZDSZD],[ZDSZN],[ZDSZX],[ZDSZB],[ZDT],[TFH],[DJH],[DAH],[BZ],[ZT],[WX_DCY],[WX_DCSJ],[WX_CLY],[WX_CLSJ],[WX_ZTY],[WX_ZTSJ],[WX_ZJY],[WX_ZJSJ],[WX_WYDM],[DatabaseId],[FLAGS],[XGR],[XGSJ],[geometry])  VALUES (NEW.[Id],NEW.[YSDM],NEW.[ZDDM],NEW.[BDCDYH],NEW.[ZDTZM],NEW.[ZL],NEW.[ZDMJ],NEW.[MJDW],NEW.[YT],NEW.[DJ],NEW.[JG],NEW.[QLLX],NEW.[QLXZ],NEW.[QLSDFS],NEW.[RJL],NEW.[JZMD],NEW.[JZXG],NEW.[ZDSZD],NEW.[ZDSZN],NEW.[ZDSZX],NEW.[ZDSZB],NEW.[ZDT],NEW.[TFH],NEW.[DJH],NEW.[DAH],NEW.[BZ],NEW.[ZT],NEW.[WX_DCY],NEW.[WX_DCSJ],NEW.[WX_CLY],NEW.[WX_CLSJ],NEW.[WX_ZTY],NEW.[WX_ZTSJ],NEW.[WX_ZJY],NEW.[WX_ZJSJ],NEW.[WX_WYDM],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ],NEW.[geometry]);END";
        private string UPDATE_TRIGGER_ZDJBXX="CREATE TRIGGER [vw_upd_ZDJBXXVIEW] INSTEAD OF UPDATE OF [Id],[YSDM],[ZDDM],[BDCDYH],[ZDTZM],[ZL],[ZDMJ],[MJDW],[YT],[DJ],[JG],[QLLX],[QLXZ],[QLSDFS],[RJL],[JZMD],[JZXG],[ZDSZD],[ZDSZN],[ZDSZX],[ZDSZB],[ZDT],[TFH],[DJH],[DAH],[BZ],[ZT],[WX_DCY],[WX_DCSJ],[WX_CLY],[WX_CLSJ],[WX_ZTY],[WX_ZTSJ],[WX_ZJY],[WX_ZJSJ],[WX_WYDM],[DatabaseId],[FLAGS],[XGR],[XGSJ],[geometry] ON [ZDJBXXVIEW] BEGIN UPDATE [ZDJBXX] SET [Id]=NEW.[Id],[YSDM]=NEW.[YSDM],[ZDDM]=NEW.[ZDDM],[BDCDYH]=NEW.[BDCDYH],[ZDTZM]=NEW.[ZDTZM],[ZL]=NEW.[ZL],[ZDMJ]=NEW.[ZDMJ],[MJDW]=NEW.[MJDW],[YT]=NEW.[YT],[DJ]=NEW.[DJ],[JG]=NEW.[JG],[QLLX]=NEW.[QLLX],[QLXZ]=NEW.[QLXZ],[QLSDFS]=NEW.[QLSDFS],[RJL]=NEW.[RJL],[JZMD]=NEW.[JZMD],[JZXG]=NEW.[JZXG],[ZDSZD]=NEW.[ZDSZD],[ZDSZN]=NEW.[ZDSZN],[ZDSZX]=NEW.[ZDSZX],[ZDSZB]=NEW.[ZDSZB],[ZDT]=NEW.[ZDT],[TFH]=NEW.[TFH],[DJH]=NEW.[DJH],[DAH]=NEW.[DAH],[BZ]=NEW.[BZ],[ZT]=NEW.[ZT],[WX_DCY]=NEW.[WX_DCY],[WX_DCSJ]=NEW.[WX_DCSJ],[WX_CLY]=NEW.[WX_CLY],[WX_CLSJ]=NEW.[WX_CLSJ],[WX_ZTY]=NEW.[WX_ZTY],[WX_ZTSJ]=NEW.[WX_ZTSJ],[WX_ZJY]=NEW.[WX_ZJY],[WX_ZJSJ]=NEW.[WX_ZJSJ],[WX_WYDM]=NEW.[WX_WYDM],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ],[geometry]=NEW.[geometry] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_ZDJBXX="CREATE TRIGGER [vw_del_ZDJBXXVIEW] INSTEAD OF DELETE ON [ZDJBXXVIEW] BEGIN DELETE FROM [ZDJBXX] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_ZDJBXX="SELECT  Id,YSDM,ZDDM,BDCDYH,ZDTZM,ZL,ZDMJ,MJDW,YT,DJ,JG,QLLX,QLXZ,QLSDFS,RJL,JZMD,JZXG,ZDSZD,ZDSZN,ZDSZX,ZDSZB,ZDT,TFH,DJH,DAH,BZ,ZT,WX_DCY,WX_DCSJ,WX_CLY,WX_CLSJ,WX_ZTY,WX_ZTSJ,WX_ZJY,WX_ZJSJ,WX_WYDM,DatabaseId,FLAGS,XGR,XGSJ,geometry FROM ZDJBXX WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_ZDJBXXVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('zdjbxxview','geometry','rowid','zdjbxx','geometry',0)";
        #endregion        
        
        
        #region ZDJBXXZJ SQL语句
        private string CREATE_VIEW_ZDJBXXZJ="CREATE VIEW ZDJBXXZJVIEW AS SELECT  Id,GLYSDM,YSDM,ZJNR,ZT,YS,BS,XZ,XHX,KD,GD,ZJDZXJXZB,ZJDZXJYZB,ZJFX,DatabaseId,FLAGS,XGR,XGSJ,geometry FROM ZDJBXXZJ WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_ZDJBXXZJ="CREATE TRIGGER [vw_ins_ZDJBXXZJVIEW] INSTEAD OF INSERT ON [ZDJBXXZJVIEW] BEGIN INSERT OR REPLACE INTO [ZDJBXXZJ] ([Id],[GLYSDM],[YSDM],[ZJNR],[ZT],[YS],[BS],[XZ],[XHX],[KD],[GD],[ZJDZXJXZB],[ZJDZXJYZB],[ZJFX],[DatabaseId],[FLAGS],[XGR],[XGSJ],[geometry])  VALUES (NEW.[Id],NEW.[GLYSDM],NEW.[YSDM],NEW.[ZJNR],NEW.[ZT],NEW.[YS],NEW.[BS],NEW.[XZ],NEW.[XHX],NEW.[KD],NEW.[GD],NEW.[ZJDZXJXZB],NEW.[ZJDZXJYZB],NEW.[ZJFX],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ],NEW.[geometry]);END";
        private string UPDATE_TRIGGER_ZDJBXXZJ="CREATE TRIGGER [vw_upd_ZDJBXXZJVIEW] INSTEAD OF UPDATE OF [Id],[GLYSDM],[YSDM],[ZJNR],[ZT],[YS],[BS],[XZ],[XHX],[KD],[GD],[ZJDZXJXZB],[ZJDZXJYZB],[ZJFX],[DatabaseId],[FLAGS],[XGR],[XGSJ],[geometry] ON [ZDJBXXZJVIEW] BEGIN UPDATE [ZDJBXXZJ] SET [Id]=NEW.[Id],[GLYSDM]=NEW.[GLYSDM],[YSDM]=NEW.[YSDM],[ZJNR]=NEW.[ZJNR],[ZT]=NEW.[ZT],[YS]=NEW.[YS],[BS]=NEW.[BS],[XZ]=NEW.[XZ],[XHX]=NEW.[XHX],[KD]=NEW.[KD],[GD]=NEW.[GD],[ZJDZXJXZB]=NEW.[ZJDZXJXZB],[ZJDZXJYZB]=NEW.[ZJDZXJYZB],[ZJFX]=NEW.[ZJFX],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ],[geometry]=NEW.[geometry] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_ZDJBXXZJ="CREATE TRIGGER [vw_del_ZDJBXXZJVIEW] INSTEAD OF DELETE ON [ZDJBXXZJVIEW] BEGIN DELETE FROM [ZDJBXXZJ] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_ZDJBXXZJ="SELECT  Id,GLYSDM,YSDM,ZJNR,ZT,YS,BS,XZ,XHX,KD,GD,ZJDZXJXZB,ZJDZXJYZB,ZJFX,DatabaseId,FLAGS,XGR,XGSJ,geometry FROM ZDJBXXZJ WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_ZDJBXXZJVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('zdjbxxzjview','geometry','rowid','zdjbxxzj','geometry',0)";
        #endregion        
        
        
        #region ZDTOJZD SQL语句
        private string CREATE_VIEW_ZDTOJZD="CREATE VIEW ZDTOJZDVIEW AS SELECT  Id,ZD_WYDM,JZD_WYDM,SXH,DatabaseId,FLAGS,XGR,XGSJ FROM ZDTOJZD WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_ZDTOJZD="CREATE TRIGGER [vw_ins_ZDTOJZDVIEW] INSTEAD OF INSERT ON [ZDTOJZDVIEW] BEGIN INSERT OR REPLACE INTO [ZDTOJZD] ([Id],[ZD_WYDM],[JZD_WYDM],[SXH],[DatabaseId],[FLAGS],[XGR],[XGSJ])  VALUES (NEW.[Id],NEW.[ZD_WYDM],NEW.[JZD_WYDM],NEW.[SXH],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ]);END";
        private string UPDATE_TRIGGER_ZDTOJZD="CREATE TRIGGER [vw_upd_ZDTOJZDVIEW] INSTEAD OF UPDATE OF [Id],[ZD_WYDM],[JZD_WYDM],[SXH],[DatabaseId],[FLAGS],[XGR],[XGSJ] ON [ZDTOJZDVIEW] BEGIN UPDATE [ZDTOJZD] SET [Id]=NEW.[Id],[ZD_WYDM]=NEW.[ZD_WYDM],[JZD_WYDM]=NEW.[JZD_WYDM],[SXH]=NEW.[SXH],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_ZDTOJZD="CREATE TRIGGER [vw_del_ZDTOJZDVIEW] INSTEAD OF DELETE ON [ZDTOJZDVIEW] BEGIN DELETE FROM [ZDTOJZD] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_ZDTOJZD="SELECT  Id,ZD_WYDM,JZD_WYDM,SXH,DatabaseId,FLAGS,XGR,XGSJ FROM ZDTOJZD WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_ZDTOJZDVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('zdtojzdview','geometry','rowid','zdtojzd','geometry',0)";
        #endregion        
        
        
        #region ZDTOJZX SQL语句
        private string CREATE_VIEW_ZDTOJZX="CREATE VIEW ZDTOJZXVIEW AS SELECT  Id,ZD_WYDM,JZX_WYDM,SXH,DatabaseId,FLAGS,XGR,XGSJ FROM ZDTOJZX WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_ZDTOJZX="CREATE TRIGGER [vw_ins_ZDTOJZXVIEW] INSTEAD OF INSERT ON [ZDTOJZXVIEW] BEGIN INSERT OR REPLACE INTO [ZDTOJZX] ([Id],[ZD_WYDM],[JZX_WYDM],[SXH],[DatabaseId],[FLAGS],[XGR],[XGSJ])  VALUES (NEW.[Id],NEW.[ZD_WYDM],NEW.[JZX_WYDM],NEW.[SXH],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ]);END";
        private string UPDATE_TRIGGER_ZDTOJZX="CREATE TRIGGER [vw_upd_ZDTOJZXVIEW] INSTEAD OF UPDATE OF [Id],[ZD_WYDM],[JZX_WYDM],[SXH],[DatabaseId],[FLAGS],[XGR],[XGSJ] ON [ZDTOJZXVIEW] BEGIN UPDATE [ZDTOJZX] SET [Id]=NEW.[Id],[ZD_WYDM]=NEW.[ZD_WYDM],[JZX_WYDM]=NEW.[JZX_WYDM],[SXH]=NEW.[SXH],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_ZDTOJZX="CREATE TRIGGER [vw_del_ZDTOJZXVIEW] INSTEAD OF DELETE ON [ZDTOJZXVIEW] BEGIN DELETE FROM [ZDTOJZX] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_ZDTOJZX="SELECT  Id,ZD_WYDM,JZX_WYDM,SXH,DatabaseId,FLAGS,XGR,XGSJ FROM ZDTOJZX WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_ZDTOJZXVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('zdtojzxview','geometry','rowid','zdtojzx','geometry',0)";
        #endregion        
        
        
        #region ZHBHQK SQL语句
        private string CREATE_VIEW_ZHBHQK="CREATE VIEW ZHBHQKVIEW AS SELECT  Id,ZHDM,BHYY,BHNR,DJSJ,DBR,DatabaseId,FLAGS,XGR,XGSJ,WX_WYDM FROM ZHBHQK WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_ZHBHQK="CREATE TRIGGER [vw_ins_ZHBHQKVIEW] INSTEAD OF INSERT ON [ZHBHQKVIEW] BEGIN INSERT OR REPLACE INTO [ZHBHQK] ([Id],[ZHDM],[BHYY],[BHNR],[DJSJ],[DBR],[DatabaseId],[FLAGS],[XGR],[XGSJ],[WX_WYDM])  VALUES (NEW.[Id],NEW.[ZHDM],NEW.[BHYY],NEW.[BHNR],NEW.[DJSJ],NEW.[DBR],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ],NEW.[WX_WYDM]);END";
        private string UPDATE_TRIGGER_ZHBHQK="CREATE TRIGGER [vw_upd_ZHBHQKVIEW] INSTEAD OF UPDATE OF [Id],[ZHDM],[BHYY],[BHNR],[DJSJ],[DBR],[DatabaseId],[FLAGS],[XGR],[XGSJ],[WX_WYDM] ON [ZHBHQKVIEW] BEGIN UPDATE [ZHBHQK] SET [Id]=NEW.[Id],[ZHDM]=NEW.[ZHDM],[BHYY]=NEW.[BHYY],[BHNR]=NEW.[BHNR],[DJSJ]=NEW.[DJSJ],[DBR]=NEW.[DBR],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ],[WX_WYDM]=NEW.[WX_WYDM] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_ZHBHQK="CREATE TRIGGER [vw_del_ZHBHQKVIEW] INSTEAD OF DELETE ON [ZHBHQKVIEW] BEGIN DELETE FROM [ZHBHQK] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_ZHBHQK="SELECT  Id,ZHDM,BHYY,BHNR,DJSJ,DBR,DatabaseId,FLAGS,XGR,XGSJ,WX_WYDM FROM ZHBHQK WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_ZHBHQKVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('zhbhqkview','geometry','rowid','zhbhqk','geometry',0)";
        #endregion        
        
        
        #region ZHJBXX SQL语句
        private string CREATE_VIEW_ZHJBXX="CREATE VIEW ZHJBXXVIEW AS SELECT  Id,YSDM,ZHDM,BDCDYH,ZHTZM,XMMC,XMXZ,YHZMJ,ZHMJ,DB,ZHAX,YHLXA,YHLXB,YHWZSM,HDMC,HDDM,YDFW,YDMJ,HDWZ,HDYT,ZHT,DAH,ZT,DatabaseId,FLAGS,XGR,XGSJ,geometry FROM ZHJBXX WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_ZHJBXX="CREATE TRIGGER [vw_ins_ZHJBXXVIEW] INSTEAD OF INSERT ON [ZHJBXXVIEW] BEGIN INSERT OR REPLACE INTO [ZHJBXX] ([Id],[YSDM],[ZHDM],[BDCDYH],[ZHTZM],[XMMC],[XMXZ],[YHZMJ],[ZHMJ],[DB],[ZHAX],[YHLXA],[YHLXB],[YHWZSM],[HDMC],[HDDM],[YDFW],[YDMJ],[HDWZ],[HDYT],[ZHT],[DAH],[ZT],[DatabaseId],[FLAGS],[XGR],[XGSJ],[geometry])  VALUES (NEW.[Id],NEW.[YSDM],NEW.[ZHDM],NEW.[BDCDYH],NEW.[ZHTZM],NEW.[XMMC],NEW.[XMXZ],NEW.[YHZMJ],NEW.[ZHMJ],NEW.[DB],NEW.[ZHAX],NEW.[YHLXA],NEW.[YHLXB],NEW.[YHWZSM],NEW.[HDMC],NEW.[HDDM],NEW.[YDFW],NEW.[YDMJ],NEW.[HDWZ],NEW.[HDYT],NEW.[ZHT],NEW.[DAH],NEW.[ZT],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ],NEW.[geometry]);END";
        private string UPDATE_TRIGGER_ZHJBXX="CREATE TRIGGER [vw_upd_ZHJBXXVIEW] INSTEAD OF UPDATE OF [Id],[YSDM],[ZHDM],[BDCDYH],[ZHTZM],[XMMC],[XMXZ],[YHZMJ],[ZHMJ],[DB],[ZHAX],[YHLXA],[YHLXB],[YHWZSM],[HDMC],[HDDM],[YDFW],[YDMJ],[HDWZ],[HDYT],[ZHT],[DAH],[ZT],[DatabaseId],[FLAGS],[XGR],[XGSJ],[geometry] ON [ZHJBXXVIEW] BEGIN UPDATE [ZHJBXX] SET [Id]=NEW.[Id],[YSDM]=NEW.[YSDM],[ZHDM]=NEW.[ZHDM],[BDCDYH]=NEW.[BDCDYH],[ZHTZM]=NEW.[ZHTZM],[XMMC]=NEW.[XMMC],[XMXZ]=NEW.[XMXZ],[YHZMJ]=NEW.[YHZMJ],[ZHMJ]=NEW.[ZHMJ],[DB]=NEW.[DB],[ZHAX]=NEW.[ZHAX],[YHLXA]=NEW.[YHLXA],[YHLXB]=NEW.[YHLXB],[YHWZSM]=NEW.[YHWZSM],[HDMC]=NEW.[HDMC],[HDDM]=NEW.[HDDM],[YDFW]=NEW.[YDFW],[YDMJ]=NEW.[YDMJ],[HDWZ]=NEW.[HDWZ],[HDYT]=NEW.[HDYT],[ZHT]=NEW.[ZHT],[DAH]=NEW.[DAH],[ZT]=NEW.[ZT],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ],[geometry]=NEW.[geometry] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_ZHJBXX="CREATE TRIGGER [vw_del_ZHJBXXVIEW] INSTEAD OF DELETE ON [ZHJBXXVIEW] BEGIN DELETE FROM [ZHJBXX] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_ZHJBXX="SELECT  Id,YSDM,ZHDM,BDCDYH,ZHTZM,XMMC,XMXZ,YHZMJ,ZHMJ,DB,ZHAX,YHLXA,YHLXB,YHWZSM,HDMC,HDDM,YDFW,YDMJ,HDWZ,HDYT,ZHT,DAH,ZT,DatabaseId,FLAGS,XGR,XGSJ,geometry FROM ZHJBXX WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_ZHJBXXVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('zhjbxxview','geometry','rowid','zhjbxx','geometry',0)";
        #endregion        
        
        
        #region ZJ SQL语句
        private string CREATE_VIEW_ZJ="CREATE VIEW ZJVIEW AS SELECT  Id,YSDM,ZJNR,ZT,YS,BS,XZ,XHX,KD,GD,ZJDZXJXZB,ZJDZXJYZB,ZJFX,DatabaseId,FLAGS,XGR,XGSJ,geometry FROM ZJ WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_ZJ="CREATE TRIGGER [vw_ins_ZJVIEW] INSTEAD OF INSERT ON [ZJVIEW] BEGIN INSERT OR REPLACE INTO [ZJ] ([Id],[YSDM],[ZJNR],[ZT],[YS],[BS],[XZ],[XHX],[KD],[GD],[ZJDZXJXZB],[ZJDZXJYZB],[ZJFX],[DatabaseId],[FLAGS],[XGR],[XGSJ],[geometry])  VALUES (NEW.[Id],NEW.[YSDM],NEW.[ZJNR],NEW.[ZT],NEW.[YS],NEW.[BS],NEW.[XZ],NEW.[XHX],NEW.[KD],NEW.[GD],NEW.[ZJDZXJXZB],NEW.[ZJDZXJYZB],NEW.[ZJFX],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ],NEW.[geometry]);END";
        private string UPDATE_TRIGGER_ZJ="CREATE TRIGGER [vw_upd_ZJVIEW] INSTEAD OF UPDATE OF [Id],[YSDM],[ZJNR],[ZT],[YS],[BS],[XZ],[XHX],[KD],[GD],[ZJDZXJXZB],[ZJDZXJYZB],[ZJFX],[DatabaseId],[FLAGS],[XGR],[XGSJ],[geometry] ON [ZJVIEW] BEGIN UPDATE [ZJ] SET [Id]=NEW.[Id],[YSDM]=NEW.[YSDM],[ZJNR]=NEW.[ZJNR],[ZT]=NEW.[ZT],[YS]=NEW.[YS],[BS]=NEW.[BS],[XZ]=NEW.[XZ],[XHX]=NEW.[XHX],[KD]=NEW.[KD],[GD]=NEW.[GD],[ZJDZXJXZB]=NEW.[ZJDZXJXZB],[ZJDZXJYZB]=NEW.[ZJDZXJYZB],[ZJFX]=NEW.[ZJFX],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ],[geometry]=NEW.[geometry] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_ZJ="CREATE TRIGGER [vw_del_ZJVIEW] INSTEAD OF DELETE ON [ZJVIEW] BEGIN DELETE FROM [ZJ] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_ZJ="SELECT  Id,YSDM,ZJNR,ZT,YS,BS,XZ,XHX,KD,GD,ZJDZXJXZB,ZJDZXJYZB,ZJFX,DatabaseId,FLAGS,XGR,XGSJ,geometry FROM ZJ WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_ZJVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('zjview','geometry','rowid','zj','geometry',0)";
        #endregion        
        
        
        #region ZRZ SQL语句
        private string CREATE_VIEW_ZRZ="CREATE VIEW ZRZVIEW AS SELECT  Id,YSDM,BDCDYH,ZDDM,ZRZH,XMMC,JZWMC,JGRQ,JZWGD,ZZDMJ,ZYDMJ,YCJZMJ,SCJZMJ,ZCS,DSCS,DXCS,DXSD,GHYT,FWJG,ZTS,JZWJBYT,DAH,BZ,ZT,WX_DCY,WX_DCSJ,WX_CLY,WX_CLSJ,WX_ZTY,WX_ZTSJ,WX_ZJY,WX_ZJSJ,WX_WYDM,DatabaseId,FLAGS,XGR,XGSJ,geometry FROM ZRZ WHERE [FLAGS] < 3;";
        private string INSERT_TRIGGER_ZRZ="CREATE TRIGGER [vw_ins_ZRZVIEW] INSTEAD OF INSERT ON [ZRZVIEW] BEGIN INSERT OR REPLACE INTO [ZRZ] ([Id],[YSDM],[BDCDYH],[ZDDM],[ZRZH],[XMMC],[JZWMC],[JGRQ],[JZWGD],[ZZDMJ],[ZYDMJ],[YCJZMJ],[SCJZMJ],[ZCS],[DSCS],[DXCS],[DXSD],[GHYT],[FWJG],[ZTS],[JZWJBYT],[DAH],[BZ],[ZT],[WX_DCY],[WX_DCSJ],[WX_CLY],[WX_CLSJ],[WX_ZTY],[WX_ZTSJ],[WX_ZJY],[WX_ZJSJ],[WX_WYDM],[DatabaseId],[FLAGS],[XGR],[XGSJ],[geometry])  VALUES (NEW.[Id],NEW.[YSDM],NEW.[BDCDYH],NEW.[ZDDM],NEW.[ZRZH],NEW.[XMMC],NEW.[JZWMC],NEW.[JGRQ],NEW.[JZWGD],NEW.[ZZDMJ],NEW.[ZYDMJ],NEW.[YCJZMJ],NEW.[SCJZMJ],NEW.[ZCS],NEW.[DSCS],NEW.[DXCS],NEW.[DXSD],NEW.[GHYT],NEW.[FWJG],NEW.[ZTS],NEW.[JZWJBYT],NEW.[DAH],NEW.[BZ],NEW.[ZT],NEW.[WX_DCY],NEW.[WX_DCSJ],NEW.[WX_CLY],NEW.[WX_CLSJ],NEW.[WX_ZTY],NEW.[WX_ZTSJ],NEW.[WX_ZJY],NEW.[WX_ZJSJ],NEW.[WX_WYDM],NEW.[DatabaseId],NEW.[FLAGS],NEW.[XGR],NEW.[XGSJ],NEW.[geometry]);END";
        private string UPDATE_TRIGGER_ZRZ="CREATE TRIGGER [vw_upd_ZRZVIEW] INSTEAD OF UPDATE OF [Id],[YSDM],[BDCDYH],[ZDDM],[ZRZH],[XMMC],[JZWMC],[JGRQ],[JZWGD],[ZZDMJ],[ZYDMJ],[YCJZMJ],[SCJZMJ],[ZCS],[DSCS],[DXCS],[DXSD],[GHYT],[FWJG],[ZTS],[JZWJBYT],[DAH],[BZ],[ZT],[WX_DCY],[WX_DCSJ],[WX_CLY],[WX_CLSJ],[WX_ZTY],[WX_ZTSJ],[WX_ZJY],[WX_ZJSJ],[WX_WYDM],[DatabaseId],[FLAGS],[XGR],[XGSJ],[geometry] ON [ZRZVIEW] BEGIN UPDATE [ZRZ] SET [Id]=NEW.[Id],[YSDM]=NEW.[YSDM],[BDCDYH]=NEW.[BDCDYH],[ZDDM]=NEW.[ZDDM],[ZRZH]=NEW.[ZRZH],[XMMC]=NEW.[XMMC],[JZWMC]=NEW.[JZWMC],[JGRQ]=NEW.[JGRQ],[JZWGD]=NEW.[JZWGD],[ZZDMJ]=NEW.[ZZDMJ],[ZYDMJ]=NEW.[ZYDMJ],[YCJZMJ]=NEW.[YCJZMJ],[SCJZMJ]=NEW.[SCJZMJ],[ZCS]=NEW.[ZCS],[DSCS]=NEW.[DSCS],[DXCS]=NEW.[DXCS],[DXSD]=NEW.[DXSD],[GHYT]=NEW.[GHYT],[FWJG]=NEW.[FWJG],[ZTS]=NEW.[ZTS],[JZWJBYT]=NEW.[JZWJBYT],[DAH]=NEW.[DAH],[BZ]=NEW.[BZ],[ZT]=NEW.[ZT],[WX_DCY]=NEW.[WX_DCY],[WX_DCSJ]=NEW.[WX_DCSJ],[WX_CLY]=NEW.[WX_CLY],[WX_CLSJ]=NEW.[WX_CLSJ],[WX_ZTY]=NEW.[WX_ZTY],[WX_ZTSJ]=NEW.[WX_ZTSJ],[WX_ZJY]=NEW.[WX_ZJY],[WX_ZJSJ]=NEW.[WX_ZJSJ],[WX_WYDM]=NEW.[WX_WYDM],[DatabaseId]=NEW.[DatabaseId],[FLAGS]=NEW.[FLAGS],[XGR]=NEW.[XGR],[XGSJ]=NEW.[XGSJ],[geometry]=NEW.[geometry] WHERE ROWID=OLD.ROWID; END";
        private string DELETE_TRIGGER_ZRZ="CREATE TRIGGER [vw_del_ZRZVIEW] INSTEAD OF DELETE ON [ZRZVIEW] BEGIN DELETE FROM [ZRZ] WHERE ROWID=OLD.ROWID;END";
        private string SELECT_ZRZ="SELECT  Id,YSDM,BDCDYH,ZDDM,ZRZH,XMMC,JZWMC,JGRQ,JZWGD,ZZDMJ,ZYDMJ,YCJZMJ,SCJZMJ,ZCS,DSCS,DXCS,DXSD,GHYT,FWJG,ZTS,JZWJBYT,DAH,BZ,ZT,WX_DCY,WX_DCSJ,WX_CLY,WX_CLSJ,WX_ZTY,WX_ZTSJ,WX_ZJY,WX_ZJSJ,WX_WYDM,DatabaseId,FLAGS,XGR,XGSJ,geometry FROM ZRZ WHERE [FLAGS] < 3;";  
        private string REGISTER_GEOMETRY_ZRZVIEW="insert into views_geometry_columns([view_name],[view_geometry],[view_rowid],[f_table_name], [f_geometry_column], [read_only]) values('zrzview','geometry','rowid','zrz','geometry',0)";
        #endregion        
        
        
        #region 初始化
        public ZdDaoImpl():base()
        {
            _entityNames=new Dictionary<string, string>();
            _entityNames.Add("C","层");
            _entityNames.Add("CFDJ","查封登记");
            _entityNames.Add("DJQ","地籍区");
            _entityNames.Add("DJZQ","地籍子区");
            _entityNames.Add("DYAQ","抵押权");
            _entityNames.Add("DYIQ","地役权");
            _entityNames.Add("DZDZW","点状定着物");
            _entityNames.Add("FDCQ1","房地产权（项目内多幢房屋）");
            _entityNames.Add("FDCQ2","房地产权（独幢、层、套、间房屋）");
            _entityNames.Add("FDCQ3","建筑物区分所有权业主共有部分");
            _entityNames.Add("FDCQXM","房地产权（项目内多幢房屋）项目");
            _entityNames.Add("FZ","发证");
            _entityNames.Add("GD","归档");
            _entityNames.Add("GJZWSYQ","构（建）筑物所有权");
            _entityNames.Add("GZW","构筑物");
            _entityNames.Add("H","户");
            _entityNames.Add("HYSYQ","海域(含无居民海岛)使用权");
            _entityNames.Add("JSYDSYQ","建设用地宅基地使用权");
            _entityNames.Add("JZD","界址点");
            _entityNames.Add("JZDZJ","界址点注记");
            _entityNames.Add("JZX","界址线");
            _entityNames.Add("JZXZJ","界址线注记");
            _entityNames.Add("LJZ","逻辑幢");
            _entityNames.Add("LQ","林权");
            _entityNames.Add("MZDZW","面状定着物");
            _entityNames.Add("NYDSYQ","农用地使用权（非林地）");
            _entityNames.Add("QLR","权利人");
            _entityNames.Add("QTXGQL","其它相关权利");
            _entityNames.Add("QXZD","区县字典");
            _entityNames.Add("R","人员信息");
            _entityNames.Add("SF","收费");
            _entityNames.Add("SGSJ","栅格数据");
            _entityNames.Add("SH","审核");
            _entityNames.Add("SJ","收件");
            _entityNames.Add("SLSQ","受理申请");
            _entityNames.Add("SQR","申请人");
            _entityNames.Add("SZ","缮证");
            _entityNames.Add("TDSYQ","土地所有权");
            _entityNames.Add("XZDZW","线状定着物");
            _entityNames.Add("XZQ","行政区");
            _entityNames.Add("XZQJX","行政区界线");
            _entityNames.Add("XZQZJ","行政区注记");
            _entityNames.Add("YGDJ","预告登记");
            _entityNames.Add("YHYDZB","用海用岛坐标");
            _entityNames.Add("YHZK","用海状况");
            _entityNames.Add("YYDJ","异议登记");
            _entityNames.Add("ZDBHQK","宗地变化情况");
            _entityNames.Add("ZDJBXX","宗地");
            _entityNames.Add("ZDJBXXZJ","宗地注记");
            _entityNames.Add("ZDTOJZD","宗地界址点关系表");
            _entityNames.Add("ZDTOJZX","宗地界址线关系表");
            _entityNames.Add("ZHBHQK","宗海变化情况");
            _entityNames.Add("ZHJBXX","宗海（含无居民海岛）");
            _entityNames.Add("ZJ","注记");
            _entityNames.Add("ZRZ","自然幢");
             //RebuildSelectDictionary();
        }
        #endregion
        
                
        public string GetLayerName(string tableName)
        {
            tableName=tableName.ToUpper();
            if(_entityNames.ContainsKey(tableName))
                return _entityNames[tableName];
            else
                return "";
        }
        
       
        
        #region C方法
        public C GetC(long id)
        {
            string sql="SELECT  Id As ID,CFWLX As Cfwlx,JSBL As Jsbl,CH As Ch,ZRZH As Zrzh,YSDM As Ysdm,SJC As Sjc,MYC As Myc,CJZMJ As Cjzmj,CTNJZMJ As Ctnjzmj,CYTMJ As Cytmj,CGYJZMJ As Cgyjzmj,CFTJZMJ As Cftjzmj,CBQMJ As Cbqmj,CG As Cg,SPTYMJ As Sptymj,WX_DCY As WxDcy,WX_DCSJ As WxDcsj,WX_CLY As WxCly,WX_CLSJ As WxClsj,WX_ZTY As WxZty,WX_ZTSJ As WxZtsj,WX_ZJY As WxZjy,WX_ZJSJ As WxZjsj,WX_WYDM As WxWydm,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM C " + " where id="+id.ToString();
            IEnumerable<C> records=connection.Query<C>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<C> GetCS(string filter)
        {
            string sql="SELECT  Id As ID,CFWLX As Cfwlx,JSBL As Jsbl,CH As Ch,ZRZH As Zrzh,YSDM As Ysdm,SJC As Sjc,MYC As Myc,CJZMJ As Cjzmj,CTNJZMJ As Ctnjzmj,CYTMJ As Cytmj,CGYJZMJ As Cgyjzmj,CFTJZMJ As Cftjzmj,CBQMJ As Cbqmj,CG As Cg,SPTYMJ As Sptymj,WX_DCY As WxDcy,WX_DCSJ As WxDcsj,WX_CLY As WxCly,WX_CLSJ As WxClsj,WX_ZTY As WxZty,WX_ZTSJ As WxZtsj,WX_ZJY As WxZjy,WX_ZJSJ As WxZjsj,WX_WYDM As WxWydm,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM C " + " where "+filter;
            var records=connection.Query<C>(sql);            
            return records;
        }
        public bool SaveC(C record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveCS(List<C> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteC(C record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteC(long id)
        {
           C record=GetC(id);
           if(record !=null)
           DeleteC(record);        
        }
        public void DeleteC(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<C> records=GetCS(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(C record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Cfdj方法
        public Cfdj GetCfdj(long id)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,BDCDYH As Bdcdyh,YWH As Ywh,CFJG As Cfjg,CFLX As Cflx,CFWJ As Cfwj,CFWH As Cfwh,CFQSSJ As Cfqssj,CFJSSJ As Cfjssj,CFFW As Cffw,QXDM As Qxdm,DJJG As Djjg,DBR As Dbr,DJSJ As Djsj,JFYWH As Jfywh,JFJG As Jfjg,JFWJ As Jfwj,JFWH As Jfwh,JFDBR As Jfdbr,JFDJSJ As Jfdjsj,FJ As Fj,QSZT As Qszt,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM CFDJ " + " where id="+id.ToString();
            IEnumerable<Cfdj> records=connection.Query<Cfdj>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Cfdj> GetCfdjs(string filter)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,BDCDYH As Bdcdyh,YWH As Ywh,CFJG As Cfjg,CFLX As Cflx,CFWJ As Cfwj,CFWH As Cfwh,CFQSSJ As Cfqssj,CFJSSJ As Cfjssj,CFFW As Cffw,QXDM As Qxdm,DJJG As Djjg,DBR As Dbr,DJSJ As Djsj,JFYWH As Jfywh,JFJG As Jfjg,JFWJ As Jfwj,JFWH As Jfwh,JFDBR As Jfdbr,JFDJSJ As Jfdjsj,FJ As Fj,QSZT As Qszt,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM CFDJ " + " where "+filter;
            var records=connection.Query<Cfdj>(sql);            
            return records;
        }
        public bool SaveCfdj(Cfdj record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveCfdjs(List<Cfdj> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteCfdj(Cfdj record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteCfdj(long id)
        {
           Cfdj record=GetCfdj(id);
           if(record !=null)
           DeleteCfdj(record);        
        }
        public void DeleteCfdj(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Cfdj> records=GetCfdjs(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Cfdj record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Djq方法
        public Djq GetDjq(long id)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,DJQDM As Djqdm,DJQMC As Djqmc,WX_DCY As WxDcy,WX_DCSJ As WxDcsj,WX_CLY As WxCly,WX_CLSJ As WxClsj,WX_ZTY As WxZty,WX_ZTSJ As WxZtsj,WX_ZJY As WxZjy,WX_ZJSJ As WxZjsj,WX_WYDM As WxWydm,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj,AsText(geometry) as Wkt  FROM DJQ " + " where id="+id.ToString();
            IEnumerable<Djq> records=connection.Query<Djq>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Djq> GetDjqs(string filter)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,DJQDM As Djqdm,DJQMC As Djqmc,WX_DCY As WxDcy,WX_DCSJ As WxDcsj,WX_CLY As WxCly,WX_CLSJ As WxClsj,WX_ZTY As WxZty,WX_ZTSJ As WxZtsj,WX_ZJY As WxZjy,WX_ZJSJ As WxZjsj,WX_WYDM As WxWydm,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj,AsText(geometry) as Wkt  FROM DJQ " + " where "+filter;
            var records=connection.Query<Djq>(sql);            
            return records;
        }
        public bool SaveDjq(Djq record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveDjqs(List<Djq> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteDjq(Djq record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteDjq(long id)
        {
           Djq record=GetDjq(id);
           if(record !=null)
           DeleteDjq(record);        
        }
        public void DeleteDjq(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Djq> records=GetDjqs(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Djq record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Djzq方法
        public Djzq GetDjzq(long id)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,DJZQDM As Djzqdm,DJZQMC As Djzqmc,WX_DCY As WxDcy,WX_DCSJ As WxDcsj,WX_CLY As WxCly,WX_CLSJ As WxClsj,WX_ZTY As WxZty,WX_ZTSJ As WxZtsj,WX_ZJY As WxZjy,WX_ZJSJ As WxZjsj,WX_WYDM As WxWydm,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj,AsText(geometry) as Wkt  FROM DJZQ " + " where id="+id.ToString();
            IEnumerable<Djzq> records=connection.Query<Djzq>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Djzq> GetDjzqs(string filter)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,DJZQDM As Djzqdm,DJZQMC As Djzqmc,WX_DCY As WxDcy,WX_DCSJ As WxDcsj,WX_CLY As WxCly,WX_CLSJ As WxClsj,WX_ZTY As WxZty,WX_ZTSJ As WxZtsj,WX_ZJY As WxZjy,WX_ZJSJ As WxZjsj,WX_WYDM As WxWydm,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj,AsText(geometry) as Wkt  FROM DJZQ " + " where "+filter;
            var records=connection.Query<Djzq>(sql);            
            return records;
        }
        public bool SaveDjzq(Djzq record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveDjzqs(List<Djzq> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteDjzq(Djzq record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteDjzq(long id)
        {
           Djzq record=GetDjzq(id);
           if(record !=null)
           DeleteDjzq(record);        
        }
        public void DeleteDjzq(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Djzq> records=GetDjzqs(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Djzq record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Dyaq方法
        public Dyaq GetDyaq(long id)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,BDCDYH As Bdcdyh,YWH As Ywh,DYBDCLX As Dybdclx,DYR As Dyr,DYFS As Dyfs,DJLX As Djlx,DJYY As Djyy,ZJJZWZL As Zjjzwzl,ZJJZWDYFW As Zjjzwdyfw,BDBZZQSE As Bdbzzqse,ZWLXQSSJ As Zwlxqssj,ZWLXJSSJ As Zwlxjssj,ZGZQQDSS As Zgzqqdss,ZGZQSE As Zgzqse,ZXDYYWH As Zxdyywh,ZXDYYY As Zxdyyy,ZXSJ As Zxsj,BDCDJZMH As Bdcdjzmh,QXDM As Qxdm,DJJG As Djjg,DBR As Dbr,DJSJ As Djsj,FJ As Fj,QSZT As Qszt,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM DYAQ " + " where id="+id.ToString();
            IEnumerable<Dyaq> records=connection.Query<Dyaq>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Dyaq> GetDyaqs(string filter)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,BDCDYH As Bdcdyh,YWH As Ywh,DYBDCLX As Dybdclx,DYR As Dyr,DYFS As Dyfs,DJLX As Djlx,DJYY As Djyy,ZJJZWZL As Zjjzwzl,ZJJZWDYFW As Zjjzwdyfw,BDBZZQSE As Bdbzzqse,ZWLXQSSJ As Zwlxqssj,ZWLXJSSJ As Zwlxjssj,ZGZQQDSS As Zgzqqdss,ZGZQSE As Zgzqse,ZXDYYWH As Zxdyywh,ZXDYYY As Zxdyyy,ZXSJ As Zxsj,BDCDJZMH As Bdcdjzmh,QXDM As Qxdm,DJJG As Djjg,DBR As Dbr,DJSJ As Djsj,FJ As Fj,QSZT As Qszt,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM DYAQ " + " where "+filter;
            var records=connection.Query<Dyaq>(sql);            
            return records;
        }
        public bool SaveDyaq(Dyaq record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveDyaqs(List<Dyaq> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteDyaq(Dyaq record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteDyaq(long id)
        {
           Dyaq record=GetDyaq(id);
           if(record !=null)
           DeleteDyaq(record);        
        }
        public void DeleteDyaq(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Dyaq> records=GetDyaqs(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Dyaq record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Dyiq方法
        public Dyiq GetDyiq(long id)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,YWH As Ywh,GYDBDCDYH As Gydbdcdyh,GYDQLR As Gydqlr,GYDQLRZJZL As Gydqlrzjzl,GYDQLRZJH As Gydqlrzjh,XYDBDCDYH As Xydbdcdyh,XYDZL As Xydzl,XYDQLR As Xydqlr,XYDQLRZJZL As Xydqlrzjzl,XYDQLRZJH As Xydqlrzjh,DJLX As Djlx,DJYY As Djyy,DYQNR As Dyqnr,BDCDJZMH As Bdcdjzmh,QLQSSJ As Qlqssj,QLJSSJ As Qljssj,QXDM As Qxdm,DJJG As Djjg,DBR As Dbr,DJSJ As Djsj,FJ As Fj,QSZT As Qszt,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM DYIQ " + " where id="+id.ToString();
            IEnumerable<Dyiq> records=connection.Query<Dyiq>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Dyiq> GetDyiqs(string filter)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,YWH As Ywh,GYDBDCDYH As Gydbdcdyh,GYDQLR As Gydqlr,GYDQLRZJZL As Gydqlrzjzl,GYDQLRZJH As Gydqlrzjh,XYDBDCDYH As Xydbdcdyh,XYDZL As Xydzl,XYDQLR As Xydqlr,XYDQLRZJZL As Xydqlrzjzl,XYDQLRZJH As Xydqlrzjh,DJLX As Djlx,DJYY As Djyy,DYQNR As Dyqnr,BDCDJZMH As Bdcdjzmh,QLQSSJ As Qlqssj,QLJSSJ As Qljssj,QXDM As Qxdm,DJJG As Djjg,DBR As Dbr,DJSJ As Djsj,FJ As Fj,QSZT As Qszt,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM DYIQ " + " where "+filter;
            var records=connection.Query<Dyiq>(sql);            
            return records;
        }
        public bool SaveDyiq(Dyiq record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveDyiqs(List<Dyiq> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteDyiq(Dyiq record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteDyiq(long id)
        {
           Dyiq record=GetDyiq(id);
           if(record !=null)
           DeleteDyiq(record);        
        }
        public void DeleteDyiq(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Dyiq> records=GetDyiqs(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Dyiq record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Dzdzw方法
        public Dzdzw GetDzdzw(long id)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,BDCDYH As Bdcdyh,ZDZHDM As Zdzhdm,DZDZWLX As Dzdzwlx,DZWMC As Dzwmc,MJDW As Mjdw,MJ As Mj,DAH As Dah,ZT As Zt,WX_DCY As WxDcy,WX_DCSJ As WxDcsj,WX_CLY As WxCly,WX_CLSJ As WxClsj,WX_ZTY As WxZty,WX_ZTSJ As WxZtsj,WX_ZJY As WxZjy,WX_ZJSJ As WxZjsj,WX_WYDM As WxWydm,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj,AsText(geometry) as Wkt  FROM DZDZW " + " where id="+id.ToString();
            IEnumerable<Dzdzw> records=connection.Query<Dzdzw>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Dzdzw> GetDzdzws(string filter)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,BDCDYH As Bdcdyh,ZDZHDM As Zdzhdm,DZDZWLX As Dzdzwlx,DZWMC As Dzwmc,MJDW As Mjdw,MJ As Mj,DAH As Dah,ZT As Zt,WX_DCY As WxDcy,WX_DCSJ As WxDcsj,WX_CLY As WxCly,WX_CLSJ As WxClsj,WX_ZTY As WxZty,WX_ZTSJ As WxZtsj,WX_ZJY As WxZjy,WX_ZJSJ As WxZjsj,WX_WYDM As WxWydm,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj,AsText(geometry) as Wkt  FROM DZDZW " + " where "+filter;
            var records=connection.Query<Dzdzw>(sql);            
            return records;
        }
        public bool SaveDzdzw(Dzdzw record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveDzdzws(List<Dzdzw> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteDzdzw(Dzdzw record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteDzdzw(long id)
        {
           Dzdzw record=GetDzdzw(id);
           if(record !=null)
           DeleteDzdzw(record);        
        }
        public void DeleteDzdzw(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Dzdzw> records=GetDzdzws(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Dzdzw record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Fdcq1方法
        public Fdcq1 GetFdcq1(long id)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,BDCDYH As Bdcdyh,YWH As Ywh,QLLX As Qllx,DJLX As Djlx,DJYY As Djyy,FDZL As Fdzl,TDSYQR As Tdsyqr,DYTDMJ As Dytdmj,FTTDMJ As Fttdmj,TDSYQSSJ As Tdsyqssj,TDSYJSSJ As Tdsyjssj,FDCJYJG As Fdcjyjg,BDCQZH As Bdcqzh,QXDM As Qxdm,DJJG As Djjg,DBR As Dbr,DJSJ As Djsj,FJ As Fj,FCFHT As Fcfht,QSZT As Qszt,WX_DCY As WxDcy,WX_DCSJ As WxDcsj,WX_CLY As WxCly,WX_CLSJ As WxClsj,WX_ZTY As WxZty,WX_ZTSJ As WxZtsj,WX_ZJY As WxZjy,WX_ZJSJ As WxZjsj,WX_WYDM As WxWydm,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM FDCQ1 " + " where id="+id.ToString();
            IEnumerable<Fdcq1> records=connection.Query<Fdcq1>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Fdcq1> GetFdcq1s(string filter)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,BDCDYH As Bdcdyh,YWH As Ywh,QLLX As Qllx,DJLX As Djlx,DJYY As Djyy,FDZL As Fdzl,TDSYQR As Tdsyqr,DYTDMJ As Dytdmj,FTTDMJ As Fttdmj,TDSYQSSJ As Tdsyqssj,TDSYJSSJ As Tdsyjssj,FDCJYJG As Fdcjyjg,BDCQZH As Bdcqzh,QXDM As Qxdm,DJJG As Djjg,DBR As Dbr,DJSJ As Djsj,FJ As Fj,FCFHT As Fcfht,QSZT As Qszt,WX_DCY As WxDcy,WX_DCSJ As WxDcsj,WX_CLY As WxCly,WX_CLSJ As WxClsj,WX_ZTY As WxZty,WX_ZTSJ As WxZtsj,WX_ZJY As WxZjy,WX_ZJSJ As WxZjsj,WX_WYDM As WxWydm,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM FDCQ1 " + " where "+filter;
            var records=connection.Query<Fdcq1>(sql);            
            return records;
        }
        public bool SaveFdcq1(Fdcq1 record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveFdcq1s(List<Fdcq1> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteFdcq1(Fdcq1 record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteFdcq1(long id)
        {
           Fdcq1 record=GetFdcq1(id);
           if(record !=null)
           DeleteFdcq1(record);        
        }
        public void DeleteFdcq1(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Fdcq1> records=GetFdcq1s(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Fdcq1 record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Fdcq2方法
        public Fdcq2 GetFdcq2(long id)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,BDCDYH As Bdcdyh,YWH As Ywh,QLLX As Qllx,DJLX As Djlx,DJYY As Djyy,FDZL As Fdzl,TDSYQR As Tdsyqr,DYTDMJ As Dytdmj,FTTDMJ As Fttdmj,TDSYQSSJ As Tdsyqssj,TDSYJSSJ As Tdsyjssj,FDCJYJG As Fdcjyjg,GHYT As Ghyt,FWXZ As Fwxz,FWJG As Fwjg,SZC As Szc,ZCS As Zcs,JZMJ As Jzmj,ZYJZMJ As Zyjzmj,FTJZMJ As Ftjzmj,JGSJ As Jgsj,BDCQZH As Bdcqzh,QXDM As Qxdm,DJJG As Djjg,DBR As Dbr,DJSJ As Djsj,FJ As Fj,QSZT As Qszt,WX_DCY As WxDcy,WX_DCSJ As WxDcsj,WX_CLY As WxCly,WX_CLSJ As WxClsj,WX_ZTY As WxZty,WX_ZTSJ As WxZtsj,WX_ZJY As WxZjy,WX_ZJSJ As WxZjsj,WX_WYDM As WxWydm,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM FDCQ2 " + " where id="+id.ToString();
            IEnumerable<Fdcq2> records=connection.Query<Fdcq2>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Fdcq2> GetFdcq2s(string filter)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,BDCDYH As Bdcdyh,YWH As Ywh,QLLX As Qllx,DJLX As Djlx,DJYY As Djyy,FDZL As Fdzl,TDSYQR As Tdsyqr,DYTDMJ As Dytdmj,FTTDMJ As Fttdmj,TDSYQSSJ As Tdsyqssj,TDSYJSSJ As Tdsyjssj,FDCJYJG As Fdcjyjg,GHYT As Ghyt,FWXZ As Fwxz,FWJG As Fwjg,SZC As Szc,ZCS As Zcs,JZMJ As Jzmj,ZYJZMJ As Zyjzmj,FTJZMJ As Ftjzmj,JGSJ As Jgsj,BDCQZH As Bdcqzh,QXDM As Qxdm,DJJG As Djjg,DBR As Dbr,DJSJ As Djsj,FJ As Fj,QSZT As Qszt,WX_DCY As WxDcy,WX_DCSJ As WxDcsj,WX_CLY As WxCly,WX_CLSJ As WxClsj,WX_ZTY As WxZty,WX_ZTSJ As WxZtsj,WX_ZJY As WxZjy,WX_ZJSJ As WxZjsj,WX_WYDM As WxWydm,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM FDCQ2 " + " where "+filter;
            var records=connection.Query<Fdcq2>(sql);            
            return records;
        }
        public bool SaveFdcq2(Fdcq2 record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveFdcq2s(List<Fdcq2> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteFdcq2(Fdcq2 record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteFdcq2(long id)
        {
           Fdcq2 record=GetFdcq2(id);
           if(record !=null)
           DeleteFdcq2(record);        
        }
        public void DeleteFdcq2(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Fdcq2> records=GetFdcq2s(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Fdcq2 record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Fdcq3方法
        public Fdcq3 GetFdcq3(long id)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,BDCDYH As Bdcdyh,YWH As Ywh,QLLX As Qllx,JGZWBH As Jgzwbh,JGZWMC As Jgzwmc,JGZWSL As Jgzwsl,JGZWMJ As Jgzwmj,FTTDMJ As Fttdmj,QXDM As Qxdm,DJJG As Djjg,DBR As Dbr,DJSJ As Djsj,FJ As Fj,QSZT As Qszt,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM FDCQ3 " + " where id="+id.ToString();
            IEnumerable<Fdcq3> records=connection.Query<Fdcq3>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Fdcq3> GetFdcq3s(string filter)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,BDCDYH As Bdcdyh,YWH As Ywh,QLLX As Qllx,JGZWBH As Jgzwbh,JGZWMC As Jgzwmc,JGZWSL As Jgzwsl,JGZWMJ As Jgzwmj,FTTDMJ As Fttdmj,QXDM As Qxdm,DJJG As Djjg,DBR As Dbr,DJSJ As Djsj,FJ As Fj,QSZT As Qszt,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM FDCQ3 " + " where "+filter;
            var records=connection.Query<Fdcq3>(sql);            
            return records;
        }
        public bool SaveFdcq3(Fdcq3 record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveFdcq3s(List<Fdcq3> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteFdcq3(Fdcq3 record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteFdcq3(long id)
        {
           Fdcq3 record=GetFdcq3(id);
           if(record !=null)
           DeleteFdcq3(record);        
        }
        public void DeleteFdcq3(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Fdcq3> records=GetFdcq3s(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Fdcq3 record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Fdcqxm方法
        public Fdcqxm GetFdcqxm(long id)
        {
            string sql="SELECT  Id As ID,BDCDYH As Bdcdyh,XMMC As Xmmc,ZH As Zh,ZCS As Zcs,GHYT As Ghyt,FWJG As Fwjg,JZMJ As Jzmj,JGSJ As Jgsj,ZTS As Zts,WX_DCY As WxDcy,WX_DCSJ As WxDcsj,WX_CLY As WxCly,WX_CLSJ As WxClsj,WX_ZTY As WxZty,WX_ZTSJ As WxZtsj,WX_ZJY As WxZjy,WX_ZJSJ As WxZjsj,WX_WYDM As WxWydm,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM FDCQXM " + " where id="+id.ToString();
            IEnumerable<Fdcqxm> records=connection.Query<Fdcqxm>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Fdcqxm> GetFdcqxms(string filter)
        {
            string sql="SELECT  Id As ID,BDCDYH As Bdcdyh,XMMC As Xmmc,ZH As Zh,ZCS As Zcs,GHYT As Ghyt,FWJG As Fwjg,JZMJ As Jzmj,JGSJ As Jgsj,ZTS As Zts,WX_DCY As WxDcy,WX_DCSJ As WxDcsj,WX_CLY As WxCly,WX_CLSJ As WxClsj,WX_ZTY As WxZty,WX_ZTSJ As WxZtsj,WX_ZJY As WxZjy,WX_ZJSJ As WxZjsj,WX_WYDM As WxWydm,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM FDCQXM " + " where "+filter;
            var records=connection.Query<Fdcqxm>(sql);            
            return records;
        }
        public bool SaveFdcqxm(Fdcqxm record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveFdcqxms(List<Fdcqxm> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteFdcqxm(Fdcqxm record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteFdcqxm(long id)
        {
           Fdcqxm record=GetFdcqxm(id);
           if(record !=null)
           DeleteFdcqxm(record);        
        }
        public void DeleteFdcqxm(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Fdcqxm> records=GetFdcqxms(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Fdcqxm record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Fz方法
        public Fz GetFz(long id)
        {
            string sql="SELECT  Id As ID,YWH As Ywh,YSDM As Ysdm,FZRY As Fzry,FZSJ As Fzsj,FZMC As Fzmc,FZSL As Fzsl,HFZSH As Hfzsh,LZRXM As Lzrxm,LZRZJLB As Lzrzjlb,LZRZJH As Lzrzjh,LZRDH As Lzrdh,LZRDZ As Lzrdz,LZRYB As Lzryb,BZ As Bz,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM FZ " + " where id="+id.ToString();
            IEnumerable<Fz> records=connection.Query<Fz>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Fz> GetFzs(string filter)
        {
            string sql="SELECT  Id As ID,YWH As Ywh,YSDM As Ysdm,FZRY As Fzry,FZSJ As Fzsj,FZMC As Fzmc,FZSL As Fzsl,HFZSH As Hfzsh,LZRXM As Lzrxm,LZRZJLB As Lzrzjlb,LZRZJH As Lzrzjh,LZRDH As Lzrdh,LZRDZ As Lzrdz,LZRYB As Lzryb,BZ As Bz,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM FZ " + " where "+filter;
            var records=connection.Query<Fz>(sql);            
            return records;
        }
        public bool SaveFz(Fz record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveFzs(List<Fz> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteFz(Fz record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteFz(long id)
        {
           Fz record=GetFz(id);
           if(record !=null)
           DeleteFz(record);        
        }
        public void DeleteFz(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Fz> records=GetFzs(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Fz record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Gd方法
        public Gd GetGd(long id)
        {
            string sql="SELECT  Id As ID,YWH As Ywh,YSDM As Ysdm,DJDL As Djdl,DJXL As Djxl,ZL As Zl,QZHM As Qzhm,WJJS As Wjjs,ZYS As Zys,GDRY As Gdry,GDSJ As Gdsj,BZ As Bz,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM GD " + " where id="+id.ToString();
            IEnumerable<Gd> records=connection.Query<Gd>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Gd> GetGds(string filter)
        {
            string sql="SELECT  Id As ID,YWH As Ywh,YSDM As Ysdm,DJDL As Djdl,DJXL As Djxl,ZL As Zl,QZHM As Qzhm,WJJS As Wjjs,ZYS As Zys,GDRY As Gdry,GDSJ As Gdsj,BZ As Bz,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM GD " + " where "+filter;
            var records=connection.Query<Gd>(sql);            
            return records;
        }
        public bool SaveGd(Gd record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveGds(List<Gd> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteGd(Gd record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteGd(long id)
        {
           Gd record=GetGd(id);
           if(record !=null)
           DeleteGd(record);        
        }
        public void DeleteGd(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Gd> records=GetGds(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Gd record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Gjzwsyq方法
        public Gjzwsyq GetGjzwsyq(long id)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,BDCDYH As Bdcdyh,YWH As Ywh,QLLX As Qllx,DJLX As Djlx,DJYY As Djyy,ZL As Zl,TDHYSYQR As Tdhysyqr,TDHYSYMJ As Tdhysymj,TDHYSYQSSJ As Tdhysyqssj,TDHYSYJSSJ As Tdhysyjssj,GJZWLX As Gjzwlx,GJZWGHYT As Gjzwghyt,GJZWMJ As Gjzwmj,JGSJ As Jgsj,BDCQZH As Bdcqzh,QXDM As Qxdm,DJJG As Djjg,DBR As Dbr,DJSJ As Djsj,FJ As Fj,GJZWPMT As Gjzwpmt,QSZT As Qszt,WX_DCY As WxDcy,WX_DCSJ As WxDcsj,WX_CLY As WxCly,WX_CLSJ As WxClsj,WX_ZTY As WxZty,WX_ZTSJ As WxZtsj,WX_ZJY As WxZjy,WX_ZJSJ As WxZjsj,WX_WYDM As WxWydm,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM GJZWSYQ " + " where id="+id.ToString();
            IEnumerable<Gjzwsyq> records=connection.Query<Gjzwsyq>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Gjzwsyq> GetGjzwsyqs(string filter)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,BDCDYH As Bdcdyh,YWH As Ywh,QLLX As Qllx,DJLX As Djlx,DJYY As Djyy,ZL As Zl,TDHYSYQR As Tdhysyqr,TDHYSYMJ As Tdhysymj,TDHYSYQSSJ As Tdhysyqssj,TDHYSYJSSJ As Tdhysyjssj,GJZWLX As Gjzwlx,GJZWGHYT As Gjzwghyt,GJZWMJ As Gjzwmj,JGSJ As Jgsj,BDCQZH As Bdcqzh,QXDM As Qxdm,DJJG As Djjg,DBR As Dbr,DJSJ As Djsj,FJ As Fj,GJZWPMT As Gjzwpmt,QSZT As Qszt,WX_DCY As WxDcy,WX_DCSJ As WxDcsj,WX_CLY As WxCly,WX_CLSJ As WxClsj,WX_ZTY As WxZty,WX_ZTSJ As WxZtsj,WX_ZJY As WxZjy,WX_ZJSJ As WxZjsj,WX_WYDM As WxWydm,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM GJZWSYQ " + " where "+filter;
            var records=connection.Query<Gjzwsyq>(sql);            
            return records;
        }
        public bool SaveGjzwsyq(Gjzwsyq record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveGjzwsyqs(List<Gjzwsyq> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteGjzwsyq(Gjzwsyq record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteGjzwsyq(long id)
        {
           Gjzwsyq record=GetGjzwsyq(id);
           if(record !=null)
           DeleteGjzwsyq(record);        
        }
        public void DeleteGjzwsyq(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Gjzwsyq> records=GetGjzwsyqs(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Gjzwsyq record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Gzw方法
        public Gzw GetGzw(long id)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,BDCDYH As Bdcdyh,ZDZHDM As Zdzhdm,GZWMC As Gzwmc,ZL As Zl,MJDW As Mjdw,MJ As Mj,DAH As Dah,ZT As Zt,WX_DCY As WxDcy,WX_DCSJ As WxDcsj,WX_CLY As WxCly,WX_CLSJ As WxClsj,WX_ZTY As WxZty,WX_ZTSJ As WxZtsj,WX_ZJY As WxZjy,WX_ZJSJ As WxZjsj,WX_WYDM As WxWydm,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj,AsText(geometry) as Wkt  FROM GZW " + " where id="+id.ToString();
            IEnumerable<Gzw> records=connection.Query<Gzw>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Gzw> GetGzws(string filter)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,BDCDYH As Bdcdyh,ZDZHDM As Zdzhdm,GZWMC As Gzwmc,ZL As Zl,MJDW As Mjdw,MJ As Mj,DAH As Dah,ZT As Zt,WX_DCY As WxDcy,WX_DCSJ As WxDcsj,WX_CLY As WxCly,WX_CLSJ As WxClsj,WX_ZTY As WxZty,WX_ZTSJ As WxZtsj,WX_ZJY As WxZjy,WX_ZJSJ As WxZjsj,WX_WYDM As WxWydm,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj,AsText(geometry) as Wkt  FROM GZW " + " where "+filter;
            var records=connection.Query<Gzw>(sql);            
            return records;
        }
        public bool SaveGzw(Gzw record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveGzws(List<Gzw> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteGzw(Gzw record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteGzw(long id)
        {
           Gzw record=GetGzw(id);
           if(record !=null)
           DeleteGzw(record);        
        }
        public void DeleteGzw(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Gzw> records=GetGzws(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Gzw record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region H方法
        public H GetH(long id)
        {
            string sql="SELECT  Id As ID,BDCDYH As Bdcdyh,FWBM As Fwbm,YSDM As Ysdm,ZRZH As Zrzh,LJZH As Ljzh,CH As Ch,ZL As Zl,MJDW As Mjdw,SJCS As Sjcs,HH As Hh,SHBW As Shbw,HX As Hx,HXJG As Hxjg,FWYT1 As Fwyt1,FWYT2 As Fwyt2,FWYT3 As Fwyt3,YCJZMJ As Ycjzmj,YCTNJZMJ As Yctnjzmj,YCFTJZMJ As Ycftjzmj,YCDXBFJZMJ As Ycdxbfjzmj,YCQTJZMJ As Ycqtjzmj,YCFTXS As Ycftxs,SCJZMJ As Scjzmj,SCTNJZMJ As Sctnjzmj,SCFTJZMJ As Scftjzmj,SCDXBFJZMJ As Scdxbfjzmj,SCQTJZMJ As Scqtjzmj,SCFTXS As Scftxs,GYTDMJ As Gytdmj,FTTDMJ As Fttdmj,DYTDMJ As Dytdmj,FWLX As Fwlx,FWXZ As Fwxz,FCFHT As Fcfht,ZT As Zt,WX_DCY As WxDcy,WX_DCSJ As WxDcsj,WX_CLY As WxCly,WX_CLSJ As WxClsj,WX_ZTY As WxZty,WX_ZTSJ As WxZtsj,WX_ZJY As WxZjy,WX_ZJSJ As WxZjsj,WX_WYDM As WxWydm,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM H " + " where id="+id.ToString();
            IEnumerable<H> records=connection.Query<H>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<H> GetHS(string filter)
        {
            string sql="SELECT  Id As ID,BDCDYH As Bdcdyh,FWBM As Fwbm,YSDM As Ysdm,ZRZH As Zrzh,LJZH As Ljzh,CH As Ch,ZL As Zl,MJDW As Mjdw,SJCS As Sjcs,HH As Hh,SHBW As Shbw,HX As Hx,HXJG As Hxjg,FWYT1 As Fwyt1,FWYT2 As Fwyt2,FWYT3 As Fwyt3,YCJZMJ As Ycjzmj,YCTNJZMJ As Yctnjzmj,YCFTJZMJ As Ycftjzmj,YCDXBFJZMJ As Ycdxbfjzmj,YCQTJZMJ As Ycqtjzmj,YCFTXS As Ycftxs,SCJZMJ As Scjzmj,SCTNJZMJ As Sctnjzmj,SCFTJZMJ As Scftjzmj,SCDXBFJZMJ As Scdxbfjzmj,SCQTJZMJ As Scqtjzmj,SCFTXS As Scftxs,GYTDMJ As Gytdmj,FTTDMJ As Fttdmj,DYTDMJ As Dytdmj,FWLX As Fwlx,FWXZ As Fwxz,FCFHT As Fcfht,ZT As Zt,WX_DCY As WxDcy,WX_DCSJ As WxDcsj,WX_CLY As WxCly,WX_CLSJ As WxClsj,WX_ZTY As WxZty,WX_ZTSJ As WxZtsj,WX_ZJY As WxZjy,WX_ZJSJ As WxZjsj,WX_WYDM As WxWydm,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM H " + " where "+filter;
            var records=connection.Query<H>(sql);            
            return records;
        }
        public bool SaveH(H record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveHS(List<H> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteH(H record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteH(long id)
        {
           H record=GetH(id);
           if(record !=null)
           DeleteH(record);        
        }
        public void DeleteH(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<H> records=GetHS(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(H record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Hysyq方法
        public Hysyq GetHysyq(long id)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,ZHHDDM As Zhhddm,BDCDYH As Bdcdyh,YWH As Ywh,QLLX As Qllx,DJLX As Djlx,DJYY As Djyy,SYQMJ As Syqmj,SYQQSSJ As Syqqssj,SYQJSSJ As Syqjssj,SYJZE As Syjze,SYJBZYJ As Syjbzyj,SYJJNQK As Syjjnqk,BDCQZH As Bdcqzh,QXDM As Qxdm,DJJG As Djjg,DBR As Dbr,DJSJ As Djsj,FJ As Fj,QSZT As Qszt,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM HYSYQ " + " where id="+id.ToString();
            IEnumerable<Hysyq> records=connection.Query<Hysyq>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Hysyq> GetHysyqs(string filter)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,ZHHDDM As Zhhddm,BDCDYH As Bdcdyh,YWH As Ywh,QLLX As Qllx,DJLX As Djlx,DJYY As Djyy,SYQMJ As Syqmj,SYQQSSJ As Syqqssj,SYQJSSJ As Syqjssj,SYJZE As Syjze,SYJBZYJ As Syjbzyj,SYJJNQK As Syjjnqk,BDCQZH As Bdcqzh,QXDM As Qxdm,DJJG As Djjg,DBR As Dbr,DJSJ As Djsj,FJ As Fj,QSZT As Qszt,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM HYSYQ " + " where "+filter;
            var records=connection.Query<Hysyq>(sql);            
            return records;
        }
        public bool SaveHysyq(Hysyq record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveHysyqs(List<Hysyq> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteHysyq(Hysyq record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteHysyq(long id)
        {
           Hysyq record=GetHysyq(id);
           if(record !=null)
           DeleteHysyq(record);        
        }
        public void DeleteHysyq(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Hysyq> records=GetHysyqs(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Hysyq record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Jsydsyq方法
        public Jsydsyq GetJsydsyq(long id)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,ZDDM As Zddm,BDCDYH As Bdcdyh,YWH As Ywh,QLLX As Qllx,DJLX As Djlx,DJYY As Djyy,SYQMJ As Syqmj,SYQQSSJ As Syqqssj,SYQJSSJ As Syqjssj,QDJG As Qdjg,BDCQZH As Bdcqzh,QXDM As Qxdm,DJJG As Djjg,DBR As Dbr,DJSJ As Djsj,FJ As Fj,QSZT As Qszt,WX_DCY As WxDcy,WX_DCSJ As WxDcsj,WX_CLY As WxCly,WX_CLSJ As WxClsj,WX_ZTY As WxZty,WX_ZTSJ As WxZtsj,WX_ZJY As WxZjy,WX_ZJSJ As WxZjsj,WX_WYDM As WxWydm,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM JSYDSYQ " + " where id="+id.ToString();
            IEnumerable<Jsydsyq> records=connection.Query<Jsydsyq>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Jsydsyq> GetJsydsyqs(string filter)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,ZDDM As Zddm,BDCDYH As Bdcdyh,YWH As Ywh,QLLX As Qllx,DJLX As Djlx,DJYY As Djyy,SYQMJ As Syqmj,SYQQSSJ As Syqqssj,SYQJSSJ As Syqjssj,QDJG As Qdjg,BDCQZH As Bdcqzh,QXDM As Qxdm,DJJG As Djjg,DBR As Dbr,DJSJ As Djsj,FJ As Fj,QSZT As Qszt,WX_DCY As WxDcy,WX_DCSJ As WxDcsj,WX_CLY As WxCly,WX_CLSJ As WxClsj,WX_ZTY As WxZty,WX_ZTSJ As WxZtsj,WX_ZJY As WxZjy,WX_ZJSJ As WxZjsj,WX_WYDM As WxWydm,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM JSYDSYQ " + " where "+filter;
            var records=connection.Query<Jsydsyq>(sql);            
            return records;
        }
        public bool SaveJsydsyq(Jsydsyq record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveJsydsyqs(List<Jsydsyq> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteJsydsyq(Jsydsyq record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteJsydsyq(long id)
        {
           Jsydsyq record=GetJsydsyq(id);
           if(record !=null)
           DeleteJsydsyq(record);        
        }
        public void DeleteJsydsyq(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Jsydsyq> records=GetJsydsyqs(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Jsydsyq record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Jzd方法
        public Jzd GetJzd(long id)
        {
            string sql="SELECT  Id As ID,ZDZHDM As Zdzhdm,YSDM As Ysdm,JZDH As Jzdh,SXH As Sxh,JBLX As Jblx,JZDLX As Jzdlx,XZBZ As Xzbz,YZBZ As Yzbz,WX_DCY As WxDcy,WX_DCSJ As WxDcsj,WX_CLY As WxCly,WX_CLSJ As WxClsj,WX_ZTY As WxZty,WX_ZTSJ As WxZtsj,WX_ZJY As WxZjy,WX_ZJSJ As WxZjsj,WX_WYDM As WxWydm,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj,AsText(geometry) as Wkt  FROM JZD " + " where id="+id.ToString();
            IEnumerable<Jzd> records=connection.Query<Jzd>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Jzd> GetJzds(string filter)
        {
            string sql="SELECT  Id As ID,ZDZHDM As Zdzhdm,YSDM As Ysdm,JZDH As Jzdh,SXH As Sxh,JBLX As Jblx,JZDLX As Jzdlx,XZBZ As Xzbz,YZBZ As Yzbz,WX_DCY As WxDcy,WX_DCSJ As WxDcsj,WX_CLY As WxCly,WX_CLSJ As WxClsj,WX_ZTY As WxZty,WX_ZTSJ As WxZtsj,WX_ZJY As WxZjy,WX_ZJSJ As WxZjsj,WX_WYDM As WxWydm,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj,AsText(geometry) as Wkt  FROM JZD " + " where "+filter;
            var records=connection.Query<Jzd>(sql);            
            return records;
        }
        public bool SaveJzd(Jzd record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveJzds(List<Jzd> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteJzd(Jzd record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteJzd(long id)
        {
           Jzd record=GetJzd(id);
           if(record !=null)
           DeleteJzd(record);        
        }
        public void DeleteJzd(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Jzd> records=GetJzds(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Jzd record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Jzdzj方法
        public Jzdzj GetJzdzj(long id)
        {
            string sql="SELECT  Id As ID,GLYSBH As Glysbh,YSDM As Ysdm,ZJNR As Zjnr,ZT As Zt,YS As Ys,BS As Bs,XZ As Xz,XHX As Xhx,KD As Kd,GD As Gd,ZJDZXJXZB As Zjdzxjxzb,ZJDZXJYZB As Zjdzxjyzb,ZJFX As Zjfx,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj,AsText(geometry) as Wkt  FROM JZDZJ " + " where id="+id.ToString();
            IEnumerable<Jzdzj> records=connection.Query<Jzdzj>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Jzdzj> GetJzdzjs(string filter)
        {
            string sql="SELECT  Id As ID,GLYSBH As Glysbh,YSDM As Ysdm,ZJNR As Zjnr,ZT As Zt,YS As Ys,BS As Bs,XZ As Xz,XHX As Xhx,KD As Kd,GD As Gd,ZJDZXJXZB As Zjdzxjxzb,ZJDZXJYZB As Zjdzxjyzb,ZJFX As Zjfx,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj,AsText(geometry) as Wkt  FROM JZDZJ " + " where "+filter;
            var records=connection.Query<Jzdzj>(sql);            
            return records;
        }
        public bool SaveJzdzj(Jzdzj record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveJzdzjs(List<Jzdzj> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteJzdzj(Jzdzj record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteJzdzj(long id)
        {
           Jzdzj record=GetJzdzj(id);
           if(record !=null)
           DeleteJzdzj(record);        
        }
        public void DeleteJzdzj(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Jzdzj> records=GetJzdzjs(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Jzdzj record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Jzx方法
        public Jzx GetJzx(long id)
        {
            string sql="SELECT  Id As ID,ZDZHDM As Zdzhdm,YSDM As Ysdm,JZXCD As Jzxcd,JZXLB As Jzxlb,JZXWZ As Jzxwz,JXXZ As Jxxz,QSJXXYSBH As Qsjxxysbh,QSJXXYS As Qsjxxys,QSZYYYSBH As Qszyyysbh,QSZYYYS As Qszyyys,WX_DCY As WxDcy,WX_DCSJ As WxDcsj,WX_CLY As WxCly,WX_CLSJ As WxClsj,WX_ZTY As WxZty,WX_ZTSJ As WxZtsj,WX_ZJY As WxZjy,WX_ZJSJ As WxZjsj,WX_WYDM As WxWydm,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj,AsText(geometry) as Wkt  FROM JZX " + " where id="+id.ToString();
            IEnumerable<Jzx> records=connection.Query<Jzx>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Jzx> GetJzxes(string filter)
        {
            string sql="SELECT  Id As ID,ZDZHDM As Zdzhdm,YSDM As Ysdm,JZXCD As Jzxcd,JZXLB As Jzxlb,JZXWZ As Jzxwz,JXXZ As Jxxz,QSJXXYSBH As Qsjxxysbh,QSJXXYS As Qsjxxys,QSZYYYSBH As Qszyyysbh,QSZYYYS As Qszyyys,WX_DCY As WxDcy,WX_DCSJ As WxDcsj,WX_CLY As WxCly,WX_CLSJ As WxClsj,WX_ZTY As WxZty,WX_ZTSJ As WxZtsj,WX_ZJY As WxZjy,WX_ZJSJ As WxZjsj,WX_WYDM As WxWydm,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj,AsText(geometry) as Wkt  FROM JZX " + " where "+filter;
            var records=connection.Query<Jzx>(sql);            
            return records;
        }
        public bool SaveJzx(Jzx record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveJzxes(List<Jzx> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteJzx(Jzx record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteJzx(long id)
        {
           Jzx record=GetJzx(id);
           if(record !=null)
           DeleteJzx(record);        
        }
        public void DeleteJzx(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Jzx> records=GetJzxes(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Jzx record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Jzxzj方法
        public Jzxzj GetJzxzj(long id)
        {
            string sql="SELECT  Id As ID,GLYSBH As Glysbh,YSDM As Ysdm,ZJNR As Zjnr,ZT As Zt,YS As Ys,BS As Bs,XZ As Xz,XHX As Xhx,KD As Kd,GD As Gd,ZJDZXJXZB As Zjdzxjxzb,ZJDZXJYZB As Zjdzxjyzb,ZJFX As Zjfx,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj,AsText(geometry) as Wkt  FROM JZXZJ " + " where id="+id.ToString();
            IEnumerable<Jzxzj> records=connection.Query<Jzxzj>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Jzxzj> GetJzxzjs(string filter)
        {
            string sql="SELECT  Id As ID,GLYSBH As Glysbh,YSDM As Ysdm,ZJNR As Zjnr,ZT As Zt,YS As Ys,BS As Bs,XZ As Xz,XHX As Xhx,KD As Kd,GD As Gd,ZJDZXJXZB As Zjdzxjxzb,ZJDZXJYZB As Zjdzxjyzb,ZJFX As Zjfx,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj,AsText(geometry) as Wkt  FROM JZXZJ " + " where "+filter;
            var records=connection.Query<Jzxzj>(sql);            
            return records;
        }
        public bool SaveJzxzj(Jzxzj record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveJzxzjs(List<Jzxzj> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteJzxzj(Jzxzj record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteJzxzj(long id)
        {
           Jzxzj record=GetJzxzj(id);
           if(record !=null)
           DeleteJzxzj(record);        
        }
        public void DeleteJzxzj(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Jzxzj> records=GetJzxzjs(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Jzxzj record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Ljz方法
        public Ljz GetLjz(long id)
        {
            string sql="SELECT  Id As ID,LJZH As Ljzh,ZRZH As Zrzh,YSDM As Ysdm,MPH As Mph,YCJZMJ As Ycjzmj,YCDXMJ As Ycdxmj,YCQTMJ As Ycqtmj,SCJZMJ As Scjzmj,SCDXMJ As Scdxmj,SCQTMJ As Scqtmj,JGRQ As Jgrq,FWJG1 As Fwjg1,FWJG2 As Fwjg2,FWJG3 As Fwjg3,JZWZT As Jzwzt,FWYT1 As Fwyt1,FWYT2 As Fwyt2,FWYT3 As Fwyt3,ZCS As Zcs,DSCS As Dscs,DXCS As Dxcs,BZ As Bz,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM LJZ " + " where id="+id.ToString();
            IEnumerable<Ljz> records=connection.Query<Ljz>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Ljz> GetLjzs(string filter)
        {
            string sql="SELECT  Id As ID,LJZH As Ljzh,ZRZH As Zrzh,YSDM As Ysdm,MPH As Mph,YCJZMJ As Ycjzmj,YCDXMJ As Ycdxmj,YCQTMJ As Ycqtmj,SCJZMJ As Scjzmj,SCDXMJ As Scdxmj,SCQTMJ As Scqtmj,JGRQ As Jgrq,FWJG1 As Fwjg1,FWJG2 As Fwjg2,FWJG3 As Fwjg3,JZWZT As Jzwzt,FWYT1 As Fwyt1,FWYT2 As Fwyt2,FWYT3 As Fwyt3,ZCS As Zcs,DSCS As Dscs,DXCS As Dxcs,BZ As Bz,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM LJZ " + " where "+filter;
            var records=connection.Query<Ljz>(sql);            
            return records;
        }
        public bool SaveLjz(Ljz record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveLjzs(List<Ljz> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteLjz(Ljz record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteLjz(long id)
        {
           Ljz record=GetLjz(id);
           if(record !=null)
           DeleteLjz(record);        
        }
        public void DeleteLjz(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Ljz> records=GetLjzs(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Ljz record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Lq方法
        public Lq GetLq(long id)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,BDCDYH As Bdcdyh,YWH As Ywh,QLLX As Qllx,DJLX As Djlx,DJYY As Djyy,FBF As Fbf,SYQMJ As Syqmj,LDSYQSSJ As Ldsyqssj,LDSYJSSJ As Ldsyjssj,LDSYQXZ As Ldsyqxz,SLLMSYQR1 As Sllmsyqr1,SLLMSYQR2 As Sllmsyqr2,ZYSZ As Zysz,ZS As Zs,LZ As Lz,QY As Qy,ZLND As Zlnd,LB As Lb,XB As Xb,XDM As Xdm,BDCQZH As Bdcqzh,QXDM As Qxdm,DJJG As Djjg,DBR As Dbr,DJSJ As Djsj,FJ As Fj,QSZT As Qszt,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM LQ " + " where id="+id.ToString();
            IEnumerable<Lq> records=connection.Query<Lq>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Lq> GetLqs(string filter)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,BDCDYH As Bdcdyh,YWH As Ywh,QLLX As Qllx,DJLX As Djlx,DJYY As Djyy,FBF As Fbf,SYQMJ As Syqmj,LDSYQSSJ As Ldsyqssj,LDSYJSSJ As Ldsyjssj,LDSYQXZ As Ldsyqxz,SLLMSYQR1 As Sllmsyqr1,SLLMSYQR2 As Sllmsyqr2,ZYSZ As Zysz,ZS As Zs,LZ As Lz,QY As Qy,ZLND As Zlnd,LB As Lb,XB As Xb,XDM As Xdm,BDCQZH As Bdcqzh,QXDM As Qxdm,DJJG As Djjg,DBR As Dbr,DJSJ As Djsj,FJ As Fj,QSZT As Qszt,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM LQ " + " where "+filter;
            var records=connection.Query<Lq>(sql);            
            return records;
        }
        public bool SaveLq(Lq record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveLqs(List<Lq> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteLq(Lq record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteLq(long id)
        {
           Lq record=GetLq(id);
           if(record !=null)
           DeleteLq(record);        
        }
        public void DeleteLq(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Lq> records=GetLqs(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Lq record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Mzdzw方法
        public Mzdzw GetMzdzw(long id)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,BDCDYH As Bdcdyh,ZDZHDM As Zdzhdm,MZDZWLX As Mzdzwlx,DZWMC As Dzwmc,MJDW As Mjdw,MJ As Mj,DAH As Dah,ZT As Zt,WX_DCY As WxDcy,WX_DCSJ As WxDcsj,WX_CLY As WxCly,WX_CLSJ As WxClsj,WX_ZTY As WxZty,WX_ZTSJ As WxZtsj,WX_ZJY As WxZjy,WX_ZJSJ As WxZjsj,WX_WYDM As WxWydm,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj,AsText(geometry) as Wkt  FROM MZDZW " + " where id="+id.ToString();
            IEnumerable<Mzdzw> records=connection.Query<Mzdzw>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Mzdzw> GetMzdzws(string filter)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,BDCDYH As Bdcdyh,ZDZHDM As Zdzhdm,MZDZWLX As Mzdzwlx,DZWMC As Dzwmc,MJDW As Mjdw,MJ As Mj,DAH As Dah,ZT As Zt,WX_DCY As WxDcy,WX_DCSJ As WxDcsj,WX_CLY As WxCly,WX_CLSJ As WxClsj,WX_ZTY As WxZty,WX_ZTSJ As WxZtsj,WX_ZJY As WxZjy,WX_ZJSJ As WxZjsj,WX_WYDM As WxWydm,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj,AsText(geometry) as Wkt  FROM MZDZW " + " where "+filter;
            var records=connection.Query<Mzdzw>(sql);            
            return records;
        }
        public bool SaveMzdzw(Mzdzw record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveMzdzws(List<Mzdzw> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteMzdzw(Mzdzw record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteMzdzw(long id)
        {
           Mzdzw record=GetMzdzw(id);
           if(record !=null)
           DeleteMzdzw(record);        
        }
        public void DeleteMzdzw(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Mzdzw> records=GetMzdzws(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Mzdzw record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Nydsyq方法
        public Nydsyq GetNydsyq(long id)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,BDCDYH As Bdcdyh,YWH As Ywh,QLLX As Qllx,DJLX As Djlx,DJYY As Djyy,ZL As Zl,FBFDM As Fbfdm,FBFMC As Fbfmc,CBMJ As Cbmj,CBQSSJ As Cbqssj,CBJSSJ As Cbjssj,TDSYQXZ As Tdsyqxz,SYTTLX As Syttlx,YZYFS As Yzyfs,CYZL As Cyzl,SYZCL As Syzcl,BDCQZH As Bdcqzh,QXDM As Qxdm,DJJG As Djjg,DBR As Dbr,DJSJ As Djsj,FJ As Fj,QSZT As Qszt,WX_DCY As WxDcy,WX_DCSJ As WxDcsj,WX_CLY As WxCly,WX_CLSJ As WxClsj,WX_ZTY As WxZty,WX_ZTSJ As WxZtsj,WX_ZJY As WxZjy,WX_ZJSJ As WxZjsj,WX_WYDM As WxWydm,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM NYDSYQ " + " where id="+id.ToString();
            IEnumerable<Nydsyq> records=connection.Query<Nydsyq>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Nydsyq> GetNydsyqs(string filter)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,BDCDYH As Bdcdyh,YWH As Ywh,QLLX As Qllx,DJLX As Djlx,DJYY As Djyy,ZL As Zl,FBFDM As Fbfdm,FBFMC As Fbfmc,CBMJ As Cbmj,CBQSSJ As Cbqssj,CBJSSJ As Cbjssj,TDSYQXZ As Tdsyqxz,SYTTLX As Syttlx,YZYFS As Yzyfs,CYZL As Cyzl,SYZCL As Syzcl,BDCQZH As Bdcqzh,QXDM As Qxdm,DJJG As Djjg,DBR As Dbr,DJSJ As Djsj,FJ As Fj,QSZT As Qszt,WX_DCY As WxDcy,WX_DCSJ As WxDcsj,WX_CLY As WxCly,WX_CLSJ As WxClsj,WX_ZTY As WxZty,WX_ZTSJ As WxZtsj,WX_ZJY As WxZjy,WX_ZJSJ As WxZjsj,WX_WYDM As WxWydm,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM NYDSYQ " + " where "+filter;
            var records=connection.Query<Nydsyq>(sql);            
            return records;
        }
        public bool SaveNydsyq(Nydsyq record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveNydsyqs(List<Nydsyq> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteNydsyq(Nydsyq record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteNydsyq(long id)
        {
           Nydsyq record=GetNydsyq(id);
           if(record !=null)
           DeleteNydsyq(record);        
        }
        public void DeleteNydsyq(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Nydsyq> records=GetNydsyqs(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Nydsyq record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Qlr方法
        public Qlr GetQlr(long id)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,BDCDYH As Bdcdyh,SXH As Sxh,QLRMC As Qlrmc,BDCQZH As Bdcqzh,QZYSXLH As Qzysxlh,SFCZR As Sfczr,ZJZL As Zjzl,ZJH As Zjh,FZJG As Fzjg,SSHY As Sshy,GJ As Gj,HJSZSS As Hjszss,XB As Xb,DH As Dh,DZ As Dz,YB As Yb,GZDW As Gzdw,DZYJ As Dzyj,QLRLX As Qlrlx,QLBL As Qlbl,GYFS As Gyfs,GYQK As Gyqk,BZ As Bz,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj,WX_WYDM As WxWydm FROM QLR " + " where id="+id.ToString();
            IEnumerable<Qlr> records=connection.Query<Qlr>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Qlr> GetQlrs(string filter)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,BDCDYH As Bdcdyh,SXH As Sxh,QLRMC As Qlrmc,BDCQZH As Bdcqzh,QZYSXLH As Qzysxlh,SFCZR As Sfczr,ZJZL As Zjzl,ZJH As Zjh,FZJG As Fzjg,SSHY As Sshy,GJ As Gj,HJSZSS As Hjszss,XB As Xb,DH As Dh,DZ As Dz,YB As Yb,GZDW As Gzdw,DZYJ As Dzyj,QLRLX As Qlrlx,QLBL As Qlbl,GYFS As Gyfs,GYQK As Gyqk,BZ As Bz,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj,WX_WYDM As WxWydm FROM QLR " + " where "+filter;
            var records=connection.Query<Qlr>(sql);            
            return records;
        }
        public bool SaveQlr(Qlr record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveQlrs(List<Qlr> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteQlr(Qlr record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteQlr(long id)
        {
           Qlr record=GetQlr(id);
           if(record !=null)
           DeleteQlr(record);        
        }
        public void DeleteQlr(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Qlr> records=GetQlrs(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Qlr record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Qtxgql方法
        public Qtxgql GetQtxgql(long id)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,BDCDYH As Bdcdyh,YWH As Ywh,QLLX As Qllx,DJLX As Djlx,DJYY As Djyy,QLQSSJ As Qlqssj,QLJSSJ As Qljssj,QSFS As Qsfs,SYLX As Sylx,QSL As Qsl,QSYT As Qsyt,KCMJ As Kcmj,KCFS As Kcfs,KCKZ As Kckz,SCGM As Scgm,BDCQZH As Bdcqzh,QXDM As Qxdm,DJJG As Djjg,DBR As Dbr,DJSJ As Djsj,FJ As Fj,FT As Ft,QSZT As Qszt,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM QTXGQL " + " where id="+id.ToString();
            IEnumerable<Qtxgql> records=connection.Query<Qtxgql>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Qtxgql> GetQtxgqls(string filter)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,BDCDYH As Bdcdyh,YWH As Ywh,QLLX As Qllx,DJLX As Djlx,DJYY As Djyy,QLQSSJ As Qlqssj,QLJSSJ As Qljssj,QSFS As Qsfs,SYLX As Sylx,QSL As Qsl,QSYT As Qsyt,KCMJ As Kcmj,KCFS As Kcfs,KCKZ As Kckz,SCGM As Scgm,BDCQZH As Bdcqzh,QXDM As Qxdm,DJJG As Djjg,DBR As Dbr,DJSJ As Djsj,FJ As Fj,FT As Ft,QSZT As Qszt,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM QTXGQL " + " where "+filter;
            var records=connection.Query<Qtxgql>(sql);            
            return records;
        }
        public bool SaveQtxgql(Qtxgql record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveQtxgqls(List<Qtxgql> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteQtxgql(Qtxgql record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteQtxgql(long id)
        {
           Qtxgql record=GetQtxgql(id);
           if(record !=null)
           DeleteQtxgql(record);        
        }
        public void DeleteQtxgql(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Qtxgql> records=GetQtxgqls(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Qtxgql record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Qxzd方法
        public Qxzd GetQxzd(long id)
        {
            string sql="SELECT  Id As ID,XZQHDM As Xzqhdm,XZQHMC As Xzqhmc,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM QXZD " + " where id="+id.ToString();
            IEnumerable<Qxzd> records=connection.Query<Qxzd>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Qxzd> GetQxzds(string filter)
        {
            string sql="SELECT  Id As ID,XZQHDM As Xzqhdm,XZQHMC As Xzqhmc,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM QXZD " + " where "+filter;
            var records=connection.Query<Qxzd>(sql);            
            return records;
        }
        public bool SaveQxzd(Qxzd record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveQxzds(List<Qxzd> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteQxzd(Qxzd record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteQxzd(long id)
        {
           Qxzd record=GetQxzd(id);
           if(record !=null)
           DeleteQxzd(record);        
        }
        public void DeleteQxzd(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Qxzd> records=GetQxzds(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Qxzd record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region R方法
        public R GetR(long id)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,QLRMC As Qlrmc,QLRPY As Qlrpy,PYSX As Pysx,ZJZL As Zjzl,ZJH As Zjh,FZJG As Fzjg,SSHY As Sshy,GJ As Gj,HJSZSS As Hjszss,XB As Xb,DH As Dh,DZ As Dz,YB As Yb,GZDW As Gzdw,DZYJ As Dzyj,BZ As Bz,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM R " + " where id="+id.ToString();
            IEnumerable<R> records=connection.Query<R>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<R> GetRS(string filter)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,QLRMC As Qlrmc,QLRPY As Qlrpy,PYSX As Pysx,ZJZL As Zjzl,ZJH As Zjh,FZJG As Fzjg,SSHY As Sshy,GJ As Gj,HJSZSS As Hjszss,XB As Xb,DH As Dh,DZ As Dz,YB As Yb,GZDW As Gzdw,DZYJ As Dzyj,BZ As Bz,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM R " + " where "+filter;
            var records=connection.Query<R>(sql);            
            return records;
        }
        public bool SaveR(R record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveRS(List<R> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteR(R record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteR(long id)
        {
           R record=GetR(id);
           if(record !=null)
           DeleteR(record);        
        }
        public void DeleteR(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<R> records=GetRS(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(R record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Sf方法
        public Sf GetSf(long id)
        {
            string sql="SELECT  Id As ID,YWH As Ywh,YSDM As Ysdm,JFRY As Jfry,JFRQ As Jfrq,SFKMMC As Sfkmmc,SFEWSF As Sfewsf,SFJS As Sfjs,SFLX As Sflx,YSJE As Ysje,ZKHYSJE As Zkhysje,SFRY As Sfry,SFRQ As Sfrq,FFF As Fff,SJFFR As Sjffr,SSJE As Ssje,SFDW As Sfdw,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM SF " + " where id="+id.ToString();
            IEnumerable<Sf> records=connection.Query<Sf>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Sf> GetSfs(string filter)
        {
            string sql="SELECT  Id As ID,YWH As Ywh,YSDM As Ysdm,JFRY As Jfry,JFRQ As Jfrq,SFKMMC As Sfkmmc,SFEWSF As Sfewsf,SFJS As Sfjs,SFLX As Sflx,YSJE As Ysje,ZKHYSJE As Zkhysje,SFRY As Sfry,SFRQ As Sfrq,FFF As Fff,SJFFR As Sjffr,SSJE As Ssje,SFDW As Sfdw,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM SF " + " where "+filter;
            var records=connection.Query<Sf>(sql);            
            return records;
        }
        public bool SaveSf(Sf record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveSfs(List<Sf> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteSf(Sf record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteSf(long id)
        {
           Sf record=GetSf(id);
           if(record !=null)
           DeleteSf(record);        
        }
        public void DeleteSf(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Sf> records=GetSfs(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Sf record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Sgsj方法
        public Sgsj GetSgsj(long id)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,SJWJM As Sjwjm,TWJM As Twjm,YSJWJM As Ysjwjm,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM SGSJ " + " where id="+id.ToString();
            IEnumerable<Sgsj> records=connection.Query<Sgsj>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Sgsj> GetSgsjs(string filter)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,SJWJM As Sjwjm,TWJM As Twjm,YSJWJM As Ysjwjm,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM SGSJ " + " where "+filter;
            var records=connection.Query<Sgsj>(sql);            
            return records;
        }
        public bool SaveSgsj(Sgsj record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveSgsjs(List<Sgsj> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteSgsj(Sgsj record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteSgsj(long id)
        {
           Sgsj record=GetSgsj(id);
           if(record !=null)
           DeleteSgsj(record);        
        }
        public void DeleteSgsj(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Sgsj> records=GetSgsjs(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Sgsj record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Sh方法
        public Sh GetSh(long id)
        {
            string sql="SELECT  Id As ID,YWH As Ywh,YSDM As Ysdm,JDMC As Jdmc,SXH As Sxh,SHRYXM As Shryxm,SHKSSJ As Shkssj,SHJSSJ As Shjssj,SHYJ As Shyj,CZJG As Czjg,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM SH " + " where id="+id.ToString();
            IEnumerable<Sh> records=connection.Query<Sh>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Sh> GetShes(string filter)
        {
            string sql="SELECT  Id As ID,YWH As Ywh,YSDM As Ysdm,JDMC As Jdmc,SXH As Sxh,SHRYXM As Shryxm,SHKSSJ As Shkssj,SHJSSJ As Shjssj,SHYJ As Shyj,CZJG As Czjg,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM SH " + " where "+filter;
            var records=connection.Query<Sh>(sql);            
            return records;
        }
        public bool SaveSh(Sh record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveShes(List<Sh> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteSh(Sh record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteSh(long id)
        {
           Sh record=GetSh(id);
           if(record !=null)
           DeleteSh(record);        
        }
        public void DeleteSh(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Sh> records=GetShes(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Sh record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Sj方法
        public Sj GetSj(long id)
        {
            string sql="SELECT  Id As ID,YWH As Ywh,YSDM As Ysdm,SJSJ As Sjsj,SJLX As Sjlx,SJMC As Sjmc,SJSL As Sjsl,SFSJSY As Sfsjsy,SFEWSJ As Sfewsj,SFBCSJ As Sfbcsj,YS As Ys,BZ As Bz,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM SJ " + " where id="+id.ToString();
            IEnumerable<Sj> records=connection.Query<Sj>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Sj> GetSjs(string filter)
        {
            string sql="SELECT  Id As ID,YWH As Ywh,YSDM As Ysdm,SJSJ As Sjsj,SJLX As Sjlx,SJMC As Sjmc,SJSL As Sjsl,SFSJSY As Sfsjsy,SFEWSJ As Sfewsj,SFBCSJ As Sfbcsj,YS As Ys,BZ As Bz,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM SJ " + " where "+filter;
            var records=connection.Query<Sj>(sql);            
            return records;
        }
        public bool SaveSj(Sj record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveSjs(List<Sj> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteSj(Sj record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteSj(long id)
        {
           Sj record=GetSj(id);
           if(record !=null)
           DeleteSj(record);        
        }
        public void DeleteSj(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Sj> records=GetSjs(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Sj record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Slsq方法
        public Slsq GetSlsq(long id)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,YWH As Ywh,DJDL As Djdl,DJXL As Djxl,SQZSBS As Sqzsbs,SQFBCZ As Sqfbcz,QXDM As Qxdm,SLRY As Slry,SLSJ As Slsj,ZL As Zl,TZRXM As Tzrxm,TZFS As Tzfs,TZRDH As Tzrdh,TZRYDDH As Tzryddh,TZRDZYJ As Tzrdzyj,SFWTAJ As Sfwtaj,JSSJ As Jssj,AJZT As Ajzt,BZ As Bz,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM SLSQ " + " where id="+id.ToString();
            IEnumerable<Slsq> records=connection.Query<Slsq>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Slsq> GetSlsqs(string filter)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,YWH As Ywh,DJDL As Djdl,DJXL As Djxl,SQZSBS As Sqzsbs,SQFBCZ As Sqfbcz,QXDM As Qxdm,SLRY As Slry,SLSJ As Slsj,ZL As Zl,TZRXM As Tzrxm,TZFS As Tzfs,TZRDH As Tzrdh,TZRYDDH As Tzryddh,TZRDZYJ As Tzrdzyj,SFWTAJ As Sfwtaj,JSSJ As Jssj,AJZT As Ajzt,BZ As Bz,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM SLSQ " + " where "+filter;
            var records=connection.Query<Slsq>(sql);            
            return records;
        }
        public bool SaveSlsq(Slsq record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveSlsqs(List<Slsq> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteSlsq(Slsq record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteSlsq(long id)
        {
           Slsq record=GetSlsq(id);
           if(record !=null)
           DeleteSlsq(record);        
        }
        public void DeleteSlsq(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Slsq> records=GetSlsqs(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Slsq record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Sqr方法
        public Sqr GetSqr(long id)
        {
            string sql="SELECT  Id As ID,YWH As Ywh,YSDM As Ysdm,QLRMC As Qlrmc,QLRZJZL As Qlrzjzl,QLRZJH As Qlrzjh,QLRTXDZ As Qlrtxdz,QLRYB As Qlryb,QLRFRMC As Qlrfrmc,QLRFRDH As Qlrfrdh,QLRDLRMC As Qlrdlrmc,QLRDLRDH As Qlrdlrdh,QLRDLJG As Qlrdljg,YWRMC As Ywrmc,YWRZJZL As Ywrzjzl,YWRZJH As Ywrzjh,YWRTXDZ As Ywrtxdz,YWRYB As Ywryb,YWRFRMC As Ywrfrmc,YWRFRDH As Ywrfrdh,YWRDLRMC As Ywrdlrmc,YWRDLRDH As Ywrdlrdh,YWRDLJG As Ywrdljg,BZ As Bz,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM SQR " + " where id="+id.ToString();
            IEnumerable<Sqr> records=connection.Query<Sqr>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Sqr> GetSqrs(string filter)
        {
            string sql="SELECT  Id As ID,YWH As Ywh,YSDM As Ysdm,QLRMC As Qlrmc,QLRZJZL As Qlrzjzl,QLRZJH As Qlrzjh,QLRTXDZ As Qlrtxdz,QLRYB As Qlryb,QLRFRMC As Qlrfrmc,QLRFRDH As Qlrfrdh,QLRDLRMC As Qlrdlrmc,QLRDLRDH As Qlrdlrdh,QLRDLJG As Qlrdljg,YWRMC As Ywrmc,YWRZJZL As Ywrzjzl,YWRZJH As Ywrzjh,YWRTXDZ As Ywrtxdz,YWRYB As Ywryb,YWRFRMC As Ywrfrmc,YWRFRDH As Ywrfrdh,YWRDLRMC As Ywrdlrmc,YWRDLRDH As Ywrdlrdh,YWRDLJG As Ywrdljg,BZ As Bz,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM SQR " + " where "+filter;
            var records=connection.Query<Sqr>(sql);            
            return records;
        }
        public bool SaveSqr(Sqr record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveSqrs(List<Sqr> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteSqr(Sqr record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteSqr(long id)
        {
           Sqr record=GetSqr(id);
           if(record !=null)
           DeleteSqr(record);        
        }
        public void DeleteSqr(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Sqr> records=GetSqrs(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Sqr record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Sz方法
        public Sz GetSz(long id)
        {
            string sql="SELECT  Id As ID,YWH As Ywh,YSDM As Ysdm,SZMC As Szmc,SZZH As Szzh,YSXLH As Ysxlh,SZRY As Szry,SZSJ As Szsj,BZ As Bz,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM SZ " + " where id="+id.ToString();
            IEnumerable<Sz> records=connection.Query<Sz>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Sz> GetSzs(string filter)
        {
            string sql="SELECT  Id As ID,YWH As Ywh,YSDM As Ysdm,SZMC As Szmc,SZZH As Szzh,YSXLH As Ysxlh,SZRY As Szry,SZSJ As Szsj,BZ As Bz,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM SZ " + " where "+filter;
            var records=connection.Query<Sz>(sql);            
            return records;
        }
        public bool SaveSz(Sz record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveSzs(List<Sz> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteSz(Sz record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteSz(long id)
        {
           Sz record=GetSz(id);
           if(record !=null)
           DeleteSz(record);        
        }
        public void DeleteSz(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Sz> records=GetSzs(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Sz record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Tdsyq方法
        public Tdsyq GetTdsyq(long id)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,ZDDM As Zddm,BDCDYH As Bdcdyh,YWH As Ywh,QLLX As Qllx,DJLX As Djlx,DJYY As Djyy,MJDW As Mjdw,NYDMJ As Nydmj,GDMJ As Gdmj,LDMJ As Ldmj,CDMJ As Cdmj,QTNYDMJ As Qtnydmj,JSYDMJ As Jsydmj,WLYDMJ As Wlydmj,BDCQZH As Bdcqzh,QXDM As Qxdm,DJJG As Djjg,DBR As Dbr,DJSJ As Djsj,FJ As Fj,QSZT As Qszt,WX_DCY As WxDcy,WX_DCSJ As WxDcsj,WX_CLY As WxCly,WX_CLSJ As WxClsj,WX_ZTY As WxZty,WX_ZTSJ As WxZtsj,WX_ZJY As WxZjy,WX_ZJSJ As WxZjsj,WX_WYDM As WxWydm,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM TDSYQ " + " where id="+id.ToString();
            IEnumerable<Tdsyq> records=connection.Query<Tdsyq>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Tdsyq> GetTdsyqs(string filter)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,ZDDM As Zddm,BDCDYH As Bdcdyh,YWH As Ywh,QLLX As Qllx,DJLX As Djlx,DJYY As Djyy,MJDW As Mjdw,NYDMJ As Nydmj,GDMJ As Gdmj,LDMJ As Ldmj,CDMJ As Cdmj,QTNYDMJ As Qtnydmj,JSYDMJ As Jsydmj,WLYDMJ As Wlydmj,BDCQZH As Bdcqzh,QXDM As Qxdm,DJJG As Djjg,DBR As Dbr,DJSJ As Djsj,FJ As Fj,QSZT As Qszt,WX_DCY As WxDcy,WX_DCSJ As WxDcsj,WX_CLY As WxCly,WX_CLSJ As WxClsj,WX_ZTY As WxZty,WX_ZTSJ As WxZtsj,WX_ZJY As WxZjy,WX_ZJSJ As WxZjsj,WX_WYDM As WxWydm,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM TDSYQ " + " where "+filter;
            var records=connection.Query<Tdsyq>(sql);            
            return records;
        }
        public bool SaveTdsyq(Tdsyq record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveTdsyqs(List<Tdsyq> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteTdsyq(Tdsyq record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteTdsyq(long id)
        {
           Tdsyq record=GetTdsyq(id);
           if(record !=null)
           DeleteTdsyq(record);        
        }
        public void DeleteTdsyq(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Tdsyq> records=GetTdsyqs(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Tdsyq record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Xzdzw方法
        public Xzdzw GetXzdzw(long id)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,BDCDYH As Bdcdyh,ZDZHDM As Zdzhdm,XZDZWLX As Xzdzwlx,DZWMC As Dzwmc,MJDW As Mjdw,MJ As Mj,DAH As Dah,ZT As Zt,WX_DCY As WxDcy,WX_DCSJ As WxDcsj,WX_CLY As WxCly,WX_CLSJ As WxClsj,WX_ZTY As WxZty,WX_ZTSJ As WxZtsj,WX_ZJY As WxZjy,WX_ZJSJ As WxZjsj,WX_WYDM As WxWydm,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj,AsText(geometry) as Wkt  FROM XZDZW " + " where id="+id.ToString();
            IEnumerable<Xzdzw> records=connection.Query<Xzdzw>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Xzdzw> GetXzdzws(string filter)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,BDCDYH As Bdcdyh,ZDZHDM As Zdzhdm,XZDZWLX As Xzdzwlx,DZWMC As Dzwmc,MJDW As Mjdw,MJ As Mj,DAH As Dah,ZT As Zt,WX_DCY As WxDcy,WX_DCSJ As WxDcsj,WX_CLY As WxCly,WX_CLSJ As WxClsj,WX_ZTY As WxZty,WX_ZTSJ As WxZtsj,WX_ZJY As WxZjy,WX_ZJSJ As WxZjsj,WX_WYDM As WxWydm,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj,AsText(geometry) as Wkt  FROM XZDZW " + " where "+filter;
            var records=connection.Query<Xzdzw>(sql);            
            return records;
        }
        public bool SaveXzdzw(Xzdzw record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveXzdzws(List<Xzdzw> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteXzdzw(Xzdzw record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteXzdzw(long id)
        {
           Xzdzw record=GetXzdzw(id);
           if(record !=null)
           DeleteXzdzw(record);        
        }
        public void DeleteXzdzw(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Xzdzw> records=GetXzdzws(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Xzdzw record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Xzq方法
        public Xzq GetXzq(long id)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,XZQDM As Xzqdm,XZQMC As Xzqmc,XZQMJ As Xzqmj,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj,AsText(geometry) as Wkt  FROM XZQ " + " where id="+id.ToString();
            IEnumerable<Xzq> records=connection.Query<Xzq>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Xzq> GetXzqs(string filter)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,XZQDM As Xzqdm,XZQMC As Xzqmc,XZQMJ As Xzqmj,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj,AsText(geometry) as Wkt  FROM XZQ " + " where "+filter;
            var records=connection.Query<Xzq>(sql);            
            return records;
        }
        public bool SaveXzq(Xzq record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveXzqs(List<Xzq> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteXzq(Xzq record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteXzq(long id)
        {
           Xzq record=GetXzq(id);
           if(record !=null)
           DeleteXzq(record);        
        }
        public void DeleteXzq(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Xzq> records=GetXzqs(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Xzq record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Xzqjx方法
        public Xzqjx GetXzqjx(long id)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,JXLX As Jxlx,JXXZ As Jxxz,JXSM As Jxsm,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj,AsText(geometry) as Wkt  FROM XZQJX " + " where id="+id.ToString();
            IEnumerable<Xzqjx> records=connection.Query<Xzqjx>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Xzqjx> GetXzqjxes(string filter)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,JXLX As Jxlx,JXXZ As Jxxz,JXSM As Jxsm,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj,AsText(geometry) as Wkt  FROM XZQJX " + " where "+filter;
            var records=connection.Query<Xzqjx>(sql);            
            return records;
        }
        public bool SaveXzqjx(Xzqjx record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveXzqjxes(List<Xzqjx> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteXzqjx(Xzqjx record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteXzqjx(long id)
        {
           Xzqjx record=GetXzqjx(id);
           if(record !=null)
           DeleteXzqjx(record);        
        }
        public void DeleteXzqjx(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Xzqjx> records=GetXzqjxes(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Xzqjx record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Xzqzj方法
        public Xzqzj GetXzqzj(long id)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,ZJNR As Zjnr,ZT As Zt,YS As Ys,BS As Bs,XZ As Xz,XHX As Xhx,KD As Kd,GD As Gd,ZJDZXJXZB As Zjdzxjxzb,ZJDZXJYZB As Zjdzxjyzb,ZJFX As Zjfx,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj,AsText(geometry) as Wkt  FROM XZQZJ " + " where id="+id.ToString();
            IEnumerable<Xzqzj> records=connection.Query<Xzqzj>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Xzqzj> GetXzqzjs(string filter)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,ZJNR As Zjnr,ZT As Zt,YS As Ys,BS As Bs,XZ As Xz,XHX As Xhx,KD As Kd,GD As Gd,ZJDZXJXZB As Zjdzxjxzb,ZJDZXJYZB As Zjdzxjyzb,ZJFX As Zjfx,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj,AsText(geometry) as Wkt  FROM XZQZJ " + " where "+filter;
            var records=connection.Query<Xzqzj>(sql);            
            return records;
        }
        public bool SaveXzqzj(Xzqzj record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveXzqzjs(List<Xzqzj> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteXzqzj(Xzqzj record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteXzqzj(long id)
        {
           Xzqzj record=GetXzqzj(id);
           if(record !=null)
           DeleteXzqzj(record);        
        }
        public void DeleteXzqzj(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Xzqzj> records=GetXzqzjs(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Xzqzj record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Ygdj方法
        public Ygdj GetYgdj(long id)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,BDCDYH As Bdcdyh,YWH As Ywh,BDCZL As Bdczl,YWR As Ywr,YWRZJZL As Ywrzjzl,YWRZJH As Ywrzjh,YGDJZL As Ygdjzl,DJLX As Djlx,DJYY As Djyy,TDSYQR As Tdsyqr,GHYT As Ghyt,FWXZ As Fwxz,FWJG As Fwjg,SZC As Szc,ZCS As Zcs,JZMJ As Jzmj,QDJG As Qdjg,BDCDJZMH As Bdcdjzmh,QXDM As Qxdm,DJJG As Djjg,DBR As Dbr,DJSJ As Djsj,FJ As Fj,QSZT As Qszt,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM YGDJ " + " where id="+id.ToString();
            IEnumerable<Ygdj> records=connection.Query<Ygdj>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Ygdj> GetYgdjs(string filter)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,BDCDYH As Bdcdyh,YWH As Ywh,BDCZL As Bdczl,YWR As Ywr,YWRZJZL As Ywrzjzl,YWRZJH As Ywrzjh,YGDJZL As Ygdjzl,DJLX As Djlx,DJYY As Djyy,TDSYQR As Tdsyqr,GHYT As Ghyt,FWXZ As Fwxz,FWJG As Fwjg,SZC As Szc,ZCS As Zcs,JZMJ As Jzmj,QDJG As Qdjg,BDCDJZMH As Bdcdjzmh,QXDM As Qxdm,DJJG As Djjg,DBR As Dbr,DJSJ As Djsj,FJ As Fj,QSZT As Qszt,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM YGDJ " + " where "+filter;
            var records=connection.Query<Ygdj>(sql);            
            return records;
        }
        public bool SaveYgdj(Ygdj record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveYgdjs(List<Ygdj> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteYgdj(Ygdj record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteYgdj(long id)
        {
           Ygdj record=GetYgdj(id);
           if(record !=null)
           DeleteYgdj(record);        
        }
        public void DeleteYgdj(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Ygdj> records=GetYgdjs(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Ygdj record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Yhydzb方法
        public Yhydzb GetYhydzb(long id)
        {
            string sql="SELECT  Id As ID,ZHHDDM As Zhhddm,XH As Xh,BW As Bw,DJ As Dj,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM YHYDZB " + " where id="+id.ToString();
            IEnumerable<Yhydzb> records=connection.Query<Yhydzb>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Yhydzb> GetYhydzbs(string filter)
        {
            string sql="SELECT  Id As ID,ZHHDDM As Zhhddm,XH As Xh,BW As Bw,DJ As Dj,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM YHYDZB " + " where "+filter;
            var records=connection.Query<Yhydzb>(sql);            
            return records;
        }
        public bool SaveYhydzb(Yhydzb record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveYhydzbs(List<Yhydzb> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteYhydzb(Yhydzb record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteYhydzb(long id)
        {
           Yhydzb record=GetYhydzb(id);
           if(record !=null)
           DeleteYhydzb(record);        
        }
        public void DeleteYhydzb(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Yhydzb> records=GetYhydzbs(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Yhydzb record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Yhzk方法
        public Yhzk GetYhzk(long id)
        {
            string sql="SELECT  Id As ID,ZHDM As Zhdm,YHFS As Yhfs,YHMJ As Yhmj,JTYT As Jtyt,SYJSE As Syjse,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM YHZK " + " where id="+id.ToString();
            IEnumerable<Yhzk> records=connection.Query<Yhzk>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Yhzk> GetYhzks(string filter)
        {
            string sql="SELECT  Id As ID,ZHDM As Zhdm,YHFS As Yhfs,YHMJ As Yhmj,JTYT As Jtyt,SYJSE As Syjse,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM YHZK " + " where "+filter;
            var records=connection.Query<Yhzk>(sql);            
            return records;
        }
        public bool SaveYhzk(Yhzk record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveYhzks(List<Yhzk> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteYhzk(Yhzk record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteYhzk(long id)
        {
           Yhzk record=GetYhzk(id);
           if(record !=null)
           DeleteYhzk(record);        
        }
        public void DeleteYhzk(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Yhzk> records=GetYhzks(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Yhzk record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Yydj方法
        public Yydj GetYydj(long id)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,BDCDYH As Bdcdyh,YWH As Ywh,YYSX As Yysx,BDCDJZMH As Bdcdjzmh,QXDM As Qxdm,DJJG As Djjg,DBR As Dbr,DJSJ As Djsj,ZXYYYWH As Zxyyywh,ZXYYYY As Zxyyyy,ZXYYDBR As Zxyydbr,ZXYYDJSJ As Zxyydjsj,FJ As Fj,QSZT As Qszt,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM YYDJ " + " where id="+id.ToString();
            IEnumerable<Yydj> records=connection.Query<Yydj>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Yydj> GetYydjs(string filter)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,BDCDYH As Bdcdyh,YWH As Ywh,YYSX As Yysx,BDCDJZMH As Bdcdjzmh,QXDM As Qxdm,DJJG As Djjg,DBR As Dbr,DJSJ As Djsj,ZXYYYWH As Zxyyywh,ZXYYYY As Zxyyyy,ZXYYDBR As Zxyydbr,ZXYYDJSJ As Zxyydjsj,FJ As Fj,QSZT As Qszt,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM YYDJ " + " where "+filter;
            var records=connection.Query<Yydj>(sql);            
            return records;
        }
        public bool SaveYydj(Yydj record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveYydjs(List<Yydj> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteYydj(Yydj record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteYydj(long id)
        {
           Yydj record=GetYydj(id);
           if(record !=null)
           DeleteYydj(record);        
        }
        public void DeleteYydj(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Yydj> records=GetYydjs(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Yydj record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Zdbhqk方法
        public Zdbhqk GetZdbhqk(long id)
        {
            string sql="SELECT  Id As ID,ZDDM As Zddm,BHYY As Bhyy,BHNR As Bhnr,DJSJ As Djsj,DBR As Dbr,FJ As Fj,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj,WX_WYDM As WxWydm FROM ZDBHQK " + " where id="+id.ToString();
            IEnumerable<Zdbhqk> records=connection.Query<Zdbhqk>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Zdbhqk> GetZdbhqks(string filter)
        {
            string sql="SELECT  Id As ID,ZDDM As Zddm,BHYY As Bhyy,BHNR As Bhnr,DJSJ As Djsj,DBR As Dbr,FJ As Fj,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj,WX_WYDM As WxWydm FROM ZDBHQK " + " where "+filter;
            var records=connection.Query<Zdbhqk>(sql);            
            return records;
        }
        public bool SaveZdbhqk(Zdbhqk record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveZdbhqks(List<Zdbhqk> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteZdbhqk(Zdbhqk record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteZdbhqk(long id)
        {
           Zdbhqk record=GetZdbhqk(id);
           if(record !=null)
           DeleteZdbhqk(record);        
        }
        public void DeleteZdbhqk(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Zdbhqk> records=GetZdbhqks(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Zdbhqk record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Zdjbxx方法
        public Zdjbxx GetZdjbxx(long id)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,ZDDM As Zddm,BDCDYH As Bdcdyh,ZDTZM As Zdtzm,ZL As Zl,ZDMJ As Zdmj,MJDW As Mjdw,YT As Yt,DJ As Dj,JG As Jg,QLLX As Qllx,QLXZ As Qlxz,QLSDFS As Qlsdfs,RJL As Rjl,JZMD As Jzmd,JZXG As Jzxg,ZDSZD As Zdszd,ZDSZN As Zdszn,ZDSZX As Zdszx,ZDSZB As Zdszb,ZDT As Zdt,TFH As Tfh,DJH As Djh,DAH As Dah,BZ As Bz,ZT As Zt,WX_DCY As WxDcy,WX_DCSJ As WxDcsj,WX_CLY As WxCly,WX_CLSJ As WxClsj,WX_ZTY As WxZty,WX_ZTSJ As WxZtsj,WX_ZJY As WxZjy,WX_ZJSJ As WxZjsj,WX_WYDM As WxWydm,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj,AsText(geometry) as Wkt  FROM ZDJBXX " + " where id="+id.ToString();
            IEnumerable<Zdjbxx> records=connection.Query<Zdjbxx>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Zdjbxx> GetZdjbxxes(string filter)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,ZDDM As Zddm,BDCDYH As Bdcdyh,ZDTZM As Zdtzm,ZL As Zl,ZDMJ As Zdmj,MJDW As Mjdw,YT As Yt,DJ As Dj,JG As Jg,QLLX As Qllx,QLXZ As Qlxz,QLSDFS As Qlsdfs,RJL As Rjl,JZMD As Jzmd,JZXG As Jzxg,ZDSZD As Zdszd,ZDSZN As Zdszn,ZDSZX As Zdszx,ZDSZB As Zdszb,ZDT As Zdt,TFH As Tfh,DJH As Djh,DAH As Dah,BZ As Bz,ZT As Zt,WX_DCY As WxDcy,WX_DCSJ As WxDcsj,WX_CLY As WxCly,WX_CLSJ As WxClsj,WX_ZTY As WxZty,WX_ZTSJ As WxZtsj,WX_ZJY As WxZjy,WX_ZJSJ As WxZjsj,WX_WYDM As WxWydm,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj,AsText(geometry) as Wkt  FROM ZDJBXX " + " where "+filter;
            var records=connection.Query<Zdjbxx>(sql);            
            return records;
        }
        public bool SaveZdjbxx(Zdjbxx record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveZdjbxxes(List<Zdjbxx> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteZdjbxx(Zdjbxx record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteZdjbxx(long id)
        {
           Zdjbxx record=GetZdjbxx(id);
           if(record !=null)
           DeleteZdjbxx(record);        
        }
        public void DeleteZdjbxx(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Zdjbxx> records=GetZdjbxxes(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Zdjbxx record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Zdjbxxzj方法
        public Zdjbxxzj GetZdjbxxzj(long id)
        {
            string sql="SELECT  Id As ID,GLYSDM As Glysdm,YSDM As Ysdm,ZJNR As Zjnr,ZT As Zt,YS As Ys,BS As Bs,XZ As Xz,XHX As Xhx,KD As Kd,GD As Gd,ZJDZXJXZB As Zjdzxjxzb,ZJDZXJYZB As Zjdzxjyzb,ZJFX As Zjfx,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj,AsText(geometry) as Wkt  FROM ZDJBXXZJ " + " where id="+id.ToString();
            IEnumerable<Zdjbxxzj> records=connection.Query<Zdjbxxzj>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Zdjbxxzj> GetZdjbxxzjs(string filter)
        {
            string sql="SELECT  Id As ID,GLYSDM As Glysdm,YSDM As Ysdm,ZJNR As Zjnr,ZT As Zt,YS As Ys,BS As Bs,XZ As Xz,XHX As Xhx,KD As Kd,GD As Gd,ZJDZXJXZB As Zjdzxjxzb,ZJDZXJYZB As Zjdzxjyzb,ZJFX As Zjfx,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj,AsText(geometry) as Wkt  FROM ZDJBXXZJ " + " where "+filter;
            var records=connection.Query<Zdjbxxzj>(sql);            
            return records;
        }
        public bool SaveZdjbxxzj(Zdjbxxzj record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveZdjbxxzjs(List<Zdjbxxzj> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteZdjbxxzj(Zdjbxxzj record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteZdjbxxzj(long id)
        {
           Zdjbxxzj record=GetZdjbxxzj(id);
           if(record !=null)
           DeleteZdjbxxzj(record);        
        }
        public void DeleteZdjbxxzj(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Zdjbxxzj> records=GetZdjbxxzjs(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Zdjbxxzj record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Zdtojzd方法
        public Zdtojzd GetZdtojzd(long id)
        {
            string sql="SELECT  Id As ID,ZD_WYDM As ZdWydm,JZD_WYDM As JzdWydm,SXH As Sxh,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM ZDTOJZD " + " where id="+id.ToString();
            IEnumerable<Zdtojzd> records=connection.Query<Zdtojzd>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Zdtojzd> GetZdtojzds(string filter)
        {
            string sql="SELECT  Id As ID,ZD_WYDM As ZdWydm,JZD_WYDM As JzdWydm,SXH As Sxh,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM ZDTOJZD " + " where "+filter;
            var records=connection.Query<Zdtojzd>(sql);            
            return records;
        }
        public bool SaveZdtojzd(Zdtojzd record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveZdtojzds(List<Zdtojzd> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteZdtojzd(Zdtojzd record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteZdtojzd(long id)
        {
           Zdtojzd record=GetZdtojzd(id);
           if(record !=null)
           DeleteZdtojzd(record);        
        }
        public void DeleteZdtojzd(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Zdtojzd> records=GetZdtojzds(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Zdtojzd record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Zdtojzx方法
        public Zdtojzx GetZdtojzx(long id)
        {
            string sql="SELECT  Id As ID,ZD_WYDM As ZdWydm,JZX_WYDM As JzxWydm,SXH As Sxh,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM ZDTOJZX " + " where id="+id.ToString();
            IEnumerable<Zdtojzx> records=connection.Query<Zdtojzx>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Zdtojzx> GetZdtojzxes(string filter)
        {
            string sql="SELECT  Id As ID,ZD_WYDM As ZdWydm,JZX_WYDM As JzxWydm,SXH As Sxh,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj FROM ZDTOJZX " + " where "+filter;
            var records=connection.Query<Zdtojzx>(sql);            
            return records;
        }
        public bool SaveZdtojzx(Zdtojzx record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveZdtojzxes(List<Zdtojzx> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteZdtojzx(Zdtojzx record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteZdtojzx(long id)
        {
           Zdtojzx record=GetZdtojzx(id);
           if(record !=null)
           DeleteZdtojzx(record);        
        }
        public void DeleteZdtojzx(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Zdtojzx> records=GetZdtojzxes(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Zdtojzx record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Zhbhqk方法
        public Zhbhqk GetZhbhqk(long id)
        {
            string sql="SELECT  Id As ID,ZHDM As Zhdm,BHYY As Bhyy,BHNR As Bhnr,DJSJ As Djsj,DBR As Dbr,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj,WX_WYDM As WxWydm FROM ZHBHQK " + " where id="+id.ToString();
            IEnumerable<Zhbhqk> records=connection.Query<Zhbhqk>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Zhbhqk> GetZhbhqks(string filter)
        {
            string sql="SELECT  Id As ID,ZHDM As Zhdm,BHYY As Bhyy,BHNR As Bhnr,DJSJ As Djsj,DBR As Dbr,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj,WX_WYDM As WxWydm FROM ZHBHQK " + " where "+filter;
            var records=connection.Query<Zhbhqk>(sql);            
            return records;
        }
        public bool SaveZhbhqk(Zhbhqk record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveZhbhqks(List<Zhbhqk> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteZhbhqk(Zhbhqk record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteZhbhqk(long id)
        {
           Zhbhqk record=GetZhbhqk(id);
           if(record !=null)
           DeleteZhbhqk(record);        
        }
        public void DeleteZhbhqk(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Zhbhqk> records=GetZhbhqks(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Zhbhqk record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Zhjbxx方法
        public Zhjbxx GetZhjbxx(long id)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,ZHDM As Zhdm,BDCDYH As Bdcdyh,ZHTZM As Zhtzm,XMMC As Xmmc,XMXZ As Xmxz,YHZMJ As Yhzmj,ZHMJ As Zhmj,DB As Db,ZHAX As Zhax,YHLXA As Yhlxa,YHLXB As Yhlxb,YHWZSM As Yhwzsm,HDMC As Hdmc,HDDM As Hddm,YDFW As Ydfw,YDMJ As Ydmj,HDWZ As Hdwz,HDYT As Hdyt,ZHT As Zht,DAH As Dah,ZT As Zt,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj,AsText(geometry) as Wkt  FROM ZHJBXX " + " where id="+id.ToString();
            IEnumerable<Zhjbxx> records=connection.Query<Zhjbxx>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Zhjbxx> GetZhjbxxes(string filter)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,ZHDM As Zhdm,BDCDYH As Bdcdyh,ZHTZM As Zhtzm,XMMC As Xmmc,XMXZ As Xmxz,YHZMJ As Yhzmj,ZHMJ As Zhmj,DB As Db,ZHAX As Zhax,YHLXA As Yhlxa,YHLXB As Yhlxb,YHWZSM As Yhwzsm,HDMC As Hdmc,HDDM As Hddm,YDFW As Ydfw,YDMJ As Ydmj,HDWZ As Hdwz,HDYT As Hdyt,ZHT As Zht,DAH As Dah,ZT As Zt,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj,AsText(geometry) as Wkt  FROM ZHJBXX " + " where "+filter;
            var records=connection.Query<Zhjbxx>(sql);            
            return records;
        }
        public bool SaveZhjbxx(Zhjbxx record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveZhjbxxes(List<Zhjbxx> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteZhjbxx(Zhjbxx record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteZhjbxx(long id)
        {
           Zhjbxx record=GetZhjbxx(id);
           if(record !=null)
           DeleteZhjbxx(record);        
        }
        public void DeleteZhjbxx(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Zhjbxx> records=GetZhjbxxes(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Zhjbxx record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Zj方法
        public Zj GetZj(long id)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,ZJNR As Zjnr,ZT As Zt,YS As Ys,BS As Bs,XZ As Xz,XHX As Xhx,KD As Kd,GD As Gd,ZJDZXJXZB As Zjdzxjxzb,ZJDZXJYZB As Zjdzxjyzb,ZJFX As Zjfx,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj,AsText(geometry) as Wkt  FROM ZJ " + " where id="+id.ToString();
            IEnumerable<Zj> records=connection.Query<Zj>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Zj> GetZjs(string filter)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,ZJNR As Zjnr,ZT As Zt,YS As Ys,BS As Bs,XZ As Xz,XHX As Xhx,KD As Kd,GD As Gd,ZJDZXJXZB As Zjdzxjxzb,ZJDZXJYZB As Zjdzxjyzb,ZJFX As Zjfx,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj,AsText(geometry) as Wkt  FROM ZJ " + " where "+filter;
            var records=connection.Query<Zj>(sql);            
            return records;
        }
        public bool SaveZj(Zj record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveZjs(List<Zj> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteZj(Zj record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteZj(long id)
        {
           Zj record=GetZj(id);
           if(record !=null)
           DeleteZj(record);        
        }
        public void DeleteZj(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Zj> records=GetZjs(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Zj record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        #region Zrz方法
        public Zrz GetZrz(long id)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,BDCDYH As Bdcdyh,ZDDM As Zddm,ZRZH As Zrzh,XMMC As Xmmc,JZWMC As Jzwmc,JGRQ As Jgrq,JZWGD As Jzwgd,ZZDMJ As Zzdmj,ZYDMJ As Zydmj,YCJZMJ As Ycjzmj,SCJZMJ As Scjzmj,ZCS As Zcs,DSCS As Dscs,DXCS As Dxcs,DXSD As Dxsd,GHYT As Ghyt,FWJG As Fwjg,ZTS As Zts,JZWJBYT As Jzwjbyt,DAH As Dah,BZ As Bz,ZT As Zt,WX_DCY As WxDcy,WX_DCSJ As WxDcsj,WX_CLY As WxCly,WX_CLSJ As WxClsj,WX_ZTY As WxZty,WX_ZTSJ As WxZtsj,WX_ZJY As WxZjy,WX_ZJSJ As WxZjsj,WX_WYDM As WxWydm,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj,AsText(geometry) as Wkt  FROM ZRZ " + " where id="+id.ToString();
            IEnumerable<Zrz> records=connection.Query<Zrz>(sql);
            if(records != null && records.Count()>0)
            {
                return records.First();
            }
            return null;
        }
        
        public IEnumerable<Zrz> GetZrzs(string filter)
        {
            string sql="SELECT  Id As ID,YSDM As Ysdm,BDCDYH As Bdcdyh,ZDDM As Zddm,ZRZH As Zrzh,XMMC As Xmmc,JZWMC As Jzwmc,JGRQ As Jgrq,JZWGD As Jzwgd,ZZDMJ As Zzdmj,ZYDMJ As Zydmj,YCJZMJ As Ycjzmj,SCJZMJ As Scjzmj,ZCS As Zcs,DSCS As Dscs,DXCS As Dxcs,DXSD As Dxsd,GHYT As Ghyt,FWJG As Fwjg,ZTS As Zts,JZWJBYT As Jzwjbyt,DAH As Dah,BZ As Bz,ZT As Zt,WX_DCY As WxDcy,WX_DCSJ As WxDcsj,WX_CLY As WxCly,WX_CLSJ As WxClsj,WX_ZTY As WxZty,WX_ZTSJ As WxZtsj,WX_ZJY As WxZjy,WX_ZJSJ As WxZjsj,WX_WYDM As WxWydm,DatabaseId As DatabaseID,FLAGS As Flags,XGR As Xgr,XGSJ As Xgsj,AsText(geometry) as Wkt  FROM ZRZ " + " where "+filter;
            var records=connection.Query<Zrz>(sql);            
            return records;
        }
        public bool SaveZrz(Zrz record)
        {
            bool retVal= record.Save(this);
            if(retVal)
            {
                OnEntityChanged(EntityOperationType.Save, record as IEntity);
                
            }
            return retVal;
        }
        public void SaveZrzs(List<Zrz> records)
        {
            List<IEntity> backList=new List<IEntity>();
            SQLiteTransaction tran = connection.BeginTransaction();
            foreach(var rec in records)
            {
                rec.Save(this);
                backList.Add(rec as IEntity);
            }
            tran.Commit();
            tran.Dispose();
            OnEntityChanged(EntityOperationType.Save, backList);    
        }
        public void DeleteZrz(Zrz record)
        {
            record.Delete(this);
            OnEntityChanged(EntityOperationType.Delete, record as IEntity); 
        }
        public void DeleteZrz(long id)
        {
           Zrz record=GetZrz(id);
           if(record !=null)
           DeleteZrz(record);        
        }
        public void DeleteZrz(string filter)
        {
           using(SQLiteCommand command=new SQLiteCommand(connection))
            {
                List<IEntity> backList=new List<IEntity>();
                IEnumerable<Zrz> records=GetZrzs(filter);
                if(records!=null && records.Count()>0)
                {
                    foreach(Zrz record in records)
                    {
                        record.Delete(this);
                        backList.Add(record as IEntity);
                    }
                    OnEntityChanged(EntityOperationType.Delete, backList); 
                }
            } 
        }
        #endregion
        
        
    }
}